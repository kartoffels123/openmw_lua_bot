{
  "folder_name": "The Lucky Fellow",
  "lua_files": {
    "The Lucky Fellow-54611-1-0-1-1715373012\\mwse\\mods\\CoinFlip\\CoinFlip_g.lua": "local isOpenMW, I = pcall(require, \"openmw.interfaces\")\n\nlocal _, util = pcall(require, \"openmw.util\")\nlocal _, core = pcall(require, \"openmw.core\")\nlocal _, types = pcall(require, \"openmw.types\")\nlocal _, storage = pcall(require, \"openmw.storage\")\nlocal _, world = pcall(require, \"openmw.world\")\nlocal _, async = pcall(require, \"openmw.async\")\nlocal constant\nif isOpenMW then\n    constant = require(\"mwse.mods.CoinFlip.constant\")\n    if core and core.API_REVISION < 55 then\n        I.Settings.registerPage {\n            key = \"SettingsCoinFlip\",\n            l10n = \"SettingsTLF\",\n            name = \"The Lucky Fellow\",\n            description = \"Your OpenMW version is out of date. Please download a version of 0.49 from April 2024 or newer.\"\n        }\n        return {}\n    end\nelse\n    constant = require(\"CoinFlip.constant\")\nend\nlocal timeDelay = 0.01\nlocal useMountMenu = true\nlocal coinObj\nlocal coinDistance = 0\nlocal coinRot = 0\nlocal coinAscent = true\nlocal waitForPickup = false\nlocal coinOriginZPos\nlocal player\nlocal data = {}\nmath.randomseed(os.time())\n\n\nlocal function getPosition(x, y, z)\n    if isOpenMW then\n        return util.vector3(x, y, z)\n    else\n        return tes3vector3.new(x, y, z)\n    end\nend\nlocal function getValue(id)\n    if isOpenMW then\n        return data[id]\n    else\n        if not tes3.player.data.coinFlip then\n            tes3.player.data.coinFlip = {}\n        end\n        return tes3.player.data.coinFlip[id]\n    end\nend\nlocal function setValue(id,value)\n    if isOpenMW then\n         data[id] = value\n    else\n        if not tes3.player.data.coinFlip then\n            tes3.player.data.coinFlip = {}\n        end\n         tes3.player.data.coinFlip[id] = value\n    end\nend\nlocal function getItemRecordId(obj)\n    if isOpenMW then\n        return obj.recordId\n    else\n        return obj.baseObject.id:lower()\n    end\nend\nlocal function playSound(id)\n    if isOpenMW then\n        player:sendEvent(\"CF_PlaySound\")\n    else\n        tes3.playSound({ sound = id })\n    end\nend\nlocal function showPlayerMessage(msg)\n    if isOpenMW then\n        player:sendEvent(\"CF_ShowMessage\", msg)\n    else\n        tes3.messageBox(msg)\n    end\nend\nlocal function moveIntoInv(item)\n    if isOpenMW then\n        playSound(\"item misc up\")\n        item:moveInto(player)\n    else\n        local id = item.object.id\n\n        item:delete()\n        tes3.addItem({ reference = tes3.player, item = id, count = 1 })\n    end\nend\nlocal function gameIsPaused()\n    if isOpenMW then\n    else\n        return tes3.menuMode()\n    end\nend\nlocal function addSpellEffects(id)\n    if isOpenMW then\n        --play sound\n        types.Actor.activeSpells(player):add({ id = id, effects = { 0 }, ignoreResistances = true, ignoreSpellAbsorption = true, ignoreReflect = true, stackable = true, })\n    else\n        tes3.applyMagicSource { reference = tes3.player, source = id, bypassResistances = true }\n    end\nend\nlocal function addUnluckyEffects(id)\n    playSound(\"destruction hit\")\n    if isOpenMW then\n        addSpellEffects(constant.unLuckySpellId)\n    else\n        local timescale = tes3.worldController.timescale.value\n        tes3.applyMagicSource({\n            reference = tes3.player,\n            bypassResistances = true,\n            name = constant.unluckySpellName,\n            effects = {\n                {\n                    id = tes3.effect[\"drainAttribute\"],\n                    attribute = tes3.attribute.luck,\n                    min = constant.luckModifier,\n                    max = constant.luckModifier,\n                    duration = (constant.hoursToApply / timescale) * 60 * 60,\n                },\n            },\n        })\n    end\nend\nlocal function addLuckyEffects(id)\n    playSound(\"restoration hit\")\n    if isOpenMW then\n        addSpellEffects(constant.luckySpellId)\n    else\n        local timescale = tes3.worldController.timescale.value\n        tes3.applyMagicSource({\n            reference = tes3.player,\n            bypassResistances = true,\n            name = constant.luckySpellName,\n            effects = {\n                {\n                    id = tes3.effect[\"fortifyAttribute\"],\n                    attribute = tes3.attribute.luck,\n                    min = constant.luckModifier,\n                    max = constant.luckModifier,\n                    duration = (constant.hoursToApply / timescale) * 60 * 60,\n                },\n            },\n        })\n    end\nend\nlocal function runWithDelay(delay, func)\n    if isOpenMW then\n        async:newUnsavableSimulationTimer(delay, func)\n    else\n        timer.start({ duration = delay, callback = func })\n    end\nend\nlocal function getPlayerLuck()\n    if isOpenMW then\n        return types.Actor.stats.attributes.luck(player).modified\n    else\n        return tes3.mobilePlayer.luck.current\n    end\nend\nlocal function coinFlipChance()\n    local val = getValue(\"coinFlipChance\")\n    if not val then\n         val = constant.startingChance\n    end\n    setValue(\"coinFlipChance\", val - constant.chanceIncrement)\n    print(\"chance is \" .. tostring(val))\n    return val --getPlayerLuck() * 0.01\nend\nlocal function getRotation(x, y, z)\n    --TODO: account for z rotation so it faces the player still\n    if isOpenMW then\n        local rot = util.transform.rotateY(y)\n        return rot\n    else\n        return tes3vector3.new(x, (y), z)\n    end\nend\nlocal function teleportObject(object, cell, position, rotation)\n    if isOpenMW then\n        object:teleport(cell, position, rotation)\n    else\n        tes3.positionCell({ reference = object, cell = cell, position = position, orientation = rotation })\n    end\nend\nlocal function randomBool()\n    if math.random() < coinFlipChance() * 0.01 then\n        return true\n    else\n        return false\n    end\nend\n\nlocal function incrementAmount()\n    local input = coinDistance\n    local a = 1    -- Start value\n    local b = 0.1  -- End value\n    local min = 0  -- Minimum input value\n    local max = 50 -- Maximum input value\n\n    -- Ensure the input is within the expected range\n    input = math.max(min, math.min(max, input))\n\n    -- Adjusted interpolation formula\n    local result = a + (b - a) * ((input - min) / (max - min))\n\n    return result * 3\nend\nlocal function teleportCoin()\n    local newZPos = coinOriginZPos + coinDistance\n\n    local newRot = getRotation(0, math.rad(coinRot), 0)\n    if coinDistance <= 0 and not coinAscent then\n        newZPos = coinOriginZPos\n        newRot = getRotation(0, math.rad(0), 0)\n        if randomBool() then\n            newRot = getRotation(0, math.rad(180), 0)\n            --newZPos = coinOriginZPos + 0.1111\n            --showPlayerMessage(\"Heads, you are lucky!\")\n            addLuckyEffects()\n            waitForPickup = true\n            runWithDelay(constant.pickUpDelay, function()\n                if waitForPickup then\n                moveIntoInv(coinObj)\n                waitForPickup = false\n                end\n            end)\n        else\n            addUnluckyEffects()\n            waitForPickup = true\n            runWithDelay(constant.pickUpDelay, function()\n                if waitForPickup then\n                moveIntoInv(coinObj)\n                waitForPickup = false\n                end\n            end)\n        end\n        --return\n    end\n    teleportObject(coinObj, coinObj.cell, getPosition(coinObj.position.x, coinObj.position.y, newZPos), newRot)\nend\nlocal function coinUpdate()\n    if coinAscent then\n        coinDistance = coinDistance + incrementAmount()\n        if coinDistance > 50 then\n            coinAscent = false\n        end\n    else\n        coinDistance = coinDistance - incrementAmount()\n    end\n    coinRot = coinRot + 10\n    teleportCoin()\n    if coinDistance <= 0 and not coinAscent then\n        return\n    end\n    runWithDelay(timeDelay, function()\n        coinUpdate()\n    end)\nend\nlocal function activateCoin(coin, player)\n    if gameIsPaused() then\n        return\n    end\n    if getItemRecordId(coin) == constant.coinId then\n        if waitForPickup then\n            waitForPickup = false\n        end\n        coinOriginZPos = coin.position.z\n        coinDistance = 0\n        coinRot = 0\n        coinAscent = true\n        coinObj = coin\n        runWithDelay(timeDelay, function()\n            coinUpdate()\n        end)\n        return false\n    end\nend\nlocal function activateMWSE(e)\n    return activateCoin(e.target)\nend\nif isOpenMW then\n    I.Activation.addHandlerForType(types.Miscellaneous, activateCoin)\nelse\n    event.register(tes3.event.activate, activateMWSE)\n    return {\n    }\nend\nreturn {\n    engineHandlers = {\n        onPlayerAdded = function(p)\n            player = p\n        end,\n        onSave = function ()\n            return {data = data}\n        end,\n        onLoad = function (data)\n            if data then\n                data = data.data\n            end\n        end\n    },\n    eventHandlers = {\n        CF_SetPlayer = function(plr)\n            player = plr\n        end,\n    }\n}\n",
    "The Lucky Fellow-54611-1-0-1-1715373012\\mwse\\mods\\CoinFlip\\CoinFlip_p.lua": "local ui = require(\"openmw.ui\")\nlocal core = require(\"openmw.core\")\nlocal self = require(\"openmw.self\")\nlocal ambient = require(\"openmw.ambient\")\n\nreturn {\n    eventHandlers = {\n        CF_ShowMessage = function(msg)\n            ui.showMessage(msg)\n        end,\n        CF_PlaySound = function(sound)\n            ambient.playSound(sound)\n        end,\n    },\n    engineHandlers = {\n        onLoad = function()\n            core.sendGlobalEvent(\"CF_SetPlayer\", self.object)\n        end\n    }\n}\n",
    "The Lucky Fellow-54611-1-0-1-1715373012\\mwse\\mods\\CoinFlip\\constant.lua": "return {coinId = \"aa_coin_the_coin\",\n\n\n\n--NOTE: If you change these values, it will only apply to MWSE, you must change the spell in the CS for it to take effect in OpenMW.\nluckySpellName = \"Lucky Coin\",\nunluckySpellName = \"Unlucky Coin\",\nluckModifier = 50,\nhoursToApply = 24,\n--See above\n\nluckySpellId = \"zhac_spell_lucky\",\nunLuckySpellId = \"zhac_spell_unlucky\",\nchanceIncrement = 1,--Chance reduced by this amount each flip\nstartingChance = 80,--The chance of a successful effect when first flipping the coin. Reduced by 1 for each subsequent flip.\npickUpDelay = 1--After the coin is flipped, and lands, the game will wait this long before moving it into the player's inventory.\n\n}",
    "The Lucky Fellow-54611-1-0-1-1715373012\\mwse\\mods\\CoinFlip\\main.lua": "require(\"CoinFlip.CoinFlip_g\")"
  }
}