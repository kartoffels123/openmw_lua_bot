{
  "folder_name": "Write Books and Scrolls",
  "lua_files": {
    "write scrolls and books-53977-1-2-1715166227\\write scrolls and books\\Data_Files\\Scripts\\write scrolls and books\\Book.lua": "local self=require('openmw.self')\nlocal core=require('openmw.core')\nlocal types=require('openmw.types')\n\n\n\nlocal function onActivated(data)\n\t\n\tlocal pagejump=\"<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR> \"\n\n\tif self.type==types.Book and (types.Book.record(self).name==\"Blank Book\" or types.Book.record(self).name==\"Blank Scroll\" or string.find(types.Book.record(self).text,pagejump)) then\n\t\tdata:sendEvent(\"Write\",{Book=self})\n\tend\n\n\n\nend\n\n\n\nreturn {\n\tengineHandlers = { onActivated=onActivated}\n}",
    "write scrolls and books-53977-1-2-1715166227\\write scrolls and books\\Data_Files\\Scripts\\write scrolls and books\\Global.lua": "local world = require('openmw.world')\nlocal types = require('openmw.types')\nlocal interfaces = require('openmw.interfaces')\nlocal players = world.players\n\n\nlocal function CreateWritting(data)\n\tlocal booknbr=1\n\tlocal pagejump=\"<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR> \"\n\tprint(data.Title)\n\tworld.createObject(world.createRecord(types.Book.createRecordDraft({name=data.Title,isScroll=data.scroll,model=types.Book.record(data.Book).model,text=tostring(data.Text)..pagejump..pagejump..pagejump..pagejump,weight=0.2,value=5,icon=types.Book.record(data.Book).icon})).id,1):moveInto(types.Actor.inventory(data.actor))\n\tdata.Book:remove()\n\nend\n\n\nreturn {\n\teventHandlers = {CreateWritting=CreateWritting},\n\tengineHandlers = {\n        onUpdate = function()\n\n\t\tend\n\n\t},\n}",
    "write scrolls and books-53977-1-2-1715166227\\write scrolls and books\\Data_Files\\Scripts\\write scrolls and books\\Player.lua": "local self=require('openmw.self')\nlocal ui=require('openmw.ui')\nlocal core=require('openmw.core')\nlocal types = require('openmw.types')\nlocal util = require('openmw.util')\nlocal async = require('openmw.async')\nlocal interfaces = require('openmw.interfaces')\nlocal input = require('openmw.input')\n\nTitleEditing=nil\nTitleBox=nil\nTextEditing=nil\nTextBox=nil\nButton=nil\nBook=nil\nPagejump=\"<BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR><BR> \"\n\nlocal function TextClick(mouseEvent, data)\n\tTextBox:destroy()\n\tprint(Book)\n\tif string.find(types.Book.record(Book).text,Pagejump) and Text then\n\t\tText=string.gsub(types.Book.record(Book).text,Pagejump..Pagejump..Pagejump..Pagejump,\"\")..\"<BR>\"..Text\n\t\tcore.sendGlobalEvent('CreateWritting', {actor=self,Book=Book,scroll=types.Book.record(Book).isScroll, Title=types.Book.record(Book).name, Text=Text})\n\telse\n\t\tcore.sendGlobalEvent('CreateWritting', {actor=self,Book=Book,scroll=types.Book.record(Book).isScroll, Title=Title, Text=Text})\n\tend\nend\n\n\nlocal function TitleClick(mouseEvent, data)\n\t\n\n\tif TitleBox then\n\t\tTitleBox:destroy()\n\t\tprint(Title)\n\tend\n\tTextEditing={template = interfaces.MWUI.templates.textEditBox,name=\"text\",layer='Windows', type = ui.TYPE.TextEdit,props = {autoSize=false,relativeSize = util.vector2(300/600,200/500),multiline=true,relativePosition=util.vector2(0.5, 0.5),anchor = util.vector2(0.5, 0.5),text=\"*your text here*\",textSize=30,textColor=util.color.rgb(0.5,0.5,0.5)},events={textChanged=async:callback(function(text) Text=text end)}}\n\tButton={name=\"textbutton\",layer='Windows', type = ui.TYPE.Text,props = {autoSize=true,relativePosition=util.vector2(1, 0),anchor = util.vector2(-1, 0.5),text=\"Validate Text\",textSize=40,textColor=util.color.rgb(0.5,0.5,0.5)},events={mousePress = async:callback(TextClick)}}\n\tTextBox=ui.create({name=\"TextBox\",layer='Windows',type=ui.TYPE.Flex,props={autoSize=false,arrange=ui.ALIGNMENT.Center,relativeSize = util.vector2(300/600,200/520),relativePosition = util.vector2(1/2, 3/5),anchor = util.vector2(1/2, 1/2)},content=ui.content{TextEditing,Button}})\n\nend\n\n\nlocal function Write(data)\n\tText=\"\"\n\tBook=data.Book\n\tprint(Book)\n\tif string.find(types.Book.record(Book).text,Pagejump)==nil then\n\t\tTitleEditing={template = interfaces.MWUI.templates.textEditBox,name=\"title\",layer='Windows', type = ui.TYPE.TextEdit,props = {autoSize=false,relativeSize = util.vector2(300/600,200/500),multiline=true,relativePosition=util.vector2(0.5, 0.5),anchor = util.vector2(0.5, 0.5),text=\"*your title here*\",textSize=30,textColor=util.color.rgb(0.5,0.5,0.5)},events={textChanged=async:callback(function(text) Title=text end)}}\n\t\tButton={name=\"titlebutton\",layer='Windows', type = ui.TYPE.Text,props = {autoSize=true,relativePosition=util.vector2(1, 0),anchor = util.vector2(0.5, 0.5),text=\"Validate Title\",textSize=40,textColor=util.color.rgb(0.5,0.5,0.5)},events={mousePress = async:callback(TitleClick)}}\n\t\tTitleBox=ui.create({name=\"TitleBox\",layer='Windows',type=ui.TYPE.Flex,props={autoSize=false,arrange=ui.ALIGNMENT.Center,relativeSize = util.vector2(300/600,200/520),relativePosition = util.vector2(1/2, 3/5),anchor = util.vector2(1/2, 1/2)},content=ui.content{TitleEditing,Button}})\n\telse\n\t\tTitleClick()\n\tend\nend\n\n\n\n\n\nlocal function onFrame()\n\tif not(interfaces.UI.getMode()==\"Scroll\") and not(interfaces.UI.getMode()==\"Book\") then\n\t\tif TitleBox then\n\t\t\tif TitleBox.layout then\n\t\t\t\tTitleBox:destroy()\n\t\t\tend\n\t\tend\n\t\tif TextBox then\n\t\t\tif TextBox.layout then\n\t\t\t\tTextBox:destroy()\n\t\t\tend\n\t\tend\n\tend\nend\n\nreturn {\n\teventHandlers = {Write=Write,},\n\tengineHandlers = {\n\n        onFrame = onFrame,\n\t}\n\n}"
  }
}