{
  "folder_name": "Perfumed Vampires",
  "lua_files": {
    "Perfumed Vampires 1.2-53714-1-2-1721663049\\PerfumedVampires_1.2\\scripts\\PerfumedVampires\\global.lua": "local core = require('openmw.core')\nlocal world = require('openmw.world')\nlocal types = require('openmw.types')\nlocal async = require('openmw.async')\nlocal I = require('openmw.interfaces')\n\nlocal PERFUME_ID_SET = {\n   ['potion_t_bug_musk_01'] = true,\n}\n\n\nfor i = 1, 6 do\n   PERFUME_ID_SET[('t_com_subst_perfume_%02d'):format(i)] = true\nend\n\nlocal function maxEffectDuration(rec)\n   local duration = 0\n   for _, effect in ipairs(rec.effects) do\n      if effect.duration > duration then\n         duration = effect.duration\n      end\n   end\n   return duration\nend\n\nlocal function hasVampirism(player)\n   local globals = world.mwscript.getGlobalVariables(player)\n   return globals.pcvampire ~= -1 and types.Actor.activeEffects(player):getEffect('vampirism').magnitudeModifier > 0\nend\n\nlocal function setVampirism(player, active)\n   if not hasVampirism(player) then return end\n   types.Actor.activeEffects(player):set(active and 1 or 0, 'vampirism')\n   local globals = world.mwscript.getGlobalVariables(player)\n   globals.pcvampire = active and 1 or 0\nend\n\nlocal actorPefumes = {}\n\nlocal perfumeRanOut = async:registerTimerCallback('urm_PerfumedVampires_perfumeRanOut', function(player)\n   local count = (actorPefumes[player.id] or 0) - 1\n   if count <= 0 then\n      setVampirism(player, true)\n      actorPefumes[player.id] = nil\n   end\nend)\n\nI.ItemUsage.addHandlerForType(types.Potion, function(potion, actor)\n   if actor.type ~= types.Player then return end\n   if not PERFUME_ID_SET[potion.recordId] then return end\n   if not hasVampirism(actor) then return end\n\n   actorPefumes[actor.id] = (actorPefumes[actor.id] or 0) + 1\n   setVampirism(actor, false)\n   local potionRecord = types.Potion.record(potion)\n   local duration = maxEffectDuration(potionRecord)\n   async:newGameTimer(duration * core.getGameTimeScale(), perfumeRanOut, actor)\nend)\n\n\n\n\n\nreturn {\n   interfaceName = 'urm_PerfumedVampires',\n   interface = {\n      version = 1,\n      registerPerfume = function(id)\n         PERFUME_ID_SET[id] = true\n      end,\n      isPerfumed = function(actor)\n         return (actorPefumes[actor.id] or 0) > 0\n      end,\n      isVampire = function(actor)\n         return hasVampirism(actor)\n      end,\n      onSave = function()\n         return {\n            actorPefumes = actorPefumes,\n         }\n      end,\n      onLoad = function(saved)\n         if not saved then return end\n         actorPefumes = saved.actorPefumes\n      end,\n   },\n}\n"
  }
}