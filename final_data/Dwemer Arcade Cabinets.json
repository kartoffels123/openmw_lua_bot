{
  "folder_name": "Dwemer Arcade Cabinets",
  "lua_files": {
    "V0.2-54781-0--1717360427\\Arcade Cabinets\\Data_Files\\Scripts\\ArcadeCabinets\\Activator.lua": "local self=require('openmw.self')\nlocal core=require('openmw.core')\nlocal types=require('openmw.types')\n\n\n\nlocal function onActivated(data)\n\t\n\tif self.type.record(self).id==\"arcadecabinet0\" then\n\t\tdata:sendEvent(\"ArcadeCabinet\",{Game=0})\n\telseif self.type.record(self).id==\"arcadecabinet1\" then\n\t\tdata:sendEvent(\"ArcadeCabinet\",{Game=1})\n\telseif self.type.record(self).id==\"arcadecabinet2\" then\n\t\tdata:sendEvent(\"ArcadeCabinet\",{Game=2})\n\tend\n\n\n\nend\n\n\n\nreturn {\n\tengineHandlers = { onActivated=onActivated}\n}",
    "V0.2-54781-0--1717360427\\Arcade Cabinets\\Data_Files\\Scripts\\ArcadeCabinets\\Global.lua": "local world = require('openmw.world')\nlocal types = require('openmw.types')\nlocal interfaces = require('openmw.interfaces')\nlocal util = require('openmw.util')\nlocal players = world.players\nlocal ModVersion=0.2\n\n\nlocal ArcadesPlaced={}\nArcadesPlaced[1]=0\nArcadesPlaced[2]={}\nlocal ArcadesPlaces={\n\t\t\t\t\t\t{\"Odrosal, Dwemer Training Academy\",util.vector3(-257, -3150, 200),util.transform.rotateZ(0)},\n\t\t\t\t\t\t{\"Arkngthand, Hall of Centrifuge\",util.vector3(-991, 3236, 1535),util.transform.rotateZ(math.pi*5/4)},\n\t\t\t\t\t\t{\"Galom Daeus, Observatory\",util.vector3(3196, 4646, 12801),util.transform.rotateZ(math.pi*5/4)},\n\t\t\t\t\t\t{\"Druscashti, Upper Level\",util.vector3(1270, 214, -1215),util.transform.rotateZ(0)},\n\t\t\t\t\t\t{\"Aleft\",util.vector3(3172, 832, 193),util.transform.rotateZ(0.8)},\n\t\t\t\t\t\t{\"Mzuleft\",util.vector3(-1517, 4289, -607),util.transform.rotateZ(-1.14)},\n\t\t\t\t\t\t{\"Mzahnch\",util.vector3(2701, 992, 257),util.transform.rotateZ(-0.8)},\n\t\t\t\t\t\t{\"Nchurdamz, Interior\",util.vector3(1223, 1366, -702),util.transform.rotateZ(0)},\n\t\t\t\t\t\t{\"Bthuand\",util.vector3(1909, -831, -415),util.transform.rotateZ(math.pi/2)},\n\t\t\t\t\t\t{\"Gnisis, Bethamez\",util.vector3(-463, -2722, -191),util.transform.rotateZ(-math.pi/2)},\n\t\t\t\t\t\t{\"Endusal, Kagrenac's study\",util.vector3(986, -1132, -767),util.transform.rotateZ(math.pi/2)},\n\t\t\t\t\t\t{\"Nchardumz\",util.vector3(-594, 3505, -575),util.transform.rotateZ(-math.pi/2)},\n\t\t\t\t\t\t{\"Nchardumz Lower Level\",util.vector3(-339, 385, -255),util.transform.rotateZ(-math.pi/2)},\n\t\t\t\t\t\t{\"Nchuleftingth, Upper Levels\",util.vector3(2661, 1355, -191),util.transform.rotateZ(-0.3)},\n\t\t\t\t\t\t{\"Nchardahrk\",util.vector3(1434, 5755, 113),util.transform.rotateZ(0)},\n\t\t\t\t\t}\n\n\nlocal function onSave()\n\treturn{ArcadesPlaced=ArcadesPlaced,ModVersion=ModVersion}\nend\n\nlocal function onLoad(data)\n\tif data.ModVersion then\n\t\tArcadesPlaced=data.ArcadesPlaced\n\t\tif ModVersion~=data.ModVersion then\n\t\t\tprint(\"here\")\n\t\t\tArcadesPlaced[1]=0\n\t\t\tModVersion=data.ModVersion\n\t\tend\n\tend\nend\n\nlocal function Remove(data)\n\tdata.object:remove(data.number)\nend\n\nlocal function onUpdate()\n\tif ArcadesPlaced[1]==50 then\n\t\tif ArcadesPlaced[2] then\n\t\t\tfor i, Arcade in pairs(ArcadesPlaced[2]) do\n\t\t\t\tArcade.enabled=false\n\t\t\tend\n\t\tend\n\t\tfor i, place in pairs(ArcadesPlaces) do\n\t\t\tArcadesPlaced[2][i]=world.createObject(\"ArcadeCabinet\"..math.random(0,2),1)\n\t\t\tArcadesPlaced[2][i]:teleport(place[1],place[2],{rotation=place[3],onGround=true})\n\t\tend\n\n\t\tArcadesPlaced[1]=ArcadesPlaced[1]+1\n\telseif ArcadesPlaced[1]<50 then\n\t\tArcadesPlaced[1]=ArcadesPlaced[1]+1\n\tend\nend\n\nreturn {\n\teventHandlers = {Remove=Remove},\n\tengineHandlers = {\n        onUpdate = onUpdate,\n\t\tonSave=onSave,\n\t\tonLoad=onLoad,\n\n\t},\n}",
    "V0.2-54781-0--1717360427\\Arcade Cabinets\\Data_Files\\Scripts\\ArcadeCabinets\\Player.lua": "local self=require('openmw.self')\nlocal ui=require('openmw.ui')\nlocal core=require('openmw.core')\nlocal types = require('openmw.types')\nlocal util = require('openmw.util')\nlocal async = require('openmw.async')\nlocal I = require('openmw.interfaces')\nlocal input = require('openmw.input')\nlocal ambient = require('openmw.ambient')\n\n\n\n\n\nlocal screen_width = ui.screenSize().x\nlocal screen_height = ui.screenSize().y\n\nlocal paddle_1_width = 20/500\nlocal paddle_1_height = 70/300\nlocal paddle_1_x = 0\nlocal paddle_1_y = ((screen_height / 2) -  (paddle_1_height / 2))/screen_height\nlocal paddle_1_speed = 1--400\n\nlocal paddle_2_width = 20/500\nlocal paddle_2_height = 70/300\nlocal paddle_2_x = (1- paddle_2_width)\nlocal paddle_2_y = ((screen_height / 2) -  (paddle_1_height / 2))/screen_height\nlocal paddle_2_speed = 1--400\n\nlocal ball_width = 20/500\nlocal ball_height = 20/300\nlocal ball_x = ((1 / 2) - (ball_width / 2))\nlocal ball_y = ((1 / 2) - (ball_height / 2))\nlocal ball_speed_x = -0.1---200\nlocal ball_speed_y = 0.1--200\nlocal ball_speed_modifier=0.2\n\nlocal Pong={}\nlocal PongTimer={}\n\n\n\nlocal Catch={}\nlocal CatchTimer={}\nlocal PointsValue=0\nlocal CatchVFall=0.005\nlocal CatchVUp=0.005\nlocal CatchVDown=100\nlocal CatchUp1=CatchVUp-0.001\nlocal CatchUp2=-CatchVUp\n\nlocal J2=false\n\n\nlocal Bird={}\nlocal BirdTimer={}\nlocal BirdJumpJ1=false\nlocal BirdTargetJumpJ1=false\nlocal BirdJumpJ2=false\nlocal BirdTargetJumpJ2=false\n\n\nlocal function CheckPointInSquare(PUI1,UI2)\n\tlocal P0=UI2.props.relativePosition\n\tlocal P2=UI2.props.relativePosition+UI2.props.relativeSize\n\tif PUI1.y>=P0.y and PUI1.y<=P2.y and PUI1.x<=P2.x and PUI1.x>=P0.x then\n\t\treturn(true)\n\tend\n\nend\n\nlocal function Collision(UI1,UI2)\n\tif CheckPointInSquare(UI1.props.relativePosition,UI2) \n\t\tor CheckPointInSquare(util.vector2(UI1.props.relativePosition.x+UI1.props.relativeSize.x,UI1.props.relativePosition.y),UI2) \n\t\tor CheckPointInSquare(UI1.props.relativePosition+UI1.props.relativeSize,UI2) \n\t\tor CheckPointInSquare(util.vector2(UI1.props.relativePosition.x,UI1.props.relativePosition.y+UI1.props.relativeSize.y),UI2) then\n\t\treturn(true)\n\tend\n\nend\t\n\nlocal function CatchFall(objet)\n\tif Catch.layout then\n\t\tif Catch.layout.content[objet].props.visible==true then\n\t\t\tCatch.layout.content[objet].props.relativePosition=util.vector2(Catch.layout.content[objet].props.relativePosition.x,Catch.layout.content[objet].props.relativePosition.y+CatchVFall*(objet/7))\n\t\tend\n\t\tif (Catch.layout.content[1].props.relativePosition-Catch.layout.content[objet].props.relativePosition):length()<0.05 or (Catch.layout.content[2].props.relativePosition-Catch.layout.content[objet].props.relativePosition):length()<0.05 or Catch.layout.content[objet].props.relativePosition.y>0.95 then\n\t\t\tif Catch.layout.content[objet].props.relativePosition.y>0.95 then\n\t\t\t\tambient.playSound(\"ArcadeLoose\")\n\t\t\t\tCatch:destroy()\n\t\t\t\tCatch={}\n\t\t\t\tCatchTimer={}\n\t\t\t\tI.UI.removeMode(I.UI.MODE.Interface)\n\t\t\telse\n\t\t\t\tambient.playSound(\"PongHit\"..math.random(2))\n\t\t\t\tPointsValue=PointsValue+1\n\t\t\t\tCatch.layout.content[5].props.text=tostring(PointsValue)\n\t\t\t\tif math.random(2)==1 then\n\t\t\t\t\tCatch.layout.content[objet].props.relativePosition=util.vector2(Catch.layout.content[3].props.relativePosition.x,Catch.layout.content[4].props.relativePosition.y)\n\t\t\t\telse\n\t\t\t\t\tCatch.layout.content[objet].props.relativePosition=util.vector2(Catch.layout.content[4].props.relativePosition.x,Catch.layout.content[4].props.relativePosition.y)\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tambient.playSound(\"CatchFall\")\n\t\t\tend\n\n\t\tend\n\t\tCatch:update()\n\tend\n\nend\n\n\n\nlocal function ArcadeCabinet(data)\n\tif types.Actor.inventory(self):find(\"misc_dwrv_coin00\") then\n\t\tui.showMessage(\"You insert a dwemer coin\")\n\t\tambient.playSound(\"InsertCoin\")\n\t\tcore.sendGlobalEvent(\"Remove\",{object=types.Actor.inventory(self):find(\"misc_dwrv_coin00\"),number=1})\n\t\tJ2=false\n\t\tif data.Game==0 and Catch.layout==nil then\n\t\t\tPointsValue=0\n\t\t\tCatchVFall=0.005\n\t\t\tI.UI.setMode(I.UI.MODE.Interface, { windows = {} })\n\t\t\tCatch=ui.create({layer = 'Windows', type = ui.TYPE.Image, \n\t\t\tprops = {color=util.color.rgb(0, 0, 0), autoSize=true, relativeSize = util.vector2(1, 1), relativePosition = util.vector2(0, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },\n\t\t\tcontent=ui.content{\n\t\t\t\t{type = ui.TYPE.Image, props = {  color=util.color.rgb(0, 1, 0), visible=true, autoSize=true, relativeSize = util.vector2(0.1, 0.05), relativePosition = util.vector2(0.5, 0.95), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = {  color=util.color.rgb(0, 0, 1),visible=true, autoSize=true, relativeSize = util.vector2(0.1, 0.05), relativePosition = util.vector2(0.98, 0.95), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(0.1, 0.1), relativePosition = util.vector2(0.5, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(0.1, 0.1), relativePosition = util.vector2(0.5, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Text, props = {textSize = 35, textColor = util.color.rgb(1, 1, 1), visible=true, autoSize=true, relativeSize = util.vector2(1, 1), relativePosition = util.vector2(0, 0), anchor = (util.vector2(0, 0)), text=tostring(PointsValue)},},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(0.05, 0.05), relativePosition = util.vector2(0.5, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(0.05, 0.05), relativePosition = util.vector2(0.5, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(0.05, 0.05), relativePosition = util.vector2(0.5, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t   \n\t\t\t}})\t\n\t\t\tambient.playSound(\"CatchFall\")\n\n\n\t\telseif data.Game==1 and Bird.layout==nil then\n\t\t\tPointsValue=0\n\t\t\tBirdJumpJ1=false\n\t\t\tBirdJumpJ2=false\n\t\t\tI.UI.setMode(I.UI.MODE.Interface, { windows = {} })\n\t\t\tBird=ui.create({layer = 'Windows', type = ui.TYPE.Image, \n\t\t\tprops = { color=util.color.rgb(0.5, 0.5, 1), autoSize=true, relativeSize = util.vector2(1, 1), relativePosition = util.vector2(0, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },\n\t\t\tcontent=ui.content{\n\t\t\t\t{type = ui.TYPE.Image, props = {  color=util.color.rgb(1, 1, 0), visible=true, autoSize=true, relativeSize = util.vector2(0.05, 0.05), relativePosition = util.vector2(0.1, 0.5), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = {  color=util.color.rgb(0, 1, 1),visible=false, autoSize=true, relativeSize = util.vector2(0.05, 0.05), relativePosition = util.vector2(0.1, 0.5), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { color=util.color.rgb(0, 1, 0), visible=true, autoSize=true, relativeSize = util.vector2(0.08, 0.8), relativePosition = util.vector2(0.6, -0.4), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { color=util.color.rgb(0, 1, 0), visible=true, autoSize=true, relativeSize = util.vector2(0.08, 0.8), relativePosition = util.vector2(0.6, 0.6), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { color=util.color.rgb(0, 1, 0), visible=true, autoSize=true, relativeSize = util.vector2(0.08, 0.8), relativePosition = util.vector2(1.1, -0.4), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { color=util.color.rgb(0, 1, 0), visible=true, autoSize=true, relativeSize = util.vector2(0.08, 0.8), relativePosition = util.vector2(1.1, 0.6), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Text, props = { textSize = 35, textColor = util.color.rgb(1, 1, 1), visible=true, autoSize=true, relativeSize = util.vector2(1, 1), relativePosition = util.vector2(0, 0), anchor = (util.vector2(0, 0)), text=tostring(PointsValue)},},\n\t\t\t\t\n\t\t\t   \n\t\t\t}})\t\n\t\t\t\n\t\t\tBirdTimer[1]=core.getRealTime()\n\t\t\tPointsValue=0\n\n\t\telseif data.Game==2 and Pong.layout==nil then\n\t\t\tI.UI.setMode(I.UI.MODE.Interface, { windows = {} })\n\t\t\tPong=ui.create({layer = 'Windows', type = ui.TYPE.Image, \n\t\t\tprops = { color=util.color.rgb(0, 0, 0),autoSize=true, relativeSize = util.vector2(1, 1), relativePosition = util.vector2(0, 0), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },\n\t\t\tcontent=ui.content{\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(paddle_1_width, paddle_1_height), relativePosition = util.vector2(paddle_1_x, paddle_1_y), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(paddle_2_width, paddle_2_height), relativePosition = util.vector2(paddle_2_x, paddle_2_y), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t\t{type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(ball_width, ball_height), relativePosition = util.vector2(ball_x, ball_y), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n\t\t\t}})\n\t\t\tprint(Pong.layout.layer)\n\t\t\tPongTimer[1]=core.getRealTime()\n\n\t\t\tpaddle_1_x = 0\n\t\t\tpaddle_1_y = ((screen_height / 2) -  (paddle_1_height / 2))/screen_height\n\t\t\tpaddle_1_speed = 1--400\n\n\t\t\tpaddle_2_x = (1- paddle_2_width)\n\t\t\tpaddle_2_y = ((screen_height / 2) -  (paddle_1_height / 2))/screen_height\n\t\t\tpaddle_2_speed = 1--400\n\n\t\t\tball_x = ((1 / 2) - (ball_width / 2))\n\t\t\tball_y = ((1 / 2) - (ball_height / 2))\n\t\t\tball_speed_x = -0.1---200\n\t\t\tball_speed_y = 0.1--200\n\t\tend\n\telse\n\t\tui.showMessage(\"You need to insert a dwemer coin\")\n\tend\nend\n\nlocal function onFrame(dt)\n\tif Catch.layout then\n\t\tif J2==true then\n\t\t\tCatchVFall=0.007\n\t\tend\n        if Catch.layout.content[3].props.relativePosition.x>.95 then\n            CatchUp1=-CatchVUp+0.001\n        elseif Catch.layout.content[3].props.relativePosition.x<0.05 then\n            CatchUp1=CatchVUp-0.001\n        end\n        if Catch.layout.content[4].props.relativePosition.x>0.95 then\n            CatchUp2=-CatchVUp\n        elseif Catch.layout.content[4].props.relativePosition.x<0.05 then\n            CatchUp2=CatchVUp\n        end\n        Catch.layout.content[3].props.relativePosition=util.vector2(Catch.layout.content[3].props.relativePosition.x+CatchUp1,0)\n        Catch.layout.content[4].props.relativePosition=util.vector2(Catch.layout.content[4].props.relativePosition.x+CatchUp2,0)\n\n\t\tif input.isActionPressed(input.ACTION.MoveRight) and (Catch.layout.content[1].props.relativePosition.x+1/CatchVDown)<0.95 then\n        \tCatch.layout.content[1].props.relativePosition=util.vector2(Catch.layout.content[1].props.relativePosition.x+1/CatchVDown,0.95)\n\t\telseif input.isActionPressed(input.ACTION.MoveLeft) and (Catch.layout.content[1].props.relativePosition.x-1/CatchVDown)>0  then\n        \tCatch.layout.content[1].props.relativePosition=util.vector2(Catch.layout.content[1].props.relativePosition.x-1/CatchVDown,0.95)\n\t\tend\n\n\t\tif input.isActionPressed(input.ACTION.QuickKey2) and (Catch.layout.content[2].props.relativePosition.x+1/CatchVDown)<0.95 then\n\t\t\tJ2=true\n        \tCatch.layout.content[2].props.relativePosition=util.vector2(Catch.layout.content[2].props.relativePosition.x+1/CatchVDown,0.95)\n\t\telseif input.isActionPressed(input.ACTION.QuickKey1) and (Catch.layout.content[2].props.relativePosition.x-1/CatchVDown)>0  then\n\t\t\tJ2=true\n        \tCatch.layout.content[2].props.relativePosition=util.vector2(Catch.layout.content[2].props.relativePosition.x-1/CatchVDown,0.95)\n\t\tend\n\n\t\tCatchFall(6)\n\t\tCatchFall(7)\n\t\tCatchFall(8)\n\t\t\t\n\t\tif I.UI.getMode() == nil then\n\t\t\tif CatchTimer[2]==nil  then\n\t\t\t\tCatchTimer[2]=true\n\t\t\telse\n\t\t\t\tCatch:destroy()\n\t\t\t\tCatch={}\n\t\t\t\tCatchTimer={}\n\t\t\tend\n\t\tend\n\t\tCatchTimer[1]=core.getRealTime()\n\n\telseif Bird.layout then\n\t\t\t\t\n\t\tif I.UI.getMode() == nil then\n\t\t\tif BirdTimer[2]==nil  then\n\t\t\t\tBirdTimer[2]=true\n\t\t\telseif Bird.layout then\n\t\t\t\tBird:destroy()\n\t\t\t\tBird={}\n\t\t\t\tBirdTimer={}\n\t\t\tend\n\t\tend\n\n\t\tBird.layout.content[3].props.relativePosition=util.vector2(Bird.layout.content[3].props.relativePosition.x-(core.getRealTime()-BirdTimer[1])*0.1,Bird.layout.content[3].props.relativePosition.y)\n\t\tBird.layout.content[4].props.relativePosition=util.vector2(Bird.layout.content[4].props.relativePosition.x-(core.getRealTime()-BirdTimer[1])*0.1,Bird.layout.content[4].props.relativePosition.y)\n\t\tBird.layout.content[5].props.relativePosition=util.vector2(Bird.layout.content[5].props.relativePosition.x-(core.getRealTime()-BirdTimer[1])*0.1,Bird.layout.content[5].props.relativePosition.y)\n\t\tBird.layout.content[6].props.relativePosition=util.vector2(Bird.layout.content[6].props.relativePosition.x-(core.getRealTime()-BirdTimer[1])*0.1,Bird.layout.content[6].props.relativePosition.y)\n\n\t\tif Bird.layout.content[3].props.relativePosition.x<=0 then\n\t\t\tBird.layout.content[3].props.relativePosition=util.vector2(1,math.random(2,7)/10-0.8)\n\t\t\tBird.layout.content[4].props.relativePosition=util.vector2(1,Bird.layout.content[3].props.relativePosition.y+1)\n\t\t\tPointsValue=PointsValue+1\n\t\t\tBird.layout.content[7].props.text=tostring(PointsValue)\n\t\tend\n\t\tif Bird.layout.content[5].props.relativePosition.x<=0 then\n\t\t\tBird.layout.content[5].props.relativePosition=util.vector2(1,math.random(2,7)/10-0.8)\n\t\t\tBird.layout.content[6].props.relativePosition=util.vector2(1,Bird.layout.content[5].props.relativePosition.y+1)\n\t\t\tPointsValue=PointsValue+1\n\t\t\tBird.layout.content[7].props.text=tostring(PointsValue)\n\t\tend\n\n\n\t\tif input.isActionPressed(input.ACTION.MoveForward) and BirdJumpJ2==false then\t\n\t\t\tambient.playSound(\"Ponghit1\")\n\t\t\tJ2=true\n\t\t\tBirdJumpJ2=true\n\t\t\tBirdTargetJumpJ2=Bird.layout.content[2].props.relativePosition.y-0.1\n\t\t\tBird.layout.content[2].props.visible=true\n\t\tend\n\n\t\t\n\t\tif J2==false then\n\t\t\tBird.layout.content[2].props.relativePosition=Bird.layout.content[1].props.relativePosition\n\t\telseif BirdJumpJ2==true then\n\t\t\tif Bird.layout.content[2].props.relativePosition.y>BirdTargetJumpJ2 then\n\t\t\t\tBird.layout.content[2].props.relativePosition=util.vector2(0.4,Bird.layout.content[2].props.relativePosition.y-(core.getRealTime()-BirdTimer[1])*0.3)\n\t\t\telse \n\t\t\t\tBirdJumpJ2=false\n\t\t\tend\n\t\telse\n\t\t\tBird.layout.content[2].props.relativePosition=util.vector2(0.4,Bird.layout.content[2].props.relativePosition.y+(core.getRealTime()-BirdTimer[1])*0.1)\n\t\tend\n\n\n\n\t\tif input.isActionPressed(input.ACTION.Jump) and BirdJumpJ1==false then\n\t\t\tambient.playSound(\"Ponghit2\")\n\t\t\tBirdJumpJ1=true\n\t\t\tBirdTargetJumpJ1=Bird.layout.content[1].props.relativePosition.y-0.1\n\t\tend\n\n\t\tif BirdJumpJ1==true then\n\t\t\tif Bird.layout.content[1].props.relativePosition.y>BirdTargetJumpJ1 then\n\t\t\t\tBird.layout.content[1].props.relativePosition=util.vector2(0.4,Bird.layout.content[1].props.relativePosition.y-(core.getRealTime()-BirdTimer[1])*0.3)\n\t\t\telse \n\t\t\t\tBirdJumpJ1=false\n\t\t\tend\n\t\telse\n\t\t\tBird.layout.content[1].props.relativePosition=util.vector2(0.4,Bird.layout.content[1].props.relativePosition.y+(core.getRealTime()-BirdTimer[1])*0.1)\n\t\tend\n\n\t\t\n\t\tBird:update()\n\t\tBirdTimer[1]=core.getRealTime()\n\n\t\t\n\t\tif Bird.layout.content[1].props.relativePosition.y<0 or (Bird.layout.content[1].props.relativePosition.y>(1-Bird.layout.content[1].props.relativeSize.y)) or Collision(Bird.layout.content[1],Bird.layout.content[3]) or Collision(Bird.layout.content[1],Bird.layout.content[4]) or Collision(Bird.layout.content[1],Bird.layout.content[5]) or Collision(Bird.layout.content[1],Bird.layout.content[6]) then\t\n\t\t\tBird:destroy()\n\t\t\tBird={}\n\t\t\tI.UI.removeMode(I.UI.MODE.Interface)\n\t\t\tBirdTimer={}\n\t\t\tambient.playSound(\"ArcadeLoose\")\n\t\tend\n\n\t\tif J2 then\n\t\t\tif Bird.layout.content[2].props.relativePosition.y<0 or (Bird.layout.content[2].props.relativePosition.y>(1-Bird.layout.content[2].props.relativeSize.y)) or Collision(Bird.layout.content[2],Bird.layout.content[3]) or Collision(Bird.layout.content[2],Bird.layout.content[4]) or Collision(Bird.layout.content[2],Bird.layout.content[5]) or Collision(Bird.layout.content[2],Bird.layout.content[6]) then\t\n\t\t\t\tBird:destroy()\n\t\t\t\tBird={}\n\t\t\t\tBirdTimer={}\n\t\t\t\tI.UI.removeMode(I.UI.MODE.Interface)\n\t\t\t\tambient.playSound(\"ArcadeLoose\")\n\t\t\tend\n\t\tend\n\n\n\n\telseif Pong.layout then\n\n\t\tif input.isActionPressed(input.ACTION.MoveForward) then\n\t\t\tpaddle_1_y = paddle_1_y - (paddle_1_speed * (core.getRealTime()-PongTimer[1]))\n\t\tend\n\t\tif input.isActionPressed(input.ACTION.MoveBackward) then\n\t\t\tpaddle_1_y = paddle_1_y + (paddle_1_speed * (core.getRealTime()-PongTimer[1]))\n\t\tend\n\t\n\t\tif J2==false then \n\t\t\tif Pong.layout.content[2].props.relativePosition.y+0.01>Pong.layout.content[3].props.relativePosition.y then\n\t\t\t\tpaddle_2_y = paddle_2_y - (paddle_2_speed * (core.getRealTime()-PongTimer[1]))\n\t\t\tend\n\t\t\tif Pong.layout.content[2].props.relativePosition.y-0.01<Pong.layout.content[3].props.relativePosition.y then\n\t\t\t\tpaddle_2_y = paddle_2_y + (paddle_2_speed * (core.getRealTime()-PongTimer[1]))\n\t\t\tend\n\t\t\tif input.isActionPressed(input.ACTION.QuickKey1) or input.isActionPressed(input.ACTION.QuickKey2) then\n\t\t\t\tJ2=true\n\t\t\tend\n\t\telseif J2==true then\n\t\t\tif input.isActionPressed(input.ACTION.QuickKey1) then\n\t\t\t\tpaddle_2_y = paddle_2_y - (paddle_2_speed * (core.getRealTime()-PongTimer[1]))\n\t\t\tend\n\t\t\tif input.isActionPressed(input.ACTION.QuickKey2) then\n\t\t\t\tpaddle_2_y = paddle_2_y + (paddle_2_speed * (core.getRealTime()-PongTimer[1]))\n\t\t\tend\n\t\tend\n\n\n\n\t\tif paddle_1_y < 0 then\n\t\t\tpaddle_1_y = 0\n\t\telseif (paddle_1_y + paddle_1_height) > 1 then\n\t\t\tpaddle_1_y = 1 - paddle_1_height\n\t\tend\n\t\n\t\t-- NEW\n\t\tif paddle_2_y < 0 then\n\t\t\tpaddle_2_y = 0\n\t\telseif (paddle_2_y + paddle_2_height) > 1 then\n\t\t\tpaddle_2_y = 1 - paddle_2_height\n\t\tend\n\t\t--\n\t\n\t\tif ball_y < 0 then\n\t\t\tball_speed_y = math.abs(ball_speed_y+ball_speed_modifier)\n\t\t\tambient.playSound(\"Ponghit\"..math.random(2))\n\t\telseif (ball_y + ball_height) > 1  then\n\t\t\tball_speed_y = -math.abs(ball_speed_y+ball_speed_modifier)\n\t\t\tambient.playSound(\"Ponghit\"..math.random(2))\n\t\tend\n\t\n\t\tif ball_x <= paddle_1_width and\n\t\t\t(ball_y + ball_height) >= paddle_1_y and\n\t\t\tball_y < (paddle_1_y + paddle_1_height)\n\t\tthen\n\t\t\tball_speed_x = math.abs(ball_speed_x+ball_speed_modifier)\n\t\t\tambient.playSound(\"Ponghit\"..math.random(2))\n\t\tend\n\t\n\t\t-- NEW\n\t\tif (ball_x + ball_width) >= (1 - paddle_2_width) and\n\t\t\t(ball_y + ball_height) >= paddle_2_y and\n\t\t\tball_y < (paddle_2_y + paddle_2_height)\n\t\tthen\n\t\t\tball_speed_x = -math.abs(ball_speed_x+ball_speed_modifier)\n\t\t\tambient.playSound(\"Ponghit\"..math.random(2))\n\t\tend\n\t\t--\n\t\n\t\tif ball_x > 1 then\n\t\t\tball_x = (1 / 2) - (ball_width / 2)\n\t\t\tball_y = (1 / 2) - (ball_height / 2)\n\t\t\tball_speed_x = -0.1---200\n\t\t\tball_speed_y = 0.1--200\n\t\telseif ball_x + ball_width < 0  then\n\t\t\tPong:destroy()\n\t\t\tPong={}\n\t\t\tI.UI.removeMode(I.UI.MODE.Interface)\n\t\t\tPongTimer={}\n\t\t\tambient.playSound(\"ArcadeLoose\")\n\t\tend\n\t\t--print(ball_speed_x)\n\t\t--print(ball_speed_y)\n\n\t\tball_x = ball_x + (ball_speed_x * (core.getRealTime()-PongTimer[1]))\n\t\tball_y = ball_y + (ball_speed_y * (core.getRealTime()-PongTimer[1]))\n\t\tPong.layout.content=ui.content{\n            {type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(paddle_1_width, paddle_1_height), relativePosition = util.vector2(paddle_1_x, paddle_1_y), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n            {type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(paddle_2_width, paddle_2_height), relativePosition = util.vector2(paddle_2_x, paddle_2_y), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n            {type = ui.TYPE.Image, props = { visible=true, autoSize=true, relativeSize = util.vector2(ball_width, ball_height), relativePosition = util.vector2(ball_x, ball_y), anchor = (util.vector2(0, 0)), resource = ui.texture { path = \"textures/pixel.png\" }, },},\n        }\n\t\tPong:update()\n\n\t\tif I.UI.getMode() == nil then\n\t\t\tif PongTimer[2]==nil  then\n\t\t\t\tPongTimer[2]=true\n\t\t\telse\n\t\t\t\tPong:destroy()\n\t\t\t\tPong={}\n\t\t\t\tPongTimer={}\n\t\t\tend\n\t\tend\n\tPongTimer[1]=core.getRealTime()\n\tend\n\nend\n\nreturn {\n\teventHandlers = {ArcadeCabinet=ArcadeCabinet},\n\tengineHandlers = {\n\n        onFrame = onFrame,\n\t}\n\n}"
  }
}