{
  "folder_name": "(OpenMW 0.49) TakeAll Hotkey",
  "lua_files": {
    "TakeAll Hotkey-54402-1-5-1718814851\\TakeAll\\scripts\\TakeAll_global.lua": "local acti = require(\"openmw.interfaces\").Activation\nlocal types = require('openmw.types')\n\nlocal function activateBook(cont, player)\n\tplayer:sendEvent(\"TakeAll_openedBook\", {cont, player})\nend\n\nlocal function activateContainer(cont, player)\n\tplayer:sendEvent(\"TakeAll_openedContainer\", {cont, player})\nend\n\nlocal function takeAll(data)\n\tlocal player = data[1]\n\tlocal container = data[2]\n\tlocal i =0\n\tfor _, thing in pairs(types.Container.inventory(container):getAll(objtype)) do\n\t\ti=i+1\n\t\tthing:moveInto(types.Player.inventory(player))\n\tend\n\tplayer:sendEvent(\"TakeAll_closeUI\")\n\tif i>0 then\n\t\tplayer:sendEvent(\"TakeAll_PlaySound\",\"Item Ingredient Up\")\n\tend\nend\n\nlocal function takeBook(data)\n\tlocal player = data[1]\n\tlocal book = data[2]\n\tbook:moveInto(types.Player.inventory(player))\n\tplayer:sendEvent(\"TakeAll_closeUI\")\n\tplayer:sendEvent(\"TakeAll_PlaySound\",\"Item Book Up\")\nend\n\nacti.addHandlerForType(types.Book, activateBook)\nacti.addHandlerForType(types.Container, activateContainer)\nacti.addHandlerForType(types.NPC, activateContainer)\nacti.addHandlerForType(types.Creature, activateContainer)\n\nreturn {\n\teventHandlers = {\n\t\tTakeAll_takeAll = takeAll,\n\t\tTakeAll_takeBook = takeBook,\n\t}\n}",
    "TakeAll Hotkey-54402-1-5-1718814851\\TakeAll\\scripts\\TakeAll_player.lua": "local ui = require('openmw.ui')\nlocal I = require(\"openmw.interfaces\")\nlocal core = require(\"openmw.core\")\nlocal types = require('openmw.types')\nlocal self = require('openmw.self')\nlocal ambient = require('openmw.ambient')\n--local input = require('openmw.input')\nlocal KEY = require('openmw.input').KEY\nlocal resources = types.Actor.stats.dynamic\nTAKEALL_KEYBINDING = KEY.F\n\n\nOPENED_CONTAINER = nil\nOPENED_BOOK = nil\nOPENED_TIMESTAMP = 0\n\nlocal function closeUI()\n\tI.UI.setMode()\nend\n\nlocal function onKey(key)\n\t--print(core.getRealTime() - OPENED_TIMESTAMP)\n\tif key.code == TAKEALL_KEYBINDING and core.getRealTime() - OPENED_TIMESTAMP < 0.05 then\n\t\tif OPENED_CONTAINER and types.Actor.objectIsInstance(OPENED_CONTAINER) and resources.health(OPENED_CONTAINER).current >0 then\n\t\t\tui.showMessage(\"Cannot quickloot living Actors\")\n\t\t\treturn\n\t\tend\n\t\tif I.UI.getMode() == \"Container\" and OPENED_CONTAINER then\n\t\t\tif OPENED_CONTAINER.owner.recordId then\n\t\t\t\tui.showMessage(\"This container belongs to \"..OPENED_CONTAINER.owner.recordId)\n\t\t\telseif OPENED_CONTAINER.owner.factionId and types.NPC.getFactionRank(self, OPENED_CONTAINER.owner.factionId) == 0 then\n\t\t\t\tui.showMessage(\"This container belongs to \"..OPENED_CONTAINER.owner.factionId)\n\t\t\telseif OPENED_CONTAINER.owner.factionId and types.NPC.getFactionRank(self, OPENED_CONTAINER.owner.factionId) < OPENED_CONTAINER.owner.factionRank then\n\t\t\t\tui.showMessage(\"You need a higher rank to loot this container\")\n\t\t\telse\n\t\t\t\tcore.sendGlobalEvent(\"TakeAll_takeAll\",{self, OPENED_CONTAINER})\n\t\t\tend\n\t\telseif OPENED_BOOK then\n\t\t\tif OPENED_BOOK.owner.recordId then\n\t\t\t\tui.showMessage(\"This book belongs to \"..OPENED_BOOK.owner.recordId)\n\t\t\telseif OPENED_BOOK.owner.factionId and types.NPC.getFactionRank(self, OPENED_BOOK.owner.factionId) == 0 then\n\t\t\t\tui.showMessage(\"This book belongs to \"..OPENED_BOOK.owner.factionId)\n\t\t\telseif OPENED_BOOK.owner.factionId and types.NPC.getFactionRank(self, OPENED_BOOK.owner.factionId) < OPENED_BOOK.owner.factionRank then\n\t\t\t\tui.showMessage(\"You need a higher rank to loot this book\")\n\t\t\telse\n\t\t\t\tcore.sendGlobalEvent(\"TakeAll_takeBook\",{self, OPENED_BOOK})\n\t\t\tend\n\t\tend\n\tend\nend\n\nlocal function openedContainer(data)\n\tlocal obj = data[1]\n\tlocal actor = data[2]\n\tif types.Actor.objectIsInstance(obj) and resources.health(obj).current >0 then\n\t\treturn\n\tend\n\t\n\t--if I.UI.getMode() == \"Container\" then --prevent looting living actors\n\t\tOPENED_CONTAINER = obj\n\t\tOPENED_BOOK = nil\n\t\tOPENED_TIMESTAMP = 999999999\n\t--else\n\t--\tOPENED_CONTAINER = nil\n\t--\tOPENED_BOOK = nil\n\t--end\nend\n\nlocal function openedBook(data)\n\tlocal obj = data[1]\n\tlocal actor = data[2]\n\tOPENED_BOOK = obj\n\tOPENED_CONTAINER = nil\n\tOPENED_TIMESTAMP = 999999999\nend\n\nreturn {\n\tengineHandlers = { onKeyPress = onKey },\n\teventHandlers = {\n\t\tTakeAll_openedContainer = openedContainer,\n\t\tTakeAll_openedBook = openedBook,\n\t\tTakeAll_closeUI = closeUI,\n\t\tTakeAll_PlaySound\t= function(sound)\n\t\t\tambient.playSound(sound)\n\t\tend,\n\t\tUiModeChanged\t= function(data)\n\t\t\tif data.oldMode == \"Container\" and OPENED_CONTAINER then\n\t\t\t\tOPENED_TIMESTAMP = core.getRealTime()\n\t\t\tend\n\t\t\tif (data.oldMode == \"Book\" or data.oldMode == \"Scroll\") and OPENED_BOOK then\n\t\t\t\tOPENED_BOOK = nil\n\t\t\t\tOPENED_TIMESTAMP = core.getRealTime()\n\t\t\tend\n\t\tend\n\t}\n}"
  }
}