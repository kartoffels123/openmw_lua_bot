{
  "folder_name": "Devilish Werewolf Overhaul",
  "lua_files": {
    "Devilish Werewolf Overhaul-54648-1-0-1715610666\\Data Files\\scripts\\detd_weretwolf_Npcs_script.lua": "local nearby = require('openmw.nearby')\nlocal AI = require('openmw.interfaces').AI\nlocal self = require('openmw.self')\nlocal types = require('openmw.types')\nlocal time = require('openmw_aux.time')\nlocal NPC = require('openmw.types').NPC\nlocal doOnce = 0\nlocal selfPos = self.position\n\nlocal idleTable = {\n    idle2 = 60,\n    idle3 = 20,\n    idle4 = 10,\n    idle5 = 10,\n    idle6 = 0,\n    idle7 = 0,\n    idle8 = 0,\n    idle9 = 0\n}\n\n    local stopFn = time.runRepeatedly(function() \n        if NPC.isWerewolf(nearby.players[1]) then\n       types.Actor.spells(self):add('detd_Marked_Pacify')\n        end\n        if NPC.isWerewolf(nearby.players[1])==false then\n           -- local ringObject = types.Actor.getEquipment(self, 12)\n            local inventorySelf = types.Actor.inventory(self.object)\n            local ringObject = inventorySelf:find('detd_ring_seenwerewolf')\n           \n             if types.Actor.activeSpells(self):isSpellActive('detd_Marked_Pacify') == true then\n                AI.startPackage({cancelOther=true, type='Travel', destPosition = selfPos, isRepeat = false})\n                types.Actor.spells(self):remove('detd_Marked_Pacify')\n             end\n\n             if ringObject ~= nil and doOnce == 0 then\n                AI.startPackage({cancelOther=true, type='Travel', destPosition = selfPos, isRepeat = false})\n                types.Actor.spells(self):remove('detd_Marked_Pacify')\n                doOnce = 1\n             end\n\n            if AI.getActivePackage(self) == nil then\n                AI.startPackage({cancelOther=true, type='Wander', distance = 1000, duration = 5 * time.hour,\n                idle = idleTable, isRepeat = true})\n            end\n    end\n       end,\n                                        5 * time.second)  -- print 'Test' every 5 seconds\n\n                        ",
    "Devilish Werewolf Overhaul-54648-1-0-1715610666\\Data Files\\scripts\\detd_werewolf_player_script.lua": "local ui = require('openmw.ui')\nlocal nearby = require('openmw.nearby')\nlocal self = require('openmw.self')\nlocal types = require('openmw.types')\nlocal time = require('openmw_aux.time')\n\n--local function onKeyPress(key)\n--           if key.symbol == 'c' then  -- would run on keypress, need two ends\n \n--local function onUpdate(dt)    -- would run on every frame, needs one end\n\nlocal stopFn = time.runRepeatedly(function() -- runs the function every 1 second, defined at bottom\n             local acts = nearby.actors \n              for i, a in pairs(acts) do\n                local dist = (self.position - acts[i].position):length() -- the distance to actor\n                \n                if dist < 100 and dist > 10 then  -- the max distance and over 0 to prevent player\n                  \n                  if self.controls.sneak == true then -- if sneaking\n                          \n                    \n                    local miss = { \n                \"skeleton\",\n                \"scrib\",\n        \"skeleton champion\",\n        \"skeleton entrance\",\n        \"skeleton archer\",\n        \"t_mw_und_skelarc_01\",\n        \"skeleton warrior\",\n        \"tr_m4_dead1_i4-260-hla\",\n        \"skeleton hero dead\",\n        \"skeleton_weak\",\n        \"tr_m4_cr_aa_sehutuske02\",  \n        \"bm_wolf_skeleton\",\n        \"skeleton nord \",\n        \"tr_m3_skeleton_plague\",\n        \"dead_skeleton\",\n        \"skeleton nord_2\",  \n        \"t_glb_und_skelcmppl_01\", \n        \"t_glb_und_skelcmpgr_01\",\n        \"t_glb_und_skelorc_02\",\n        \"t_glb_und_skelpl_01\",\n        \"t_glb_und_skelarise_02\",\n        \"skeleton_relvel\",\n        \"worm lord\",\n        \"skeleton_vemynal\",\n        \"slaughterfish\",\n        \"slaughterfish_small\",\n        \"ancestor_ghost_greater\",\n        \"scamp\",\n        \"lich_barilzar\",\n        \"clannfear\",\n        \"atronach_flame\",\n        \"atronach_storm\",\n        \"atronach_frost\",\n        \"daedroth\",\n        \"winged twilight\",\n        \"bm_draugr01\",\n        \"centurion_steam\",\n        \"centurion_spider\", \n        \"centurion_spider_dead\",\n        \"centurion_sphere\",\n        \"centurion_steam_advance\",\n        \"t_mw_und_mum_rise_02\",\n        \"t_dwe_cre_centarc_01\",\n        \"t_mw_und_mum_01\",\n        \"hunger\",\n        \"ogrim\",\n        \"ancestor_ghost\",\n        \"golden saint\",\n        \"dwarven ghost\",\n        \"fabricant_verminous\",\n        \"bonelord\",\n        \"dremora\",\n        \"lich\",\n        \"bonewalker_greater\",\n        \"t_dwe_und_ghstgr_01\",\n        \"dremora_lord\",\n        \"t_dae_cre_drid_01\",\n        \"t_dae_cre_lesserclfr_01\",  \n        \"bonewalker\",\n        \"corprus_stalker\",\n        \"ascended_sleeper\",\n        \"bonewalker_weak\"\n                        }\n                        \n                        \n                    for c, v in pairs(miss) do -- ensures all nearby actors are taken into account, ie. no duplicates                    \n                      if acts[i].recordId == miss[c] then\n                                              \n                        return\n                                                                        \n                      end\n                    end\n                  \n                  \n                    local spe = types.Player.spells(self)\n                      if not types.Actor.activeEffects(self):getEffect(\"vampirism\") or types.Actor.activeEffects(self):getEffect(\"vampirism\").magnitude == 0 then  -- if not vampire\n                        \n                        if types.Actor.stats.dynamic.health(acts[i]).current <= 0 then -- if actor is dead\n                           \n                          types.Actor.spells(self):add(\"eat_corpse_option\") -- given spell\n                          \n                        end\n                      end\n                    end\n                  end\n                end\n\n           end,\n     1 * time.second)  -- time interval\n                  \n   --end             \n--end\n\n\n--return { engineHandlers = { onUpdate = onUpdate } }\n--return { engineHandlers = { onKeyPress = onKeyPress } }"
  }
}