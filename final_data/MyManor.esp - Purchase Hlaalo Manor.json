{
  "folder_name": "MyManor.esp - Purchase Hlaalo Manor",
  "lua_files": {
    "MyManor-53089-1-2-6-1707965504\\MWSE\\mods\\JosephMcKean\\MyManor\\main.lua": "local MyManor = {}\n\n---@param cell tes3cell\nfunction MyManor.replaceDoorLocks(cell)\n\tlocal key_hlaalo_manor = \"key_hlaalo_manor\"\n\tlocal jsmk_mm_mi_key = tes3.getObject(\"jsmk_mm_mi_key\")\n\tif not jsmk_mm_mi_key then return end ---@cast jsmk_mm_mi_key tes3misc\n\tfor doorRef in cell:iterateReferences(tes3.objectType.door) do\n\t\tlocal lockNode = doorRef.lockNode\n\t\tif lockNode then if lockNode.key and lockNode.key.id == key_hlaalo_manor then lockNode.key = jsmk_mm_mi_key end end\n\tend\n\ttes3.player.data.MyManor.doorLocksReplaced = true\nend\n\nfunction MyManor.deleteRalenHlaalo()\n\tlocal hlaalo = tes3.getReference(\"ralen hlaalo\")\n\tif hlaalo then\n\t\thlaalo:disable()\n\t\thlaalo:delete()\n\tend\n\tlocal nirith = tes3.getReference(\"uryne nirith\")\n\tif nirith then\n\t\tnirith:disable()\n\t\tnirith:delete()\n\tend\nend\n\n---@param cell tes3cell\nfunction MyManor.transferOwnership(cell)\n\tfor ref in cell:iterateReferences() do\n\t\tif tes3.getOwner({ reference = ref }) then\n\t\t\ttes3.setOwner({ reference = ref, remove = true })\n\t\t\tref.modified = true\n\t\tend\n\tend\n\ttes3.player.data.MyManor.ownershipTransferred = true\nend\n\n---@param cell tes3cell\nfunction MyManor.tidyUp(cell)\n\tfor ref in cell:iterateReferences() do\n\t\tif ref.baseObject.id:lower() == \"active_de_r_bed_01\" then\n\t\t\tref.position = tes3vector3.new(-280.986, 248.210, 803.742)\n\t\t\tref.orientation = tes3vector3.new(0, 0, math.rad(270))\n\t\telseif ref.baseObject.id:lower() == \"furn_de_r_chair_03\" then\n\t\t\tif ref.position.z > 700 then -- there are multiple chairs\n\t\t\t\tref.position = tes3vector3.new(-162.458, 317.430, 817.039)\n\t\t\t\tref.orientation = tes3vector3.new(0, 0, 0)\n\t\t\tend\n\t\telseif ref.baseObject.id:lower() == \"furn_de_r_wallscreen_01\" then\n\t\t\tif ref.position.z > 700 then -- there are multiple chairs\n\t\t\t\tref.position = tes3vector3.new(-8.553, 173.233, 855.204)\n\t\t\t\tref.orientation = tes3vector3.new(0, 0, math.rad(180))\n\t\t\tend\n\t\telseif ref.baseObject.id:lower() == \"key_ralen_hlaalo\" then\n\t\t\tref:disable()\n\t\t\tref:delete()\n\t\telseif ref.baseObject.id:lower() == \"light_de_paper_lantern_off\" then\n\t\t\tref:disable()\n\t\t\tref:delete()\n\t\t\ttes3.createReference({ object = \"light_de_paper_lantern_01\", cell = cell, position = tes3vector3.new(-264.304, 66.302, 955.784), orientation = tes3vector3.new(0, 0, math.rad(40)) })\n\t\telseif ref.baseObject.id:lower() == \"misc_uni_pillow_01\" then\n\t\t\tif ref.position.z > 700 then -- there are two pillows\n\t\t\t\tref.position = tes3vector3.new(-281.772, 312.087, 828.966)\n\t\t\t\tref.orientation = tes3vector3.new(0, 0, math.rad(270))\n\t\t\tend\n\t\tend\n\tend\nend\n\n---@param cell tes3cell\nfunction MyManor.canRest(cell)\n\tcell.restingIsIllegal = false\n\ttes3.player.data.MyManor.cellCanRest = true\nend\n\n---@param object tes3object\nlocal function isWhitelisted(object)\n\tif object.objectType == tes3.objectType.light then return false end -- dark_64 is a location marker for some reason\n\tif object.isLocationMarker then return true end -- DoorMarker\n\tif object.objectType == tes3.objectType.door then return true end -- in_h_trapdoor_01\n\tlocal id = object.id:lower()\n\tif id:match(\"^in_hlaalu\") then return true end -- in_hlaalu_hall_end\n\tif id:match(\"^t_de_sethla\") then return true end -- t_de_sethla_x_win_01\n\tif id:match(\"^ex_hlaalu\") then return true end -- ex_hlaalu_win_01\n\tif id:match(\"^ab_in_hla\") then return true end -- ab_in_hlaroomfloor\n\treturn false\nend\n\n---@param cell tes3cell\nfunction MyManor.moveOldFurnitureExterior(cell, offset)\n\t---@param position tes3vector3\n\t---@param x1 number\n\t---@param x2 number\n\t---@param y1 number\n\t---@param y2 number\n\t---@param z1 number\n\t---@param z2 number\n\t---@return boolean\n\tlocal function isInBox(position, x1, x2, y1, y2, z1, z2)\n\t\tif position.x < x1 or position.x > x2 then return false end\n\t\tif position.y < y1 or position.y > y2 then return false end\n\t\tif position.z < z1 or position.z > z2 then return false end\n\t\treturn true\n\tend\n\tfor ref in cell:iterateReferences() do\n\t\tif ref.sourceMod and ref.sourceMod:lower() == \"beautiful cities of morrowind.esp\" then\n\t\t\tif isInBox(ref.position, -24280, -24010, -11390, -11140, 1300, 1340) then if not isWhitelisted(ref.baseObject) then ref.position = ref.position + tes3vector3.new(0, 0, offset) end end\n\t\tend\n\tend\n\ttes3.player.data.MyManor.oldFurnitureExteriorMoved = true\nend\nlocal function drawLavaSquares(cell, basePos, countx, county)\n\tfor x = 1, countx, 1 do\n\t\tfor y = 1, county, 1 do\n\t\tlocal position = tes3vector3.new(basePos.x + ((x - 1) * 512), basePos.y - ((y - 1) * 512), basePos.z)\n\t\ttes3.createReference{\n\t\tobject = \"in_lava_blacksquare\",\n\t\tposition = position,\n\t\tcell = cell\n\t\t}\n\t\tend\n\tend\nend\n---@param cell tes3cell\nfunction MyManor.moveOldFurniture(cell, offset)\n\tfor ref in cell:iterateReferences() do if not isWhitelisted(ref.baseObject) then ref.position = ref.position + tes3vector3.new(offset, 0, 0) end end\n\ttes3.player.data.MyManor.oldFurnitureMoved = true\nend\n\n---@param e cellChangedEventData\nlocal function cellChanged(e)\n\tlocal journalIndex = tes3.getJournalIndex({ id = \"jsmk_mm\" })\n\tif not journalIndex then return end\n\tif journalIndex < 20 then return end\n\t-- bought the manor\n\tlocal cellName = e.cell.editorName\n\tif cellName == \"Balmora (-3, -2)\" then MyManor.replaceDoorLocks(e.cell) end\n\tif cellName == \"Balmora, Hlaalo Manor\" then\n\t\tif not tes3.player.data.MyManor.ownershipTransferred then\n\t\t\tMyManor.deleteRalenHlaalo()\n\t\t\tMyManor.transferOwnership(e.cell)\n\t\t\tMyManor.tidyUp(e.cell)\n\t\tend\n\t\tif not tes3.player.data.MyManor.cellCanRest then MyManor.canRest(e.cell) end\n\tend\n\tif journalIndex < 30 then return end\n\t-- empty the manor\n\tif cellName == \"Balmora (-3, -2)\" and not tes3.player.data.MyManor.oldFurnitureExteriorMoved then MyManor.moveOldFurnitureExterior(e.cell, -1536) end\n\tif cellName == \"Balmora, Hlaalo Manor\" and not tes3.player.data.MyManor.oldFurnitureMoved then \n\t\tMyManor.moveOldFurniture(e.cell, 2036) \n\t\tdrawLavaSquares(e.cell, tes3vector3.new(1400.33, 601.247, 1389.21), 5, 5)\n\tend\nend\n\nevent.register(\"initialized\", function()\n\tevent.register(\"loaded\", function()\n\t\ttes3.player.data.MyManor = tes3.player.data.MyManor or\n\t\t                           {\n\t\t\tdoorLocksReplaced = false,\n\t\t\townershipTransferred = false,\n\t\t\toldFurnitureMoved = false,\n\t\t\toldFurnitureExteriorMoved = false,\n\t\t\tcellCanRest = false,\n\t\t\tdisplayName = \"Balmora, Hlaalo Manor\",\n\t\t}\n\tend)\n\tevent.register(\"cellChanged\", cellChanged)\n\t-- MyManor.planner = require(\"JosephMcKean.MyManor.planner\")\n\tevent.register(\"UIEXP:sandboxConsole\", function(e) e.sandbox.MyManor = MyManor end)\nend)\n\nreturn MyManor\n",
    "MyManor-53089-1-2-6-1707965504\\scripts\\MyManor\\MyManor_G.lua": "local MyManor = {}\nlocal types = require(\"openmw.types\")\nlocal world = require(\"openmw.world\")\nlocal acti = require(\"openmw.interfaces\").Activation\nlocal core = require(\"openmw.core\")\nlocal util = require(\"openmw.util\")\nlocal storage = require(\"openmw.storage\")\nlocal doorLocksReplaced = false\nlocal ownershipTransferred = false\nlocal oldFurnitureExteriorMoved = false\nlocal oldFurnitureMoved = false\nlocal useOffsetExt = -1536\nlocal useOffsetInt = 2036\nlocal function onSave()\n\treturn {\n\t\tdoorLocksReplaced = doorLocksReplaced,\n\t\townershipTransferred = ownershipTransferred,\n\t\toldFurnitureExteriorMoved = oldFurnitureExteriorMoved,\n\t\toldFurnitureMoved = oldFurnitureMoved\n\t}\nend\nlocal function drawLavaSquares(cell, basePos, countx, county)\n\tfor x = 1, countx, 1 do\n\t\tfor y = 1, county, 1 do\n\t\t\tlocal position = util.vector3(basePos.x + ((x - 1) * 512), basePos.y - ((y - 1) * 512), basePos.z)\n\t\t\tworld.createObject(\"in_lava_blacksquare\"):teleport(cell, position)\n\t\tend\n\tend\nend\nlocal function onLoad(data)\n\tif not data then\n\t\treturn\n\tend\n\tdoorLocksReplaced = data.doorLocksReplaced\n\townershipTransferred = data.ownershipTransferred\n\toldFurnitureExteriorMoved = data.oldFurnitureExteriorMoved\n\toldFurnitureMoved = data.oldFurnitureMoved\nend\nfunction MyManor.replaceDoorLocks(cell)\n\tlocal key_hlaalo_manor = \"key_hlaalo_manor\"\n\tlocal jsmk_mm_mi_key = types.Miscellaneous.record(\"jsmk_mm_mi_key\")\n\tif not jsmk_mm_mi_key then return end\n\tfor i, doorRef in ipairs(cell:getAll(types.Door)) do\n\t\ttypes.Lockable.setKeyRecord(doorRef, jsmk_mm_mi_key)\n\tend\n\tdoorLocksReplaced = true\nend\n\nlocal player = nil\n\nfunction MyManor.deleteRalenHlaalo()\n\tworld.getCellByName(\"Balmora, Hlaalo Manor\"):getAll()\n\tlocal hlaalo = world.getObjectByFormId(\"FormId:0x104be28\")\n\tif hlaalo and hlaalo.enabled then\n\t\thlaalo.enabled = false\n\t\thlaalo:remove()\n\tend\n\tlocal nirith = world.getObjectByFormId(\"FormId:0x104be29\")\n\tif nirith and nirith.enabled then\n\t\tnirith.enabled = false\n\t\tnirith:remove()\n\tend\nend\n\nfunction MyManor.transferOwnership(cell)\n\t\n\tfor i, ref in ipairs(cell:getAll()) do\n\t\tif ref.owner.recordId then\n\t\t\tref.owner.recordId = nil\n\t\tend\n\t\tif ref.owner.factionId then\n\t\t\tref.owner.factionId = nil\n\t\tend\n\tend\n\townershipTransferred = true\nend\n\nfunction MyManor.tidyUp(cell)\n\tfor i, ref in ipairs(cell:getAll()) do\n\t\tif ref.recordId == \"active_de_r_bed_01\" then\n\t\t\tlocal rotate = util.transform.rotateZ(math.rad(270))\n\t\t\tref:teleport(cell, util.vector3(-280.986, 248.210, 803.742), rotate)\n\t\telseif ref.recordId == \"furn_de_r_chair_03\" then\n\t\t\tif ref.position.z > 700 then -- there are multiple chairs\n\t\t\t\tlocal rotate = util.transform.rotateZ(math.rad(0))\n\t\t\t\tref:teleport(cell, util.vector3(-162.458, 317.430, 817.039), rotate)\n\t\t\tend\n\t\telseif ref.recordId == \"furn_de_r_wallscreen_01\" then\n\t\t\tif ref.position.z > 700 then -- there are multiple chairs\n\t\t\t\tlocal rotate = util.transform.rotateZ(math.rad(180))\n\t\t\t\tref:teleport(cell, util.vector3(-8.553, 173.233, 855.204), rotate)\n\t\t\tend\n\t\telseif ref.recordId == \"key_ralen_hlaalo\" then\n\t\t\tref:remove()\n\t\telseif ref.recordId == \"light_de_paper_lantern_off\" then\n\t\t\tref:remove()\n\t\t\tlocal newRec = world.createObject(\"light_de_paper_lantern_01\")\n\t\t\tlocal rotate = util.transform.rotateZ(math.rad(40))\n\t\t\tnewRec:teleport(cell, util.vector3(-264.304, 66.302, 955.784), rotate)\n\t\telseif ref.recordId == \"misc_uni_pillow_01\" then\n\t\t\tif ref.position.z > 700 then -- there are two pillows\n\t\t\t\tlocal rotate = util.transform.rotateZ(math.rad(270))\n\t\t\t\tref:teleport(cell, util.vector3(-281.772, 312.087, 828.966), rotate)\n\t\t\tend\n\t\tend\n\tend\nend\n\nlocal function isWhitelisted(object)\n\tif object.type == types.Light then return false end -- dark_64 is a location marker for some reason\n\tif object.type == types.Door then return true end -- in_h_trapdoor_01\n\tlocal id = object.recordId\n\tif id:match(\"^in_hlaalu\") then return true end   -- in_hlaalu_hall_end\n\tif id:match(\"^t_de_sethla\") then return true end -- t_de_sethla_x_win_01\n\tif id:match(\"^ex_hlaalu\") then return true end   -- ex_hlaalu_win_01\n\tif id:match(\"^ab_in_hla\") then return true end   -- ab_in_hlaroomfloor\n\treturn false\nend\n\nfunction MyManor.moveOldFurnitureExterior(cell, offset)\n\tlocal function isInBox(position, x1, x2, y1, y2, z1, z2)\n\t\tif position.x < x1 or position.x > x2 then return false end\n\t\tif position.y < y1 or position.y > y2 then return false end\n\t\tif position.z < z1 or position.z > z2 then return false end\n\t\treturn true\n\tend\n\tfor i, ref in ipairs(cell:getAll()) do\n\t\tif ref.contentFile and ref.contentFile == \"beautiful cities of morrowind.esp\" then\n\t\t\tif isInBox(ref.position, -24280, -24010, -11390, -11140, 1300, 1340) then\n\t\t\t\tif not isWhitelisted(ref) then\n\t\t\t\t\tref:teleport(cell, util.vector3(0, 0, offset) + ref.position)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\toldFurnitureExteriorMoved = true\nend\n\nfunction MyManor.moveOldFurniture(cell, offset)\n\tfor i, ref in ipairs(cell:getAll()) do\n\t\tif not isWhitelisted(ref) then\n\t\t\tref:teleport(cell, util.vector3(offset, 0, 0) + ref.position)\n\t\tend\n\tend\n\toldFurnitureMoved = true\nend\n\nlocal function journalUpdated(journalIndex)        --called by the player script, only for the quest id MManor_journalUpdated\n\tif journalIndex < 20 then return end\n\tlocal outsideCell = world.getExteriorCell(-3, -2) --The cell outside of the manor\n\tlocal insideCell = world.getCellByName(\"Balmora, Hlaalo Manor\")\n\tMyManor.replaceDoorLocks(outsideCell)\n\tif not ownershipTransferred then\n\t\tMyManor.deleteRalenHlaalo()\n\t\tMyManor.transferOwnership(insideCell)\n\t\tMyManor.tidyUp(insideCell)\n\tend\n\tif journalIndex < 30 then return end\n\tif not oldFurnitureExteriorMoved then\n\t\tMyManor.moveOldFurnitureExterior(outsideCell,\n\t\t\tuseOffsetExt)\n\tend\n\tif not oldFurnitureMoved then\n\t\tMyManor.moveOldFurniture(insideCell, useOffsetInt)\n\t\tdrawLavaSquares(insideCell, util.vector3(1400.33, 601.247, 1389.21), 5, 5)\n\tend\nend\nlocal function reRunOwnership()\n\tif not ownershipTransferred then return end\n\tlocal insideCell = world.getCellByName(\"Balmora, Hlaalo Manor\")\n\tMyManor.transferOwnership(insideCell)\nend\nreturn {\n\tinterfaceName  = \"MyManor\",\n\tinterface      = {\n\t\tversion = 1,\n\t\tjournalUpdated = journalUpdated,\n\t\tdrawLavaSquares = drawLavaSquares,\n\n\t},\n\tengineHandlers = {\n\t\tonSave = onSave,\n\t\tonLoad = onLoad,\n\t},\n\teventHandlers  = {\n\t\tMManor_journalUpdated = journalUpdated,\n\t\tMManor_reRunOwnership = reRunOwnership,\n\t}\n}\n",
    "MyManor-53089-1-2-6-1707965504\\scripts\\MyManor\\MyManor_p.lua": "local core = require(\"openmw.core\")\nlocal types = require(\"openmw.types\")\nlocal async = require(\"openmw.async\")\nlocal storage = require(\"openmw.storage\")\nlocal ui = require(\"openmw.ui\")\nlocal I = require(\"openmw.interfaces\")\nif core.API_REVISION < 54 then\n    I.Settings.registerPage {\n        key = 'SettingsMyManor',\n        l10n = 'MyManor',\n        name = 'MyManor',\n        description = 'This version of OpenMW is out of date. Update to the latest 0.49 or development release/build.',\n    }\n    error(\"This version of OpenMW has no lua quest support. Update to the latest 0.49 or development release/build.\")\nelse\n    I.Settings.registerPage {\n        key = 'SettingsMyManor',\n        l10n = 'MyManor',\n        name = 'MyManor',\n    }\n    I.Settings.registerGroup {\n        key = \"SettingsMyManor\",\n        page = \"SettingsMyManor\",\n        l10n = \"SettingsMyManor\",\n        name = 'My Manor',\n        description = '',\n        permanentStorage = true,\n        settings = {\n            {\n                key = \"reCheckOwner\",\n                renderer = \"checkbox\",\n                name = \"Re check Hlaalo Manor Ownership\",\n                description =\n                \"Toggle this to re-clear the ownership on the manor.\",\n                default = true\n            },\n        }\n    }\nend\nlocal settings = storage.playerSection(\"SettingsMyManor\")\nsettings:subscribe(async:callback(function(section, key)\n    if key then\n        core.sendGlobalEvent(\"MManor_reRunOwnership\")\n        ui.showMessage(\"Reset Ownership\")\n    elseif not key then\n        print(\"full reset\")\n    end\nend))\n\nlocal function onQuestUpdate(id,index)\nif id == \"jsmk_mm\" then\n    core.sendGlobalEvent(\"MManor_journalUpdated\",index)\nend\nend\nreturn {\n\tengineHandlers = {\n\t\tonQuestUpdate = onQuestUpdate\n\t}\n}\n"
  }
}