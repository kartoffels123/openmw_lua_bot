{
  "folder_name": "Portable Autosorter (OpenMW 0.49)",
  "lua_files": {
    "Portable Autosorter v1.4-53703-1-4a-1722821098\\Scripts\\portable_autosorter\\autosort.lua": "-- Declarations --\nlocal core = require(\"openmw.core\")\nlocal self = require('openmw.self')\nlocal types = require('openmw.types')\nlocal nearby = require('openmw.nearby')\n\n-- Internal Functions --\nlocal function checkIfEquipped(actor, recordId)\n    for i, x in pairs(types.Actor.getEquipment(actor)) do\n        if x.recordId == recordId then return true end\n    end\n    return false\nend\n\n-- Engine Handlers --\nlocal function onActivated(actor)\n    if (types.Player.objectIsInstance(actor))\n    then\n        if not checkIfEquipped(actor, \"autosort_pickup_ring\")\n        then\n            local overflowContainer = nil\n            for _, container in ipairs(nearby.containers)\n            do\n                for _, item in ipairs(types.Container.inventory(container):getAll(types.Miscellaneous))\n                do\n                    if item.recordId == \"autosort_target_apparatus\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Apparatus)})\n                    elseif item.recordId == \"autosort_target_armor\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Armor)})\n                    elseif item.recordId == \"autosort_target_book\" then\n                        core.sendGlobalEvent(\"moveBooks\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Book)})\n                    elseif item.recordId == \"autosort_target_clothing\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Clothing)})\n                    elseif item.recordId == \"autosort_target_gold\" then\n                        core.sendGlobalEvent(\"moveGold\", {actorObject=actor, container=container})\n                    elseif item.recordId == \"autosort_target_ingredient\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Ingredient)})\n                    elseif item.recordId == \"autosort_target_key\" then\n                        core.sendGlobalEvent(\"moveKeys\", {actorObject=actor, container=container})\n                    elseif item.recordId == \"autosort_target_misc\" then\n                        core.sendGlobalEvent(\"moveMisc\", {actorObject=actor, container=container})\n                    elseif item.recordId == \"autosort_target_potion\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Potion)})\n                    elseif item.recordId == \"autosort_target_scroll\" then\n                        core.sendGlobalEvent(\"moveScrolls\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Book)})\n                    elseif item.recordId == \"autosort_target_security\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Lockpick)})\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Probe)})\n                    elseif item.recordId == \"autosort_target_soulgem\" then\n                        core.sendGlobalEvent(\"moveSoulGems\", {actorObject=actor, container=container})\n                    elseif item.recordId == \"autosort_target_repair\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Repair)})\n                    elseif item.recordId == \"autosort_target_weapon\" then\n                        core.sendGlobalEvent(\"moveItems\", {actorObject=actor, container=container, list=types.Actor.inventory(actor):getAll(types.Weapon)})\n                    elseif item.recordId == \"autosort_target_overflow\" then\n                        overflowContainer = container -- Mark the Overflow container as found\n                    end\n                end\n            end\n\n            -- If we found the Overflow container, use it\n            if overflowContainer ~= nil and overflowContainer ~= doNotUseContainer\n            then\n                core.sendGlobalEvent(\"moveOverflow\", {actorObject=actor, container=overflowContainer})\n            end\n            actor:sendEvent(\"sortingComplete\")\n        else\n            core.sendGlobalEvent(\"moveAutosortMaster\", {actorObject=actor, item=self.object})\n        end\n    end\nend\n\n-- Return --\nreturn {\n    engineHandlers = {\n        onActivated = onActivated\n    }\n}",
    "Portable Autosorter v1.4-53703-1-4a-1722821098\\Scripts\\portable_autosorter\\global.lua": "-- Declarations --\nlocal core = require(\"openmw.core\")\nlocal types = require('openmw.types')\n\n-- Startup Check --\nif (core.API_REVISION < 37) then\n    error(\"Newer version of OpenMW is required\")\nend\nif (core.contentFiles ~= nil and not core.contentFiles.has(\"portable_autosorter.omwaddon\")) then\n    error(\"Portable Autosorter omwaddon is not enabled.\")\nend\n\n-- Internal Functions --\nlocal function checkDoNotUse(container)\n    for _, item in ipairs(types.Container.inventory(container):getAll(types.Miscellaneous)) do\n        if item.recordId == \"autosort_target_donotuse\" then\n            print(\"Found the donotuse item, ignoring this container\")\n            return true\n        end\n    end\n    return false\nend\n\n-- Engine Handlers --\nlocal function onItemActive(item)\n    if item.recordId == \"autosort_master_sorter\"\n    then\n        local autosortScript = \"scripts/portable_autosorter/autosort.lua\"\n        if item:hasScript(autosortScript)\n        then\n            item:removeScript(autosortScript)\n        end\n        item:addScript(autosortScript)\n        print('Auto Sort script baked on to autosort_master_sorter.')\n    end\nend\n\n-- Event Handlers --\nlocal function moveItems(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(data.list)\n        do\n            if not (types.Actor.hasEquipped(data.actorObject, item) or string.find(item.recordId, \"autosort_\"))\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveBooks(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll(types.Book))\n        do\n            if string.len(types.Book.record(item).enchant) == 0\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveGold(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll(types.Miscellaneous))\n        do\n            if string.find(item.recordId, \"gold_\")\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveKeys(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll(types.Miscellaneous))\n        do\n            if types.Miscellaneous.record(item).isKey\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveMisc(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll(types.Miscellaneous))\n        do\n            if not (types.Miscellaneous.record(item).isKey or string.find(item.recordId, \"autosort_\") or string.find(item.recordId, \"gold_\") or string.find(item.recordId, \"misc_soulgem_\"))\n            then\n                print(item.recordId)\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveScrolls(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll(types.Book))\n        do\n            if string.len(types.Book.record(item).enchant) > 0\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveSoulGems(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll(types.Miscellaneous))\n        do\n            if string.find(item.recordId, \"misc_soulgem_\")\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveOverflow(data)\n    if not checkDoNotUse(data.container) then\n        for _, item in ipairs(types.Actor.inventory(data.actorObject):getAll())\n        do\n            -- Never move Gold to the overflow container.\n            if not (string.find(item.recordId, \"autosort_\") or types.Actor.hasEquipped(data.actorObject, item) or string.find(item.recordId, \"gold_\"))\n            then\n                item:moveInto(types.Container.inventory(data.container))\n            end\n        end\n    end\nend\n\nlocal function moveAutosortMaster(data)\n    print(\"moveAutosortMaster\")\n    data.item:moveInto(types.Actor.inventory(data.actorObject))\n    data.actorObject:sendEvent(\"sendPickupSound\")\nend\n\n-- Return --\nreturn {\n    interfaceName = 'portable_autosorter',\n    interface = {\n        version = 1.0\n    },\n    engineHandlers = {\n        onItemActive = onItemActive\n    },\n    eventHandlers = {\n        moveItems = moveItems,\n        moveBooks = moveBooks,\n        moveGold = moveGold,\n        moveKeys = moveKeys,\n        moveMisc = moveMisc,\n        moveScrolls = moveScrolls,\n        moveSoulGems = moveSoulGems,\n        moveOverflow = moveOverflow,\n        moveAutosortMaster = moveAutosortMaster\n    }\n}",
    "Portable Autosorter v1.4-53703-1-4a-1722821098\\Scripts\\portable_autosorter\\player.lua": "-- Declarations --\nlocal self = require('openmw.self')\nlocal ui = require('openmw.ui')\nlocal ambient = require('openmw.ambient')\n\n-- Event Handlers --\nlocal function sortingComplete()\n    ambient.playSound(\"Item Bodypart Down\")\n    ui.showMessage(\"Sorting complete!\")\nend\n\nlocal function sendPickupSound()\n    ambient.playSound(\"Item Bodypart Up\")\nend\n\n-- Return --\nreturn {\n    eventHandlers = {\n        sortingComplete = sortingComplete,\n        sendPickupSound = sendPickupSound\n    }\n}"
  }
}