{
  "folder_name": "Dynamic Music (OpenMW Only)",
  "lua_files": {
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\actor.lua": "local core = require('openmw.core')\nlocal nearby = require('openmw.nearby')\nlocal self = require('openmw.self')\nlocal AI = require('openmw.interfaces').AI\nlocal types = require('openmw.types')\n\nlocal Globals = require('scripts.DynamicMusic.core.Globals')\n\nlocal combatState = false\n\nlocal function emitEvent(eventName)\n  for _, actor in ipairs(nearby.actors) do\n    if actor.type == types.Player then\n      actor:sendEvent(eventName, {\n        actor = self,\n        name = self.type.record(self).name,\n        level = types.Actor.stats.level(self).current\n      });\n    end\n  end\nend\n\nlocal function onActive()\n\nend\n\nlocal function onInactive()\n  if combatState then\n    combatState = false\n    emitEvent('disengaging');\n  end\nend\n\nlocal function onUpdate(dt)\n  local activePackage = AI.getActivePackage()\n\n  if not combatState and activePackage and activePackage.type == \"Combat\" and types.Actor.stats.dynamic.health(self).current > 0 then\n    combatState = true\n    emitEvent('engaging')\n  end\n\n  --print(\"health \" ..types.Actor.stats.dynamic.health(self).current)\n\n  if combatState and (not activePackage or activePackage.type ~= \"Combat\" or types.Actor.stats.dynamic.health(self).current <= 0) then\n    combatState = false\n    emitEvent('disengaging');\n  end\nend\n\nif core.API_REVISION < Globals.MIN_API_REVISION then\n  return {}\nend\n\nreturn {\n  engineHandlers = {\n    onActive = onActive,\n    onInactive = onInactive,\n    onUpdate = onUpdate\n  }\n}\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\global.lua": "local core = require('openmw.core')\nlocal world = require('openmw.world')\n\nlocal Globals = require('scripts.DynamicMusic.core.Globals')\n\nlocal initialized = false\nlocal players = {}\n\nlocal function sendGlobalData(player)\n  print(\"send global data to player: \" .. player.id)\n  local cellNames = {}\n  local regionNames = {}\n  local regionNamesSet = {}\n\n  for _, cell in ipairs(world.cells) do\n    if cell.name ~= '' then\n      table.insert(cellNames, cell.name)\n    end\n    regionNamesSet[cell.region] = true\n  end\n\n  for regionName, _ in pairs(regionNamesSet) do\n    table.insert(regionNames, regionName)\n  end\n\n  local data = {\n    cellNames = cellNames,\n    regionNames = regionNames\n  }\n\n  player:sendEvent(\"globalDataCollected\", { data = data });\nend\n\nlocal function onUpdate()\n  for _, player in ipairs(world.players) do\n    if not players[player.id] then\n      sendGlobalData(player)\n      players[player.id] = true\n    end\n  end\nend\n\nif core.API_REVISION < Globals.MIN_API_REVISION then\n  error(string.format(\"lua api version < %s detected: %s \", Globals.MIN_API_REVISION, core.API_REVISION), 2)\n  return {}\nend\n\nreturn {\n  engineHandlers = {\n    onUpdate = onUpdate\n  }\n}\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\player.lua": "local core = require('openmw.core')\nlocal self = require('openmw.self')\nlocal storage = require('openmw.storage')\nlocal types = require('openmw.types')\n\nlocal PlayerStates = require('scripts.DynamicMusic.core.PlayerStates')\nlocal GameState = require('scripts.DynamicMusic.core.GameState')\nlocal DynamicMusic = require('scripts.DynamicMusic.core.DynamicMusic')\nlocal Settings = require('scripts.DynamicMusic.core.Settings')\n\nlocal Globals = require('scripts.DynamicMusic.core.Globals')\n\nlocal hostileActors = {}\n\nlocal function isCombatState()\n  if not Settings.getValue(Settings.KEYS.COMBAT_PLAY_COMBAT_MUSIC) then\n    return false\n  end\n\n  local playerLevel = types.Actor.stats.level(self).current\n  local minLevelEnemy = Settings.getValue(Settings.KEYS.COMBAT_MIN_ENEMY_LEVEL)\n  local minLevelDifference = Settings.getValue(Settings.KEYS.COMBAT_MIN_LEVEL_DIFFERENCE)\n\n  for _, hostile in pairs(hostileActors) do\n    local actor = hostile.actor\n    if types.Actor.isInActorsProcessingRange(actor) then\n      local hostileLevel = types.Actor.stats.level(actor).current\n      local inProcessingRange = types.Actor.isInActorsProcessingRange(actor)\n      local playerLevelAdvantage = playerLevel - hostileLevel\n\n      if inProcessingRange and (hostileLevel >= minLevelEnemy or playerLevelAdvantage < minLevelDifference) then\n        return true\n      end\n    end\n  end\n\n  return false\nend\n\nlocal function getPlayerState()\n  if isCombatState() then\n    return PlayerStates.combat\n  end\n\n  return PlayerStates.explore\nend\n\nlocal function hasGameStateChanged()\n  if GameState.playerState.previous ~= GameState.playerState.current then\n    -- print(\"change playerState: \" ..gameState.playerState.current)\n    return true\n  end\n\n  if GameState.regionName.current ~= GameState.regionName.previous then\n    -- print(\"change regionName\")\n    return true\n  end\n\n  if GameState.cellName.current ~= GameState.cellName.previous then\n    -- print(\"change celName\")\n    return true\n  end\n\n  return false\nend\n\n\nlocal function onFrame(dt)\n  if not DynamicMusic.initialized then\n    return\n  end\n\n  GameState.exterior.current = self.cell and self.cell.isExterior\n  GameState.cellName.current = self.cell and self.cell.name or \"\"\n  GameState.regionName.current = self.cell and self.cell.region or \"\"\n  GameState.playerState.current = getPlayerState()\n\n  if hasGameStateChanged() then\n    DynamicMusic.newMusic()\n  end\n\n  GameState.exterior.previous = GameState.exterior.current\n  GameState.cellName.previous = GameState.cellName.current\n  GameState.playerState.previous = GameState.playerState.current\n  GameState.regionName.previous = GameState.regionName.current\n  GameState.soundBank.previous = GameState.soundBank.current\n  GameState.track.previous = GameState.track.current\nend\n\nlocal function engaging(eventData)\n  if (not eventData.actor) then return end;\n\n  hostileActors[eventData.actor.id] = eventData;\n  --  print(\"engaging: \" ..eventData.actor.id ..\" - \" ..eventData.actor.recordId ..eventData.name)\nend\n\nlocal function disengaging(eventData)\n  if (not eventData.actor) then return end;\n\n  hostileActors[eventData.actor.id] = nil;\nend\n\nlocal function globalDataCollected(eventData)\n  local data = eventData.data\n\n  DynamicMusic.initialize(data.cellNames, data.regionNames, hostileActors)\n\n  data = nil\nend\n\nif core.API_REVISION < Globals.MIN_API_REVISION then\n  return {}\nend\n\nreturn {\n  engineHandlers = {\n    onFrame = onFrame\n  },\n  eventHandlers = {\n    engaging = engaging,\n    disengaging = disengaging,\n    globalDataCollected = globalDataCollected\n  },\n}\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\DefaultSoundBank.lua": "local SoundBank = require('scripts.DynamicMusic.core.SoundBank')\nlocal vfs = require('openmw.vfs')\n\nlocal data = {}\n\ndata.id = \"DYNAMIC_MUSIC_DEFAULT_SOUNDBANK\"\ndata.tracks = {}\ndata.combatTracks = {}\n\nfor file in vfs.pathsWithPrefix(\"music/explore\") do\n    table.insert(data.tracks, { path = file })\nend\n\nfor file in vfs.pathsWithPrefix(\"music/battle\") do\n    table.insert(data.combatTracks, { path = file })\nend\n\nreturn SoundBank.CreateFromTable(data)\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\DynamicMusic.lua": "local vfs = require('openmw.vfs')\nlocal GameState = require('scripts.DynamicMusic.core.GameState')\nlocal PlayerStates = require('scripts.DynamicMusic.core.PlayerStates')\nlocal IndexBox = require('scripts.DynamicMusic.core.IndexBox')\nlocal SoundBank = require('scripts.DynamicMusic.core.SoundBank')\nlocal Music = require('openmw.interfaces').Music\n\nlocal DynamicMusic = {}\n\nDynamicMusic.initialized = false\nDynamicMusic.soundBanks = {}\nDynamicMusic.sondBanksPath = \"scripts/DynamicMusic/soundBanks\"\n\nlocal DEFAULT_SOUNDBANK = require('scripts.DynamicMusic.core.DefaultSoundBank')\n\nlocal function collectSoundBanks()\n    print(\"collecting soundBanks from: \" .. DynamicMusic.sondBanksPath)\n\n    local soundBanks = {}\n    for file in vfs.pathsWithPrefix(DynamicMusic.sondBanksPath) do\n        file = file.gsub(file, \".lua\", \"\")\n        local soundBank = require(file)\n\n        if not soundBank.id then\n            soundBank.id = file\n        end\n\n        soundBank = SoundBank.CreateFromTable(soundBank)\n\n        if soundBank:countAvailableTracks() > 0 then\n            table.insert(soundBanks, soundBank)\n            print(string.format(\"loaded soundbank: %s\", file))\n        end\n    end\n\n    return soundBanks\nend\n\nlocal _cellNameIndex = nil\nlocal _regionNameIndex = nil\nlocal _enemyRecordIdIndex = nil\nlocal _hostileActors = {}\n\nlocal function _count(table)\n    local cnt = 0\n    for _, e in pairs(table) do\n        cnt = cnt + 1\n    end\n    return cnt\nend\n\nlocal function _getFirstElement(table)\n    for _, e in pairs(table) do\n        return e\n    end\nend\n\nfunction DynamicMusic._collectEnemyNames()\n    local enemyNames = {}\n    for _, sb in pairs(DynamicMusic.soundBanks) do\n        if sb.enemyNames and #sb.enemyNames > 0 then\n            for _, e in pairs(sb.enemyNames) do\n                if not enemyNames[e] then\n                    enemyNames[e] = e\n                end\n            end\n        end\n    end\n\n    return enemyNames\nend\n\nfunction DynamicMusic.initialize(cellNames, regionNames, hostileActors)\n    if DynamicMusic.initialized then\n        return\n    end\n\n    _hostileActors = hostileActors\n    DynamicMusic.soundBanks = collectSoundBanks()\n    local enemyNames = DynamicMusic._collectEnemyNames()\n\n    _cellNameIndex = IndexBox.Create(cellNames, DynamicMusic.soundBanks, DynamicMusic.isSoundBankAllowedForCellName)\n    _regionNameIndex = IndexBox.Create(regionNames, DynamicMusic.soundBanks, DynamicMusic\n        .isSoundBankAllowedForRegionName)\n    _enemyRecordIdIndex = IndexBox.Create(enemyNames, DynamicMusic.soundBanks,\n        DynamicMusic.isSoundBankAllowedForEnemyName)\n\n    DynamicMusic.initialized = true\nend\n\nfunction DynamicMusic.isSoundBankAllowed(soundBank)\n    if not soundBank then\n        return false\n    end\n\n    if soundBank.interiorOnly and GameState.exterior.current then\n        return false\n    end\n\n    if soundBank.exteriorOnly and not GameState.exterior.current then\n        return false\n    end\n\n    if GameState.playerState.current == PlayerStates.explore then\n        if not soundBank.tracks or #soundBank.tracks == 0 then\n            return false\n        end\n    end\n\n    if GameState.playerState.current == PlayerStates.combat then\n        if not soundBank.combatTracks or #soundBank.combatTracks == 0 then\n            return false\n        end\n\n        local firstHostile = _getFirstElement(_hostileActors)\n\n        if soundBank.enemyNames and not DynamicMusic.isSoundBankAllowedForEnemyName(firstHostile.name, soundBank) then\n            return false\n        end\n    end\n\n    if (soundBank.cellNames or soundBank.cellNamePatterns) and not DynamicMusic.isSoundBankAllowedForCellName(GameState.cellName.current, soundBank) then\n        return false\n    end\n\n    if soundBank.regionNames and not DynamicMusic.isSoundBankAllowedForRegionName(GameState.regionName.current, soundBank) then\n        return false\n    end\n\n    -- not needed but still leave this here in case of old DEFAULT soundbank is still present for some users\n    if soundBank.id == \"DEFAULT\" then\n        return false\n    end\n\n    return true\nend\n\nfunction DynamicMusic.isSoundBankAllowedForEnemyName(enemyName, soundBank)\n    if _enemyRecordIdIndex then\n        return _enemyRecordIdIndex:contains(enemyName, soundBank)\n    end\n\n    if not soundBank.enemyNames then\n        return false\n    end\n\n    for _, e in pairs(soundBank.enemyNames) do\n        if e == enemyName then\n            return true\n        end\n    end\n\n    return false\nend\n\nfunction DynamicMusic.isSoundBankAllowedForCellName(cellName, soundBank)\n    if _cellNameIndex then\n        return _cellNameIndex:contains(cellName, soundBank)\n    end\n\n    if soundBank.cellNamePatternsExclude then\n        for _, cellNameExcludePattern in ipairs(soundBank.cellNamePatternsExclude) do\n            if string.find(cellName, cellNameExcludePattern) then\n                return false\n            end\n        end\n    end\n\n    if soundBank.cellNames then\n        for _, allowedCellName in ipairs(soundBank.cellNames) do\n            if cellName == allowedCellName then\n                return true\n            end\n        end\n    end\n\n    if soundBank.cellNamePatterns then\n        for _, cellNamePattern in ipairs(soundBank.cellNamePatterns) do\n            if string.find(cellName, cellNamePattern) then\n                return true\n            end\n        end\n    end\nend\n\nfunction DynamicMusic.isSoundBankAllowedForRegionName(regionName, soundBank)\n    if not soundBank.regionNames then\n        return false\n    end\n\n    if _regionNameIndex then\n        return _regionNameIndex:contains(regionName, soundBank) -- [regionName] and _regionNameIndex[regionName][soundBank]\n    end\n\n    for _, allowedRegionName in ipairs(soundBank.regionNames) do\n        if regionName == allowedRegionName then\n            return true\n        end\n    end\n\n    return false\nend\n\nlocal function fetchSoundbank()\n    local soundbank = nil\n\n    for index = #DynamicMusic.soundBanks, 1, -1 do\n        if DynamicMusic.isSoundBankAllowed(DynamicMusic.soundBanks[index]) then\n            soundbank = DynamicMusic.soundBanks[index]\n            break\n        end\n    end\n\n    if not soundbank then\n        soundbank = DEFAULT_SOUNDBANK\n    end\n\n    return soundbank\nend\n\nfunction DynamicMusic.newMusic()\n    print(\"new music requested\")\n\n    local soundBank = fetchSoundbank()\n    local newPlaylist = nil\n\n    if GameState.playerState.current == PlayerStates.explore and soundBank.explorePlaylist then\n        newPlaylist = soundBank.explorePlaylist\n    end\n\n    if GameState.playerState.current == PlayerStates.combat and soundBank.combatPlaylist then\n        newPlaylist = soundBank.combatPlaylist\n    end\n\n    if newPlaylist then\n        if GameState.playlist.current then\n            Music.setPlaylistActive(GameState.playlist.current.id, false)\n        end\n\n        print(\"activating playlist: \" .. newPlaylist.id)\n\n        Music.setPlaylistActive(newPlaylist.id, true)\n        GameState.soundBank.current = soundBank\n        GameState.playlist.current = newPlaylist\n        return\n    end\nend\n\nreturn DynamicMusic\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\GameState.lua": "local GameState = {}\n\nGameState.exterior = {\n    current = nil,\n    previous = nil\n}\n\nGameState.cellName = {\n    current = nil,\n    previous = nil\n}\n\nGameState.playtime = {\n    current = os.time(),\n    previous = -1\n}\n\nGameState.playerState = {\n    current = nil,\n    previous = nil\n}\n\nGameState.regionName = {\n    current = nil,\n    previous = nil\n}\n\nGameState.soundBank = {\n    current = nil,\n    previous = nil\n}\n\nGameState.track = {\n    curent = nil,\n    previous = nil\n}\n\nGameState.playlist = {\n    current = nil,\n    previous = nil\n}\n\nreturn GameState\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\Globals.lua": "local Globals = {}\n\nGlobals.MIN_API_REVISION = 62\n\nreturn Globals\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\IndexBox.lua": "local IndexBox = {}\n\nfunction IndexBox.Create(sections, possibleEntries, validator)\n    local cardIndex = {}\n    cardIndex.contains = IndexBox.contains\n\n    for _, section in pairs(sections) do\n        for _, possibleEntry in ipairs(possibleEntries) do\n            if validator(section, possibleEntry) then\n                local entry = cardIndex[section]\n                if not entry then\n                    entry = {}\n                    cardIndex[section] = entry\n                end\n                cardIndex[section][possibleEntry] = true\n            end\n        end\n    end\n\n    return cardIndex\nend\n\nfunction IndexBox.contains(self, section, entry)\n    return self[section] and self[section][entry]\nend\n\nreturn IndexBox\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\PlayerStates.lua": "local PlayerStates = {}\n\nPlayerStates.combat = 'combat'\nPlayerStates.explore = 'explore'\n\nreturn PlayerStates\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\Settings.lua": "local I = require('openmw.interfaces')\nlocal storage = require('openmw.storage')\n\nlocal Settings = {}\nSettings._SETTINGS_DB = {}\n\nSettings.KEYS = {\n    COMBAT_MIN_ENEMY_LEVEL = 'COMBAT_MIN_ENEMY_LEVEL',\n    COMBAT_MIN_LEVEL_DIFFERENCE = 'COMBAT_MIN_LEVEL_DIFFERENCE',\n    COMBAT_PLAY_COMBAT_MUSIC = 'COMBAT_PLAY_COMBAT_MUSIC',\n    GENERAL_PLAY_EXPLORATION_MUSIC = 'GENERAL_PLAY_EXPLORATION_MUSIC',\n    GENERAL_USE_DEFAULT_SOUNDBANK = 'GENERAL_USE_DEFAULT_SOUNDBANK',\n    GENERAL_PLAYLIST_PRIORITY = 'GENERAL_PLAYLIST_PRIORITY'\n}\n\nSettings.PAGE = {\n    key = 'Page_openmw_dynamic_music',\n    l10n = 'Dynamic_Music',\n    name = 'Dynamic Music',\n    description = 'Dynamic Music framework',\n}\n\nSettings.GROUPS = {\n    GENERAL = {\n        key = 'Settings_openmw_dynamic_music_1000_general',\n        page = Settings.PAGE.key,\n        l10n = 'Dynamic_Music',\n        name = '1: General Settings',\n        description = 'General Settings',\n        permanentStorage = true\n    },\n    COMBAT= {\n        key = 'Settings_openmw_dynamic_music_2000_combat',\n        page = Settings.PAGE.key,\n        l10n = 'Dynamic_Music',\n        name = '2: Combat Settings',\n        description = 'Combat related settings.',\n        permanentStorage = true\n    }\n}\n\nSettings.SETTINGS = {\n    {\n        key = Settings.KEYS.COMBAT_MIN_ENEMY_LEVEL,\n        group = Settings.GROUPS.COMBAT,\n        renderer = 'number',\n        name = 'Min. enemy level',\n        description =\n        'Minimum enemy level needed to play combat music.',\n        default = 5,\n    },\n    {\n        key = Settings.KEYS.COMBAT_MIN_LEVEL_DIFFERENCE,\n        group = Settings.GROUPS.COMBAT,\n        renderer = 'number',\n        name = 'Min. level difference',\n        description =\n        'Play combat music if the player is not X levels above the enemy\\'s level. Even if the enemy is below the value that was set for Min. enemy level',\n        default = 2,\n    },\n    {\n        key = Settings.KEYS.COMBAT_PLAY_COMBAT_MUSIC,\n        group = Settings.GROUPS.COMBAT,\n        renderer = 'checkbox',\n        name = 'Play combat music',\n        description = 'Turns combat music on/off.',\n        default = true,\n    },\n--    {\n--        key = Settings.KEYS.GENERAL_PLAY_EXPLORATION_MUSIC,\n--        group = Settings.GROUPS.GENERAL,\n--        renderer = 'checkbox',\n--        name = 'Play Exploration Music',\n--        description = 'Whether exploration music should be played or not.',\n--        default = true,\n--    },\n    {\n        key = Settings.KEYS.GENERAL_PLAYLIST_PRIORITY,\n        group = Settings.GROUPS.GENERAL,\n        renderer = 'number',\n        name = 'Playlist priority',\n        description = 'Priority for Dynamic Music playlists. Should be below OpenMW\\'s default combat playlist priority which is 10.',\n        default = 9,\n    }\n}\n\nI.Settings.registerPage {\n    key = Settings.PAGE.key,\n    l10n = Settings.PAGE.l10n,\n    name = Settings.PAGE.name,\n    description = Settings.PAGE.description\n}\n\nfor _, group in pairs(Settings.GROUPS) do\n    local settings = {}\n    for _, s in pairs(Settings.SETTINGS) do\n        if s.group == group then\n            local setting = {\n                key = s.key,\n                renderer = s.renderer,\n                name = s.name,\n                description = s.description,\n                default = s.default\n            }\n\n            table.insert(settings, setting)\n        end\n    end\n\n    I.Settings.registerGroup {\n        key = group.key,\n        page = Settings.PAGE.key,\n        l10n = group.l10n,\n        name = group.name,\n        description = group.description,\n        permanentStorage = true,\n        settings = settings\n    }\n\n    local playerSection = storage.playerSection(group.key)\n    for _, setting in pairs(settings) do\n        Settings._SETTINGS_DB[setting.key] = setting\n        setting._playerSection = playerSection\n    end\nend\n\nfunction Settings.getValue(key)\n    return Settings._SETTINGS_DB[key]._playerSection:get(key)\nend\n\nreturn Settings\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\core\\SoundBank.lua": "local vfs = require('openmw.vfs')\nlocal Music = require('openmw.interfaces').Music\n\nlocal Settings = require('scripts.DynamicMusic.core.Settings')\n\nlocal SoundBank = {}\n\nlocal function buildPlaylist(id, tracks)\n    local playlistTracks = {}\n\n    for _, track in pairs(tracks) do\n        table.insert(playlistTracks, track.path)\n    end\n\n    local playlist = {\n        id = id,\n        priority = Settings.getValue(Settings.KEYS.GENERAL_PLAYLIST_PRIORITY),\n        tracks = playlistTracks\n    }\n\n    return playlist\nend\n\nfunction SoundBank.CreateFromTable(data)\n    local soundBank = data\n    soundBank.countAvailableTracks = SoundBank.countAvailableTracks\n\n    if soundBank.tracks then\n        for _, t in ipairs(soundBank.tracks) do\n            t.path = string.lower(t.path)\n        end\n    end\n\n    if soundBank.combatTracks then\n        for _, t in ipairs(soundBank.combatTracks) do\n            t.path = string.lower(t.path)\n        end\n    end\n\n    if soundBank.tracks and #soundBank.tracks > 0 then\n        local explorePlaylist = buildPlaylist(soundBank.id .. \"_explore\", soundBank.tracks)\n        soundBank.explorePlaylist = explorePlaylist\n        Music.registerPlaylist(explorePlaylist)\n    end\n\n    if soundBank.combatTracks and #soundBank.combatTracks > 0 then\n        local combatPlaylist = buildPlaylist(soundBank.id .. \"_combat\", soundBank.combatTracks)\n        soundBank.combatPlaylist = combatPlaylist\n        Music.registerPlaylist(combatPlaylist)\n    end\n\n    return soundBank\nend\n\nlocal function _countTracks(tracks)\n    local availableTracks = 0\n\n    if tracks then\n        for _, track in ipairs(tracks) do\n            if type(track) == \"table\" then\n                track = track.path\n            end\n\n            if vfs.fileExists(track) then\n                availableTracks = availableTracks + 1\n            end\n        end\n    end\n\n    return availableTracks\nend\n\nfunction SoundBank.countAvailableTracks(self)\n    local availableTracks = 0\n\n    availableTracks = availableTracks + _countTracks(self.tracks)\n    availableTracks = availableTracks + _countTracks(self.combatTracks)\n\n    return availableTracks\nend\n\nreturn SoundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_aanthirin.lua": "local soundBank =      {\n  id = \"tr_ost_region_aanthirin\",\n  regionNames = {\n        'aanthirin region',\n        'thirr valley region',\n        'othreleth woods region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Aanthirin/Aanthirin 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Aanthirin/Aanthirin 2.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Aanthirin/Thirr.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Aanthirin/Thirr 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Aanthirin/Thirr 2.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_armun_ashlands.lua": "local soundBank =      {\n  id = \"tr_ost_region_armun_ashlands\",\n  regionNames = {\n        'armun ashlands region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Armun Ashlands Region/Ashlands.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Grey Meadows Region/Grey Meadows 1.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_lan_orethan.lua": "local soundBank =      {\n  id = \"tr_ost_region_lan_orethan\",\n  regionNames = {\n    'lan orethan region',\n    'nedothril region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Lan Orethan/Lan Orethan.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Lan Orethan/Mournhold explore.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Lan Orethan/Road To Mournhold.mp3\"\n    },\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_mournhold_hills.lua": "local soundBank =      {\n  id = \"tr_ost_region_mournhold_hills\",\n  regionNames = {\n        'helnim fields region',\n        'mephalan vales region',\n\t\t'molag ruhn region',\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Mournhold hills/Mournhold Athmospheres 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Mournhold hills/Mournhold Athmospheres 2.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Mournhold hills/Mournhold explore.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Mournhold hills/Mournhold fields.mp3\"\n    },\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_sacred_lands.lua": "local soundBank =      {\n  id = \"tr_ost_region_sacred_lands\",\n  regionNames = {\n        'sacred lands region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Sacred Lands Region/sacred lands 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Sacred Lands Region/sacred lands 2.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Sacred Lands Region/sacred lands 3.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Sacred Lands Region/sacred lands 4.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_seas.lua": "local soundBank =      {\n  id = \"tr_ost_region_seas\",\n  regionNames = {\n\t\t'sea of ghosts region',\n\t\t'padomaic ocean region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Seas/Dreamy athmospheres 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Seas/Dreamy athmospheres 2.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_sundered_scar.lua": "local soundBank =      {\n  id = \"tr_ost_region_sundered_scar\",\n  regionNames = {\n        'sundered scar region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Sundered Scar Region/Mournhold Athmospheres 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Sundered Scar Region/Mournhold Athmospheres 2.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Sundered Scar Region/Mournhold fields.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_telvannis.lua": "local soundBank =      {\n  id = \"tr_ost_region_telvannis\",\n  regionNames = {\n        'molagreahd region',\n\t\t'sunad mora region',\n        'boethiah\\'s spine region',\n        'aranyon pass region',\n\t\t'telvanni isles region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Telvannis/Tellvannis 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Telvannis/Tellvannis 2.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Telvannis/Telvannis fields.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1000_tr_ost_region_velothis_upper.lua": "local soundBank =      {\n  id = \"tr_ost_region_velothis_upper\",\n  regionNames = {\n        'uld vraech region',\n        'velothi mountains region'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Velothis Upper/Through The Mountains.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_6thHouse_cells.lua": "local soundBank =      {\n  id = 'muse_expansion_6thHouse',\n  interiorOnly = true,\n  cellNamePatterns = {\n    'Dagoth Ur',\n    'Endusal',\n    'Kogoruhn',\n    'Mamaea',\n    'Odrosal',\n    'Tureynulal',\n    'Vemynal',\n    'Abinabi',\n    'Ainab',\n    'Assemanu',\n    'Bensamsi',\n    'Falasmaryon',\n    'Hassour',\n    'Ilunibi',\n    'Maran-Adon',\n    'Missamsi',\n    'Piran',\n    'Rissun',\n    'Salmantu',\n    'Sanit',\n    'Sennananit',\n    'Sharapli',\n    'Subdun',\n    'Telasero',\n    'Yakin'\n  },\n  tracks = {\n    {\n      path='Music/MS/cell/6thHouse/exploration1.mp3'\n    },\n    {\n      path='Music/MS/cell/6thHouse/exploration2.mp3'\n    },\n    {\n      path='Music/MS/cell/6thHouse/exploration3.mp3'\n    },\n    {\n      path='Music/MS/cell/6thHouse/exploration4.mp3'\n    },\n    {\n      path='Music/MS/cell/6thHouse/exploration5.mp3'\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_6thHouse_enemies.lua": "local soundBank =      {\n  id = 'muse_expansion_6thHouse',\n  interiorOnly = true,\n  enemyNames = {\n    \"Ascended Sleeper\",\n    \"Ash Ghoul\",\n    \"Ash Slave\",\n    \"Ash Zombie\",\n    \"Corprus Stalker\",\n    \"Lame Corprus\",\n    \"Dagoth Fandril\",\n    \"Dagoth Molos\",\n    \"Dagoth Felmis\",\n    \"Dagoth Rather\",\n    \"Dagoth Garel\",\n    \"Dagoth Reler\",\n    \"Dagoth Goral\",\n    \"Dagoth Tanis\",\n    \"Dagoth Hlevul\",\n    \"Dagoth Uvil\",\n    \"Dagoth Malan\",\n    \"Dagoth Vaner\",\n    \"Dagoth Ulen\",\n    \"Dagoth Irvyn\",\n    \"Dagoth Aladus\",\n    \"Dagoth Fovon\",\n    \"Dagoth Baler\",\n    \"Dagoth Girer\",\n    \"Dagoth Daynil\",\n    \"Dagoth Delnus\",\n    \"Dagoth Mendras\",\n    \"Dagoth Drals\",\n    \"Dagoth Mulis\",\n    \"Dagoth Draven\",\n    \"Dagoth Muthes\",\n    \"Dagoth Elam\",\n    \"Dagoth Nilor\",\n    \"Dagoth Fervas\",\n    \"Dagoth Ralas\",\n    \"Dagoth Soler\",\n    \"Dagoth Fals\",\n    \"Dagoth Galmis\",\n    \"Dagoth Ganel\",\n    \"Dagoth Mulyn\",\n    \"Dagoth Gares\",\n    \"Dagoth Velos\",\n    \"Dagoth Araynys\",\n    \"Dagoth Endus\",\n    \"Dagoth Gilvoth\",\n    \"Dagoth Odroth\",\n    \"Dagoth Tureynul\",\n    \"Dagoth Uthol\"\n  },\n  combatTracks = {\n    {\n      path=\"Music/MS/combat/Dagoth/combat1.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Dagoth/combat2.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Dagoth/combat3.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Dagoth/combat4.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_daedric_cells.lua": "local soundBank =      {\n  id = 'muse_expansion_daedric',\n  interiorOnly = true,\n  cellNamePatterns = {\n\t\"Ashunartes\",\n\t\"Ashurnibibi\",\n\t\"Assurdirapal\",\n\t\"Dushariran\",\n\t\"Ibishammus\",\n\t\"Kaushtarari\",\n\t\"Shashpilamat\",\n\t\"Zergonipal\",\n\t\"Valenvaryon\",\n\t\"Ald Sotha\",\n\t\"Ashalmimilkala\",\n\t\"Assarnatamat\",\n\t\"Assernerairan\",\n\t\"Assurnabitashpi \",\n\t\"Ebernanit\",\n\t\"Ularradallaku\",\n\t\"Yasammidan\",\n\t\"Ashalmawia\",\n\t\"Bal Ur\",\n\t\"Esutanamus\",\n\t\"Kushtashpi\",\n\t\"Ramimilk\",\n\t\"Tusenend\",\n\t\"Yansirramus\",\n\t\"Addadshashanammu\",\n\t\"Ald Daedroth\",\n\t\"Almurbalarammi\",\n\t\"Assalkushalit\",\n\t\"Bal Fell\",\n\t\"Ihinipalit\",\n\t\"Maelkashishi\",\n\t\"Onnissiralis\",\n\t\"Zaintiraris\",\n\t\"Anudnabia\",\n\t\"Magas Volar\",\n\t\"Shrine of Azura\",\n\t\"Malkamalit\",\n-- Tamriel Rebuilt cells\n\t\"Ossurnashalit\",\n\t\"Varashimmus\",\n\t\"Yamuninisharn\",\n-- Shrine from Strange Sands: https://www.nexusmods.com/morrowind/mods/54236\t\n    \"Erenehazu\"\n  },\n  tracks = {\n    {\n      path='Music/MS/cell/Daedric/exploration1.mp3'\n    },\n    {\n      path='Music/MS/cell/Daedric/exploration2.mp3'\n    },\n    {\n      path='Music/MS/cell/Daedric/exploration3.mp3'\n    },\n    {\n      path='Music/MS/cell/Daedric/exploration4.mp3'\n    },\n    {\n      path='Music/MS/cell/Daedric/exploration5.mp3'\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_daedric_enemies.lua": "local soundBank =      {\n  id = 'muse_expansion_daedric',\n  interiorOnly = true,\n  enemyNames = {\n    \"Flame Atronach\",\n    \"Frost Atronach\",\n    \"Nomeg Gwai\",\n    \"Storm Atronach\",\n    \"Clannfear\",\n    \"Daedroth\",\n    \"Hrelvesuu\",\n    \"Menta Na\",\n    \"Anhaedra\",\n    \"Dremora\",\n    \"Krazzt\",\n    \"Dremora Lord\",\n    \"Lord Dregas Volar\",\n    \"Golden Saint\",\n    \"Staada\",\n    \"Hunger\",\n    \"Ogrim\",\n    \"Ogrim Titan\",\n    \"Scamp\",\n    \"Lustidrike\",\n    \"Creeper\",\n    \"Winged Twilight\",\n    \"Molag Grunda\"\n  },\n  combatTracks = {\n    {\n      path=\"Music/MS/combat/Daedric/combat1.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Daedric/combat2.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Daedric/combat3.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Daedric/combat4.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_dwemer_cells.lua": "local soundBank =    {\n  id = \"muse_expansion_dwemer\",\n  interiorOnly = true,\n  cellNamePatterns = {\n    'Aleft',\n    'Arkngthand',\n    'Arkngthunch%-Sturdumz',\n    'Bethamez',\n    'Bthanchend',\n    'Bthuand',\n    'Bthungthumz',\n    'Druscashti',\n    'Galom Daeus',\n    'Mudan',\n    'Mzahnch',\n    'Mzanchend',\n    'Mzuleft',\n    'Nchardahrk',\n    'Nchardumz',\n    'Nchuleft',\n    'Nchuleftingth',\n    'Nchurdamz',\n    'Bamz%-Amschend',\n    'Sotha Sil',\n-- Tamriel Rebuilt cells\n    'Akuband',\n    'Bthungtch',\n\t'Nchal%-Marschend',\n\t'Rthungzark',\n\t'Bthalag%-Zturamz'\n  },\n  tracks={\n    {\n      path=\"Music/MS/cell/Dwemer/exploration1.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Dwemer/exploration2.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Dwemer/exploration3.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Dwemer/exploration4.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Dwemer/exploration5.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_dwemer_enemies.lua": "local soundBank =    {\n  id = \"muse_expansion_dwemer\",\n  interiorOnly = true,\n  enemyNames = {\n    \"Centurion Sphere\",\n    \"Centurion Spider\",\n    \"Shock Centurion\",\n    \"Steam Centurion\",\n    \"Steam Guardian\",\n    \"Dwarven Spectre\",\n    \"Dahrk Mezalf\",\n    \"Hulking Fabricant\",\n    \"Verminous Fabricant\",\n    \"Imperfect\",\n    \"Advanced Steam Centurion\",\n    \"Centurion Archer\"\n  },\n  combatTracks = {\n    {\n      path=\"Music/MS/combat/Dwemer/combat1.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Dwemer/combat2.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Dwemer/combat3.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Dwemer/combat4.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_empire_cells.lua": "local soundBank =      {\n  cellNamePatterns = {\n    'Caldera',\n    'Ebonheart',\n    'Ebon Tower',\n    'Pelagiad',\n    'Seyda Neen',\n    'Moonmoth',\n    'Darius',\n    'Firemoth',\n    'Frostmoth',\n    'Buckmoth',\n    'Hawkmoth',\n    'Wolverine Hall',\n    'Raven Rock'\n  },\n  cellNamePatternsExclude = {\n    'Mage\\'s Guild',\n    'Fighter\\'s Guild',\n    'Guild of Mages',\n    'Guild of Fighters'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/cell/Empire/exploration1.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Empire/exploration2.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Empire/exploration3.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Empire/exploration4.mp3\"\n    },\n    {\n      path=\"Music/MS/cell/Empire/exploration5.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_empire_enemies.lua": "local soundBank =      {\n  enemyNames = {\n    \"Guard\",\n    \"Imperial Guard\",\n    \"Guard Captain\",\n    \"Duke's Guard\",\n    \"Company Guard\",\n    \"Varus Vantinius\",\n    \"Arius Rulician\",\n    \"Oritius Maro\",\n    \"Lugrub gro-Ogdum\",\n    \"Honthjolf\",\n    \"Furius Acilius\",\n    \"Cavortius Albuttian\",\n    \"Imsin the Dreamer\",\n    \"Frald the White\",\n    \"Captain Falx Carius\",\n    \"Darius\",\n    \"Radd Hard-Heart\",\n    \"Angoril\",\n    \"Caius Cosades\",\n    \"Gildan\",\n    \"Nine-Toes\",\n    \"Rithleen\",\n    \"Tyermallin\",\n    \"Surane Leoriane\",\n    \"Elone\",\n    \"Sjorvar Horse-Mouth\",\n    \"Carnius Magius\",\n    \"Falco Galenus\"\n  },\n  combatTracks = {\n    {\n      path=\"Music/MS/combat/Empire/combat1.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Empire/combat2.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Empire/combat3.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_tombs_cells.lua": "local soundBank =      {\n  id = 'muse_expansion_tombs',\n  cellNamePatterns = {\n\t'Ancestral Tomb',\n\t'Gedna Relvel\\'s Tomb',\n\t'Abandoned Crypt',\n\t'Barrow',\n\t'Burial'\n  },\n  tracks = {\n    {\n      path='Music/MS/cell/Tomb/exploration1.mp3'\n    },\n    {\n      path='Music/MS/cell/Tomb/exploration2.mp3'\n    },\n    {\n      path='Music/MS/cell/Tomb/exploration3.mp3'\n    },\n    {\n      path='Music/MS/cell/Tomb/exploration4.mp3'\n    },\n    {\n      path='Music/MS/cell/Tomb/exploration5.mp3'\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_muse_expansion_tombs_enemies.lua": "local soundBank =      {\n  enemyNames = {\n\t\"Ancestor Ghost\", \n\t\"Ancestor Guardian\", \n\t\"Gateway Haunt\", \n\t\"Ghost of Galos Heleran\", \n\t\"Kanit Ashurnisammis\",\n\t\"Mansilamat Vabdas\",\n\t\"Wraith of Sul-Senipul\",\n\t\"Bonelord\",\n\t\"Bonewalker\",\n\t\"Lesser Bonewalker\",\n\t\"Greater Bonewalker\",\n\t\"Beldoh the Undying\",\n\t\"Crippled Skeleton\",\n\t\"Skeleton\",\n\t\"Skeleton Archer\",\n\t\"Skeleton Champion\",\n\t\"Skeleton War-Wizard\",\n\t\"Skeleton Warrior\",\n\t\"Worm Lord\",\n\t\"Lich\",\n\t\"Profane Acolyte\",\n\t\"Gedna Relvel\",\n\t\"Barilzar\",\n\t\"Greater Ancestor Ghost\",\n\t\"Variner's Ghost\",\n\t\"Bonewolf\",\n\t\"Draugr\",\n\t\"Valbrandr draugr\",\n\t\"Draugr Lord Aesliip\",\n\t\"Skeleton Berserker\",\n\t\"Skeleton Pirate\",\n\t\"Skeleton Pirate Captain\",\n\t\"Greater Skeleton Champion\"\n  },\n  combatTracks = {\n    {\n      path=\"Music/MS/combat/Tomb/combat1.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Tomb/combat2.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Tomb/combat3.mp3\"\n    },\n    {\n      path=\"Music/MS/combat/Tomb/combat4.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_tr_ost_cell_dwemer_ruins.lua": "local soundBank =      {\n  id = 'tr_ost_cell_dwemer_ruins',\n  cellNamePatterns = {\n        'Bthzundcheft',\n\t\t'Rthungzark'\n  },\n  cellNamePatternsExclude = {\n    'Sewer',\n    'Dungeon'\n  },\n  tracks = {\n    {\n      path='Music/MS/interior/TR dwemer/Dwemer ruins.mp3'\n    },\n    {\n      path='Music/MS/interior/TR dwemer/Resonance.mp3'\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_tr_ost_cell_imperial.lua": "local soundBank =      {\n  id = \"tr_ost_cell_imperial\",\n  cellNamePatterns = {\n    'Firewatch',\n    'Helnim'\n  },\n  cellNamePatternsExclude = {\n    'Sewer',\n    'Dungeon',\n    'Fields'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/cell/ImperialCity/Beacon of Cyrodiil.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_tr_ost_cell_indoril.lua": "local soundBank =      {\n  id = \"tr_ost_cell_indoril\",\n  cellNamePatterns = {\n\t\t'Ammar',\n        'Akamora',\n\t\t'Bisandryon',\n\t\t'Bosmora',\n\t\t'Enamor Dayn',\n\t\t'Sailen',\n\t\t'Dreynim',\n\t\t'Gorne',\n\t\t'Roa Dyr',\n\t\t'Meralag'\n  },\n  cellNamePatternsExclude = {\n    'Sewer',\n    'Dungeon'\n  },\n  tracks = {\n    {\n      path=\"music/MS/cell/MournCity/Indoril Settlement.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_tr_ost_cell_port_telvannis.lua": "local soundBank =      {\n  id = \"tr_ost_cell_port_telvannis\",\n  cellNamePatterns = {\n        'Port Telvannis'\n  },\n  tracks = {\n    {\n      path=\"Music/MS/region/Telvannis/Tellvannis 1.mp3\"\n    },\n    {\n      path=\"Music/MS/region/Telvanni Isles/Port Telvannis.mp3\"\n    }\n  }\n}\n\nreturn soundBank\n",
    "Dynamic Music-53568-0-12-1716565766\\scripts\\DynamicMusic\\soundBanks\\1100_tr_ost_cell_telvanni.lua": "local soundBank =      {\n  id = 'tr_ost_cell_telvanni',\n  cellNamePatterns = {\n        'Tel Ouada',\n\t\t'Gah Sadrith',\n\t\t'Tel Aranyon',\n\t\t'Tel Oren',\n\t\t'Llothanis',\n\t\t'Telvanni Library',\n\t\t'Tel Mothrivra',\n\t\t'Marog',\n\t\t'Alt Bosara',\n\t\t'Tel Muthada',\n\t\t'Verulas Pass'\n  },\n  cellNamePatternsExclude = {\n    'Sewer',\n    'Dungeon'\n  },\n  tracks = {\n    {\n      path='Music/MS/cell/TelCity/Telvanni settlement.mp3'\n    }\n  }\n}\n\nreturn soundBank\n"
  }
}