{
  "folder_name": "(OpenMW 0.49) Levels and Limits - Configurable class-based skill level limits",
  "lua_files": {
    "LevelsAndLimits.zip-54987-1-1721232857\\LevelsAndLimits\\Data Files\\Scripts\\LevelsAndLimits\\lal_func.lua": "local ui = require('openmw.ui')\nlocal core = require('openmw.core')\nlocal self = require('openmw.self')\nlocal types = require('openmw.types')\nlocal storage = require('openmw.storage')\nlocal settings = storage.playerSection(\"SettingsLevelsAndLimits\")\n\nlocal L = core.l10n(\"LevelsAndLimits\")\n\nfunction getLaLToggle()\n    return settings:get(\"lalToggle\")\nend\n\nfunction getSettingMajorSkillLimit()\n    return settings:get(\"lalLimitMajor\")\nend\n\nfunction getSettingMinorSkillLimit()\n    return settings:get(\"lalLimitMinor\")\nend\n\nfunction getSettingMiscSkillLimit()\n    return settings:get(\"lalLimitMisc\")\nend\n\nfunction getSpecializationToggle()\n    return settings:get(\"lalSpecializationToggle\")\nend\n\nfunction getSpecializationMalus()\n    return settings:get(\"lalSpecializationMalus\")\nend\n\nfunction getFavoredAttributesToggle()\n    return settings:get(\"lalFavoredAttributesToggle\")\nend\n\nfunction getFavoredAttributesMalus()\n    return settings:get(\"lalFavoredAttributesMalus\")\nend\n\nfunction resetSkillExperience(skillid)\n    local skillStat = types.NPC.stats.skills[skillid](self)\n    if skillStat.progress > 1 then\n        skillStat.progress = 1\n    end\nend\n\nfunction showFailedSkillLevelUpMessage(method)\n    if method == 'trainer' then\n        ui.showMessage(string.format(L(\"levelUpFailTrainer\")))\n    elseif method == 'book' then\n        ui.showMessage(string.format(L(\"levelUpFailBook\")))\n    end\nend\n\nfunction getModifiedSkillMaximum(skillid, skillMaximum)\n\n    local classSpecialization = types.NPC.classes.records[types.NPC.record(self).class].specialization\n    local skillSpecialization = core.stats.Skill.records[skillid].specialization\n    \n    if getSpecializationToggle() and classSpecialization ~= skillSpecialization then\n        skillMaximum = skillMaximum - getSpecializationMalus()\n    end\n    \n    if getFavoredAttributesToggle() then\n    \n        local favoredAttributes = types.NPC.classes.records[types.NPC.record(self).class].attributes\n        local skillAttribute = core.stats.Skill.records[skillid].attribute\n        local isFavoredAttribute = false\n        \n        for _, attr in pairs(favoredAttributes) do\n            if attr == skillAttribute then\n                isFavoredAttribute = true\n                break\n            end\n        end\n        \n        if not isFavoredAttribute then\n            skillMaximum = skillMaximum - getFavoredAttributesMalus()\n        end\n    end\n    \n    return skillMaximum\n    \nend\n",
    "LevelsAndLimits.zip-54987-1-1721232857\\LevelsAndLimits\\Data Files\\Scripts\\LevelsAndLimits\\lal_main.lua": "local self = require('openmw.self')\nlocal types = require('openmw.types')\nlocal I = require('openmw.interfaces')\nlocal lalFunc = require('scripts.levelsandlimits.lal_func')\n\nlocal majorSkills = {}\nlocal minorSkills = {}\n\nlocal playerClass = types.NPC.classes.records[types.NPC.record(self).class]\n\nfor _, skill in ipairs(playerClass.majorSkills) do \n    majorSkills[skill] = true\nend\n\nfor _, skill in ipairs(playerClass.minorSkills) do \n    minorSkills[skill] = true\nend\n\nlocal function skillLevelUpHandler(skillid, options)\n\n    -- Check if the mod is enabled\n    if not getLaLToggle() then\n        return  -- If disabled, allow normal skill progression\n    end\n\n    local skillStat = types.NPC.stats.skills[skillid](self)\n    local skillLevel = skillStat.base\n    local skillLevelUpFailed = false\n\n    if majorSkills[skillid] and skillLevel >= getModifiedSkillMaximum(skillid, getSettingMajorSkillLimit()) then\n        skillLevelUpFailed = true\n    elseif minorSkills[skillid] and skillLevel >= getModifiedSkillMaximum(skillid, getSettingMinorSkillLimit()) then\n        skillLevelUpFailed = true\n    elseif not majorSkills[skillid] and not minorSkills[skillid] and skillLevel >= getModifiedSkillMaximum(skillid, getSettingMiscSkillLimit()) then\n        skillLevelUpFailed = true\n    end\n    \n    if skillLevelUpFailed then\n        resetSkillExperience(skillid)\n        showFailedSkillLevelUpMessage(options)\n        return false\n    end\nend\n\nI.SkillProgression.addSkillLevelUpHandler(skillLevelUpHandler)\n",
    "LevelsAndLimits.zip-54987-1-1721232857\\LevelsAndLimits\\Data Files\\Scripts\\LevelsAndLimits\\lal_mcm.lua": "local I = require('openmw.interfaces')\n\nI.Settings.registerPage {\n    key = \"LevelsAndLimits\",\n    l10n = \"LevelsAndLimits\",\n    name = 'name',\n    description = 'description'\n}\n\nI.Settings.registerGroup {\n    key = \"SettingsLevelsAndLimits\",\n    l10n = \"LevelsAndLimits\",\n    name = \"settingsTitle\",\n    page = \"LevelsAndLimits\",\n    description = \"settingsDesc\",\n    permanentStorage = false,\n    settings = {\n        {\n            key = \"lalToggle\",\n            name = \"lalToggleName\",\n            description = \"lalToggleDesc\",\n            default = true,\n            renderer = \"checkbox\"\n        },\n        {\n            key = \"lalLimitMajor\",\n            name = \"lalLimitMajorName\",\n            description = \"lalLimitMajorDesc\",\n            default = 100,\n            renderer = \"number\"\n        },\n        {\n            key = \"lalLimitMinor\",\n            name = \"lalLimitMinorName\",\n            description = \"lalLimitMinorDesc\",\n            default = 75,\n            renderer = \"number\"\n        },\n        {\n            key = \"lalLimitMisc\",\n            name = \"lalLimitMiscName\",\n            description = \"lalLimitMiscDesc\",\n            default = 35,\n            renderer = \"number\"\n        },\n        {\n            key = \"lalSpecializationToggle\",\n            name = \"lalSpecializationToggleName\",\n            description = \"lalSpecializationToggleDesc\",\n            default = true,\n            renderer = \"checkbox\"\n        },\n        {\n            key = \"lalSpecializationMalus\",\n            name = \"lalSpecializationMalusName\",\n            description = \"lalSpecializationMalusDesc\",\n            default = 5,\n            renderer = \"number\"\n        },\n        {\n            key = \"lalFavoredAttributesToggle\",\n            name = \"lalFavoredAttributesToggleName\",\n            description = \"lalFavoredAttributesToggleDesc\",\n            default = true,\n            renderer = \"checkbox\"\n        },\n        {\n            key = \"lalFavoredAttributesMalus\",\n            name = \"lalFavoredAttributesMalusName\",\n            description = \"lalFavoredAttributesMalusDesc\",\n            default = 5,\n            renderer = \"number\"\n        }   \n    }\n}\n\n\n"
  }
}