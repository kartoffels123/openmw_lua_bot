{
  "folder_name": "Kokosz Simple Necromancy W.I.P (OpenMW lua)",
  "lua_files": {
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\CorpseHarvestMechanics.lua": "local world = require('openmw.world')\nlocal types = require('openmw.types')\nlocal I = require(\"openmw.interfaces\")\nlocal PlayerInventory = world.players[1]\nlocal TorsoDropped = false\n\nlocal function HarvestCorpse(Actor)\nTorsoDropped = false\n\nif math.random() >= 0.5 then\nmoney = world.createObject('KSN_Misc_BoneSkelArmR', 1)\nmoney:moveInto(types.Actor.inventory(Actor))\t\t\nend\n\nif math.random() >= 0.5 then\nmoney = world.createObject('KSN_Misc_BoneSkelPelvis', 1)\nmoney:moveInto(types.Actor.inventory(Actor))\t\t\nend\n\nif math.random() >= 0.5 then\nmoney = world.createObject('KSN_Misc_BoneSkelSkullUpper', 1)\nmoney:moveInto(types.Actor.inventory(Actor))\t\t\nend\n\nif math.random() >= 0.5 then\nmoney = world.createObject('KSN_Misc_BoneSkelTorso', 1)\nmoney:moveInto(types.Actor.inventory(Actor))\nTorsoDropped = true\t\t\nend\n\nif math.random() >= 0.5 then\nmoney = world.createObject('KSN_Misc_Leg', 1)\nmoney:moveInto(types.Actor.inventory(Actor))\t\t\nend\n\nif math.random() >= 0.5 and TorsoDropped == false then\nmoney = world.createObject('KSN_misc_TorsoBroken', 1)\nmoney:moveInto(types.Actor.inventory(Actor))\nTorsoDropped = false\t\t\nend\n\nworld.players[1]:sendEvent(\"OpenHarvestingContainer\", Actor)\n\nend\n\n\nlocal function OpenNecroCrafting(obj)\n    zombie = world.createObject('ksn_craftingmenuobj', 1)\n    zombie:teleport(world.players[1].cell.name, world.players[1].position)\n\nend\n\nlocal function RemoveCorpse(actor)\nactor:remove()\nend\n\n\nlocal function ReanimateCrippledSkeleton(obj)\n\tzombie = world.createObject('_Skeleton', 1)\n\tReanimEffect = world.createObject('sprigganup', 1)\n\tzombie:teleport(obj.cell.name, obj.position)\n\tzombie:sendEvent('StartAIPackage', {type='Follow', target=world.players[1]})\n\tReanimEffect:teleport(obj.cell.name, obj.position)\n\tobj:remove(1)\n\tobj:moveInto(types.Actor.inventory(PlayerInventory))\n\treturn\n\nend\n\nreturn {\n    eventHandlers = { HarvestCorpse = HarvestCorpse, OpenNecroCrafting = OpenNecroCrafting, ReanimateCrippledSkeleton = ReanimateCrippledSkeleton, RemoveCorpse = RemoveCorpse },\n}\n\n\n",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\CorpseHarvest_P.lua": "local nearby = require('openmw.nearby')\nlocal ui = require('openmw.ui')\nlocal self = require('openmw.self')\nlocal types = require('openmw.types')\nlocal camera = require('openmw.camera')\nlocal input = require('openmw.input')\nlocal core = require('openmw.core')\nlocal storage = require('openmw.storage')\nlocal util = require('openmw.util')\nlocal I = require(\"openmw.interfaces\")\nlocal HarvestedCorpses = storage.playerSection(\"IsHarvested\")\nHarvestedCorpses:setLifeTime(storage.LIFE_TIME.Temporary)\n\nlocal function RayCast(key)\n\n\tif key.symbol == 'x' then\n\tlocal faced = nearby.castRenderingRay(camera.getPosition(), camera.getPosition() + camera.viewportToWorldVector(util.vector2(0.5, 0.5))* 8192, {ignorePlayer = true})\n\n\t\tif faced.hitObject then\n\t\t\tif types.NPC.objectIsInstance(faced.hitObject) == true then\n\t\t\t\tif types.Actor.isDead(faced.hitObject) == true then\n\t\t\t\t\tif (self.position - faced.hitObject.position):length() < 205 then\n\t\t\t\t\t\tif HarvestedCorpses:get(faced.hitObject.id) == faced.hitObject.id then\n\t\t\t\t\t\t\tui.showMessage('This corpse was harvested!')\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\tend\n\t\t\t\t\t\tif types.Player.quests(self)[\"KSN_SorkvildTeacher\"].stage == 100 then\n\t\t\t\t\t\tui.showMessage('You harvest a corpse!')\n\t\t\t\t\t\tcore.sendGlobalEvent(\"HarvestCorpse\", faced.hitObject)\n\t\t\t\t\t\tHarvestedCorpses:set(faced.hitObject.id, faced.hitObject.id)\n\t\t\t\t\t\tI.UI.addMode('Container', {target = faced.hitObject})\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\n\n\tend\n\n\t\n\tif key.code == input.KEY.LeftAlt and I.UI.getMode() == \"Container\" and types.Player.quests(self)[\"MG_Sharn_Necro\"].stage == 10 then\n\t\tlocal faced = nearby.castRenderingRay(camera.getPosition(), camera.getPosition() + camera.viewportToWorldVector(util.vector2(0.5, 0.5))* 8192, {ignorePlayer = true})\n\t\t\tif faced.hitObject then \n\t\t\t\tif types.NPC.objectIsInstance(faced.hitObject) then\n\t\t\t\t\tif types.Actor.isDead(faced.hitObject) then\n\t\t\t\t\t\tif HarvestedCorpses:get(faced.hitObject.id) == faced.hitObject.id then\n\t\t\t\t\t\t\tui.showMessage(\"You can't reanimate corpse that was harvested!\")\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\tend\n\t\t\t\t\tcore.sendGlobalEvent(\"SpawnProp\", \"KSN_Zombie_Summon_PROP\")\n\t\t\t\t\tcore.sendGlobalEvent(\"RemoveCorpse\", faced.hitObject)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\tend\n\nend\n\n\nreturn { engineHandlers = {onKeyPress = RayCast} }\n",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\CorpsePlacement.lua": "local nearby = require('openmw.nearby')\nlocal ui = require('openmw.ui')\nlocal self = require('openmw.self')\nlocal async = require('openmw.async')\nlocal types = require('openmw.types')\nlocal input = require('openmw.input')\nlocal camera = require('openmw.camera')\nlocal core = require('openmw.core')\nlocal storage = require('openmw.storage')\nlocal util = require('openmw.util')\nlocal I = require(\"openmw.interfaces\")\nlocal HarvestedCorpses = storage.playerSection(\"IsHarvested\")\nHarvestedCorpses:setLifeTime(storage.LIFE_TIME.Temporary)\nlocal function RayCast()\n\tlocal position = nearby.castRay(camera.getPosition(), camera.getPosition() + camera.viewportToWorldVector(util.vector2(0.5, 0.5))* 300, {collisionType=nearby.COLLISION_TYPE.HeightMap + nearby.COLLISION_TYPE.Water + nearby.COLLISION_TYPE.World,radius = 10,})\n\tcore.sendGlobalEvent(\"GetNavmeshPosition\", position.hitPos)\nend\n\nlocal function SetPosition(key)\n          if key.code == input.KEY.LeftCtrl then\n                core.sendGlobalEvent(\"SetPropPosition\")\n            end\nend\n\nlocal function GetPropID(obj)\n\tPropID = obj\t\n\tprint(PropID)\nend\n\nlocal function SendNavmeshPosition(position)\n\tcore.sendGlobalEvent(\"GetNavmeshPosition\", position)\n\t\nend\n\nreturn { \neventHandlers = { GetPropID = GetPropID },\nengineHandlers = {onUpdate = RayCast, onKeyPress = SetPosition}\n\n }\n",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\CorpsePlacementMechanics.lua": "local types = require('openmw.types')\nlocal core = require('openmw.core')\nlocal anim = require('openmw.animation')\nlocal world = require('openmw.world')\nlocal player = world.players[1]\nlocal PropID = nil\nlocal NavmeshPosition\nlocal DoOnce = nil\nlocal function ChoosePropPlace()\n\tif NavmeshPosition == nil then\n\treturn\n\tend\n\tif PropID == nil then\n\treturn\n\tend\n\tplayer = world.players[1]\n\tprint(NavmeshPosition)\n\tPropID:teleport(world.players[1].cell.name, NavmeshPosition)\n\tif DoOnce == nil then\n\t\tanim.clearAnimationQueue(PropID, true)\n\tend\n\tanim.playQueued(PropID, 'knockout', {startkey = 'loop start', stopkey = 'loop stop'})\n\nend\n\n\n\nlocal function SetPropPosition(Position)\n\t--Dodać tutaj efekt paraliżu coby skurwysynu sie nie ruszały\n\tDoOnce = nil\n\tPropID = nil\n\t\nend\n\nlocal function GetNavmeshPosition(Position)\n\tNavmeshPosition = Position\n\t\nend\n\n\n\nlocal function SpawnProp(obj)\n\tplayer = world.players[1]\n\tProp = world.createObject(obj, 1)\n\tProp:teleport(world.players[1].cell.name, world.players[1].position)\n        player:sendEvent(\"GetPropID\", Prop)\n\tPropID = Prop\nend\n\nreturn {\n    eventHandlers = { SpawnProp = SpawnProp, GetNavmeshPosition = GetNavmeshPosition, SetPropPosition = SetPropPosition },\n    engineHandlers = {onUpdate = ChoosePropPlace} \n}\n\n\n",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\CreatureEvents.lua": "local types = require('openmw.types')\nlocal self = require('openmw.self')\n\nlocal function Paralyze()\ntypes.Actor.activeSpells(self):add({id = 'paralysis', effects = { 0 }})\nprint(self.recordId)\nend\n\n\n\n\n\nreturn {\n    eventHandlers = { Paralyze = Paralyze },\n}",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\NPC.lua": "local nearby = require('openmw.nearby')\nlocal I = require(\"openmw.interfaces\")\nlocal ui = require('openmw.ui')\nlocal types = require('openmw.types')\n\nlocal function ShowMessage(mess)\nui.showMessage(mess)\n\nend\n\nlocal ambient = require('openmw.ambient')\nlocal function playSoundEvent(soundId)\n    ambient.playSound(soundId)\nend\n\nlocal function OpenEnchantMenu(obj)\n    I.UI.setMode(\"Enchanting\",{target =obj})\nend\n\nlocal function OpenHarvestingContainer(Actor)\nI.UI.addMode('Container', {target = Actor})\nend\n\n\nreturn {\n    eventHandlers = { ShowMessage = ShowMessage, playSoundEvent = playSoundEvent, OpenEnchantMenu = OpenEnchantMenu, OpenHarvestingContainer = OpenHarvestingContainer },\n}",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\Spells.lua": "local types = require('openmw.types')\nlocal core = require('openmw.core')\nlocal anim = require('openmw.animation')\nlocal world = require('openmw.world')\nlocal PlayerInventory = world.players[1]\nlocal ActorToReanimate = nil\nlocal WasAnimationPlayed = false\nlocal function OnUpdate()\n\n\tif ActorToReanimate and WasAnimationPlayed == false then\n\t\tanim.playQueued(ActorToReanimate, 'knockout', {startkey = 'loop stop', stopkey = 'stop', loops = 0})\n\t\tWasAnimationPlayed = true\n\t\tActorToReanimate:sendEvent('StartAIPackage', {type='Follow', target=world.players[1]})\n\t\tlocal effect = types.Actor.activeEffects(ActorToReanimate)\n\t\teffect:getEffect(\"paralyze\")\n\t\teffect:remove(\"paralyze\")\n\t\tActorToReanimate = nil\n\t\t\n\tend\n\t\n\n\tfor i, actor in ipairs(world.activeActors) do \t \n\t\t\tif actor.recordId == \"ksn_zombie_summon_prop\" or actor.recordId == \"ksn_skeleton_weak_prop\" then\n\t\t\t\t\tlocal effect = types.Actor.activeSpells(actor):isSpellActive(\"ksn_reanimate\")\n\t\t\t\t\tif effect == true then\n\t\t\t\t\t\t\tif anim.isPlaying(actor, \"knockout\") then\n\t\t\t\t\t\t\t\tfor i, Spellid in pairs(types.Actor.activeSpells(actor)) do \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif Spellid.id == \"ksn_reanimate\" then\n\t\t\t\t\t\t\t\t\t\ttypes.Actor.activeSpells(actor):remove(Spellid.activeSpellId)\n\t\t\t\t\t\t\t\t\t\tReanimEffect = world.createObject('sprigganup', 1)\n\t\t\t\t\t\t\t\t\t\tReanimEffect:teleport(actor.cell.name, actor.position)\n\t\t\t\t\t\t\t\t\t\tActorToReanimate = actor\n\t\t\t\t\t\t\t\t\t\tWasAnimationPlayed = false\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tend \n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\n\t\t\t\t\tend\n\t\t\t\t\n\t\t\tend\n\n\n\n\n\n\tend\nend\n\nreturn { engineHandlers = {onUpdate = OnUpdate} }\n",
    "Corpse Preparation-55006-0-5A-1722785853\\Corpse Preparation\\scripts\\CorpsePrep\\UseHandlers.lua": "local world = require(\"openmw.world\")\nlocal core = require(\"openmw.core\")\nlocal I = require(\"openmw.interfaces\")\nlocal types = require(\"openmw.types\")\nlocal anim = require('openmw.animation')\nlocal fixedCell = false\n\n\n\n\nlocal function useHandler(obj)\n    print(obj.recordId)\n    if obj.recordId == gemId then\n        world.players[1]:sendEvent(\"OpenEnchantMenu\", obj)\n        return false\n    end\n    if obj.recordId == \"ksn_misc_boneskelarmr\" then\n\tcore.sendGlobalEvent(\"OpenNecroCrafting\")\n    end\n    if obj.recordId == \"ksn_misc_boneskelpelvis\" then\n\tcore.sendGlobalEvent(\"OpenNecroCrafting\")\n    end\n    if obj.recordId == \"ksn_misc_boneskelskullupper\" then\n\tcore.sendGlobalEvent(\"OpenNecroCrafting\")\n    end\n    if obj.recordId == \"ksn_misc_boneskeltorso\" then\n\tcore.sendGlobalEvent(\"OpenNecroCrafting\")\n    end\n    if obj.recordId == \"ksn_misc_leg\" then\n\tcore.sendGlobalEvent(\"OpenNecroCrafting\")\n    end\n    if obj.recordId == \"ksn_misc_torsobroken\" then\n\tcore.sendGlobalEvent(\"OpenNecroCrafting\")\n    end\n\n    if obj.recordId == \"ksn_crippled_skeleton\" then\n\tlocal PlayerInventory = types.Actor.inventory(world.players[1])\n\tlocal item = PlayerInventory:find('ksn_crippled_skeleton')\n\titem:remove('ksn_crippled_skeleton')\n\tcore.sendGlobalEvent(\"SpawnProp\", \"KSN_Skeleton_Weak_PROP\")\n    end\nend\n        I.ItemUsage.addHandlerForType(types.Miscellaneous, useHandler)\n\n\n"
  }
}