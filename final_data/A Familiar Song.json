{
  "folder_name": "A Familiar Song",
  "lua_files": {
    "A Familiar Song 1.1-53951-1-1-1705271806\\Data Files\\Familiar Song OpenMW\\Scripts\\superduple\\A Familiar Song\\fs_global.lua": "local world = require('openmw.world') --- We can use functions that affect the entire world, like global variables or the actual positions of objects\n\nreturn {\n    eventHandlers = {\n        playerAttacked = function(player)\n        --- print(\"One Attack!\") --- This is just so you know it's happening, no need for it\n        world.mwscript.getGlobalVariables(player).fs_WeaponSwish = 1\n        end\n    }\n}",
    "A Familiar Song 1.1-53951-1-1-1705271806\\Data Files\\Familiar Song OpenMW\\Scripts\\superduple\\A Familiar Song\\fs_player.lua": "local core = require('openmw.core')\nlocal self = require('openmw.self')\n\nlocal didAttack = false\nlocal doOnce = false\n\nlocal function isAttacking()\n  -- Check if they're attacking, but don't do it again until the attack stops\n  if self.controls.use == 1 and not doOnce then \n    didAttack = true\n    doOnce = true\n  elseif self.controls.use == 0 then\n    doOnce = false\n  end\n  -- Trigger the mwscript variable change in the global script\n  if didAttack then\n    core.sendGlobalEvent(\"playerAttacked\", self)\n    didAttack = false\n  end\n\nend\n\nreturn {\n  engineHandlers = {\n    onUpdate = isAttacking -- Do these checks every frame just like an mwscript\n  }\n}",
    "A Familiar Song 1.1-53951-1-1-1705271806\\Data Files\\mwse\\mods\\A Familiar Song\\main.lua": "local function weaponSwishOnPlayerAttack(e)\n    -- Someone other than the player is attacking.\n    if (e.reference ~= tes3.player) then\n        return\n    end\n    -- The attack has no target.\n    -- if e.targetReference == nil then\n        -- return\n    -- end\n    tes3.findGlobal(\"fs_WeaponSwish\").value = 1\n    -- tes3.messageBox(\"Debug: Variable changed with MWSE.\")\nend\n\n-- The function to call on the initialized event.\nlocal function initialized()\n    -- Register on attack MessageBox\n    event.register(tes3.event.attack, weaponSwishOnPlayerAttack)\n\n    -- Print a \"Ready!\" statement to the MWSE.log file.\n    print(\"[A Familiar Song: INFO] A Familiar Song Initialized\")\nend\n\n-- Register initialized function to the initialized event.\nevent.register(tes3.event.initialized, initialized)"
  }
}