{
  "folder_name": "Visually Filled Soul Gems for OpenMW (Lua scripting) ENG and RU versions",
  "lua_files": {
    "ChangeSoulGemOpenMW ver 1.1-54100-1-1-1707575480\\ChangeSoulGemOpenMW\\ChangeSoulGemOMW\\scripts\\ChangeSoulGemOMW_GLO.lua": "local world = require('openmw.world')\nlocal types = require('openmw.types')\nlocal core = require('openmw.core')\n\n-- Mapping table for soul gem replacement\nlocal soulGemMapping = {\n    ['misc_soulgem_common'] = 'misc_soulgem_common_svnr',\n    ['misc_soulgem_grand'] = 'misc_soulgem_grand_svnr',\n    ['misc_soulgem_greater'] = 'misc_soulgem_greater_svnr',\n    ['misc_soulgem_lesser'] = 'misc_soulgem_lesser_svnr',\n    ['misc_soulgem_petty'] = 'misc_soulgem_petty_svnr',\n}\n\n-- Function to replace soul gems\nlocal function ChangeSoulGem(item)\n    local Cell = item.cell\n    local Position = item.position\n    local Rotation = item.rotation\n    local Soul = types.Miscellaneous.getSoul(item)\n\tlocal OwnerID = item.ownerRecordId\n\tlocal OwnerFactionId = item.ownerFactionId\n\tlocal OwnerFactionRank = item.ownerFactionRank\n    local newSoulGemId = soulGemMapping[item.recordId]\n\n    if newSoulGemId then -- Check if there is a mapping for the item\n        local NewSoulGem = world.createObject(newSoulGemId,item.count)\n        if NewSoulGem then -- If the new soul gem was created successfully\n            item:remove(item.count)\n            NewSoulGem:teleport(Cell, Position, Rotation)\n            types.Miscellaneous.setSoul(NewSoulGem, Soul)\n            NewSoulGem.ownerRecordId = OwnerID\n            NewSoulGem.ownerFactionId = OwnerFactionId\n            NewSoulGem.ownerFactionRank = OwnerFactionRank\n        end\n    end\nend\n\nreturn {\n    engineHandlers = {\n        onItemActive = function(item)\n            if soulGemMapping[item.recordId] and types.Miscellaneous.getSoul(item) then\n                ChangeSoulGem(item)\n            end\n        end,\n    }\n}"
  }
}