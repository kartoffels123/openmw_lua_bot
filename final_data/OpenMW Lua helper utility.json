{
  "folder_name": "OpenMW Lua helper utility",
  "lua_files": {
    "OpenMW Lua helper utility v0.51-54629-0-51-1715633803\\scripts\\OpenMW_luahelper\\global.lua": "local world = require(\"openmw.world\")\nlocal core = require(\"openmw.core\")\nlocal types = require(\"openmw.types\")\nlocal util = require(\"openmw.util\")\nlocal async = require(\"openmw.async\")\nlocal time = require(\"openmw_aux.time\")\n\nlocal openDialog = false\nlocal playerobj = world.players[1]\nlocal MWglobal = world.mwscript.getGlobalVariables()\nlocal playercell, playerTurn = nil, 0\nlocal pcell = {exterior=nil, prev=nil}\nlocal weathertable = {\n\t[\"ascadian isles region\"] = 0,\n\t[\"ashlands region\"] = 0,\n\t[\"azura\\'s coast region\"] = 0,\n\t[\"bitter coast region\"] = 0,\n\t[\"brodir grove region\"] = 0,\n\t[\"felsaad coast region\"] = 0,\n\t[\"grazelands region\"] = 0,\n\t[\"hirstaang forest region\"] = 0,\n\t[\"isinfier plains region\"] = 0,\n\t[\"moesring mountains region\"] = 0,\n\t[\"molag mar region\"] = 0,\n\t[\"mournhold region\"] = 0,\n\t[\"red mountain region\"] = 0,\n\t[\"sheogorad\"] = 0,\n\t[\"thirsk region\"] = 0,\n\t[\"west gash region\"] = 0,\n\n\t[\"aanthirin region\"] = 0,\n\t[\"abecean sea region\"] = 0,\n\t[\"alt orethan region\"] = 0,\n\t[\"aranyon pass region\"] = 0,\n\t[\"armun ashlands region\"] = 0,\n\t[\"arnesian jungle region\"] = 0,\n\t[\"ascadian bluffs region\"] = 0,\n\t[\"boethiah\\'s spine region\"] = 0,\n\t[\"broken cape region\"] = 0,\n\t[\"clambering moor region\"] = 0,\n\t[\"colovian barrowlands region\"] = 0,\n\t[\"colovian highlands region\"] = 0,\n\t[\"dagon urul region\"] = 0,\n\t[\"dasek marsh region\"] = 0,\n\t[\"deshaan plains region\"] = 0,\n\t[\"drajkmyr marsh region\"] = 0,\n\t[\"druadach highlands region\"] = 0,\n\t[\"falkheim region\"] = 0,\n\t[\"gilded hills region\"] = 0,\n\t[\"gold coast region\"] = 0,\n\t[\"gorvigh mountains region\"] = 0,\n\t[\"grey meadows region\"] = 0,\n\t[\"helnim fields region\"] = 0,\n\t[\"hirsing forest region\"] = 0,\n\t[\"hrimbald plateau region\"] = 0,\n\t[\"jerall mountains region\"] = 0,\n\t[\"julan-shar region\"] = 0,\n\t[\"kilkreath mountains region\"] = 0,\n\t[\"kreathi vale region\"] = 0,\n\t[\"kvetch pass region\"] = 0,\n\t[\"lan orethan region\"] = 0,\n\t[\"lorchwuir heath region\"] = 0,\n\t[\"mephalan vales region\"] = 0,\n\t[\"mhorken hills region\"] = 0,\n\t[\"midkarth region\"] = 0,\n\t[\"molah ruhn region\"] = 0,\n\t[\"molagreahd region\"] = 0,\n\t[\"mudflats region\"] = 0,\n\t[\"nedothril region\"] = 0,\n\t[\"northshore region\"] = 0,\n\t[\"old ebonheart region\"] = 0,\n\t[\"othreleth woods region\"] = 0,\n\t[\"padomaic ocean region\"] = 0,\n\t[\"reaver\\'s shore region\"] = 0,\n\t[\"rift valley region\"] = 0,\n\t[\"roth roryn region\"] = 0,\n\t[\"sacred lands region\"] = 0,\n\t[\"salt marsh region\"] = 0,\n\t[\"sea of ghosts region\"] = 0,\n\t[\"seitur region\"] = 0,\n\t[\"shambalun veil region\"] = 0,\n\t[\"shipal-shin region\"] = 0,\n\t[\"skaldring mountains region\"] = 0,\n\t[\"solitude forest region\"] = 0,\n\t[\"solitude forest region s\"] = 0,\n\t[\"southern gold coast region\"] = 0,\n\t[\"stirk isle region\"] = 0,\n\t[\"sundered hills region\"] = 0,\n\t[\"sundered scar region\"] = 0,\n\t[\"telvanni isles region\"] = 0,\n\t[\"temaris isle region\"] = 0,\n\t[\"thirr valley region\"] = 0,\n\t[\"throat of the world region\"] = 0,\n\t[\"trolls\\'s teeth mountains region\"] = 0,\n\t[\"uld vraech region\"] = 0,\n\t[\"valstaag highlands region\"] = 0,\n\t[\"velothi mountains region\"] = 0,\n\t[\"vorndgad forest region\"] = 0,\n\t[\"west weald region\"] = 0,\n\t[\"white plains region\"] = 0,\n\t[\"wuurthal dale region\"] = 0,\n\t[\"ysheim region\"] = 0,\n\n}\n\nif not core.contentFiles.has(\"OpenMW_luahelper.esp\") then\n\tprint(\"Lua helper matching .esp not present. Please check your load order. Disabling this script ...\")\n\treturn\nend\nif core.contentFiles.has(\"OpenMW_luahelper_dialog.esp\") then\n\tprint(\"Loaded lua dialogue helper for MW TB BM InfoGetText events.\")\nend\nif core.contentFiles.has(\"OpenMW_luahelper_dialog_tr.esp\") then\n\tprint(\"Loaded lua dialogue helper for Tamriel Rebuilt InfoGetText events.\")\nend\n\n\nlocal function setEnabled(data)\n\tlocal obj = data[1]\n\tif not obj then return end\n\tobj.enabled = data[2]\n\tprint(obj.recordId, \"enabled \",(obj.enabled),\"->\",data[2])\nend\n\nlocal function objMove(data)\n\tlocal obj = data.object\n\tlocal cell = data.cell or obj.cell\n\tlocal rotation = data.rot or obj.rotation\n\tlocal position = data.pos or obj.position\n\tobj:teleport(cell, position, {rotation=rotation})\nend\n\nlocal function objTurn(data)\n\tlocal obj = data.object\n\tif obj == playerobj then\n\t\tplayerTurn = data.angle\n\telse\n\t\tlocal rot = (obj.rotation * util.transform.rotateZ(math.rad(data.angle)))\n\t\tobjMove({ object=obj, rot=rot })\n\tend\nend\n\n--[[\ntime.runRepeatedly(function()\n\tprint(MWglobal.omwWeather)\nend, 1 * time.second)\n--]]\n\nlocal function findExterior(cell)\n\tlocal doors = cell:getAll(types.Door)\n\tfor k,v in pairs(doors) do\n\t\tlocal c = types.Door.destCell(v)\n\t\tif c then\n\t\t\tif c.isExterior or c:hasTag(\"QuasiExterior\") then return c end\n\t\tend\n\tend\n\treturn nil\nend\n\nlocal function omwRotateZ(dt)\n\tlocal var = world.mwscript.getGlobalScript(\"omwLuaHelper\", playerobj).variables\n--\tprint(var, var.rotate, dt)\n\tvar.rotate = playerTurn / dt\n\tplayerTurn = 0\nend\n\nlocal function onUpdate(dt)\n\tif playerTurn ~= 0 then omwRotateZ(dt) end\n\tif not playerobj then return end\n\tlocal cell = playerobj.cell\n\tif MWglobal.omwCellChanged == 0 then return end\n\tlocal cellchange = cell ~= playercell\n\tif playercell == nil then playercell = cell\n\telseif cell.isExterior and playercell.isExterior then\n\t\tif cell.gridX == playercell.gridX and cell.gridY == playercell.gridY then cellchange = false end\n\tend\n\tif not cellchange and MWglobal.omwCellChanged ~= 0 then\n\t\tMWglobal.omwCellChanged = 0\t\t\n\t\tprint(\"omw cell change suppressed\")\n\t\treturn\n\tend\n\tpcell.prev = playercell\n\tplayercell = cell\n\tlocal isInterior = 1\n\tif cell.isExterior or cell:hasTag(\"QuasiExterior\") then\n\t\tisInterior = nil\n\t\tweathertable[cell.region] = MWglobal.omwWeather\n\t-- omwWeather is inaccurate immediately after a cell change from interior->exterior\n\t\tasync:newUnsavableSimulationTimer(1, function() weathertable[cell.region] = MWglobal.omwWeather end)\n\t\tpcell.exterior = cell\n\telse\n\t\tpcell.exterior = findExterior(cell)\n\tend\n\tlocal region, weather = nil, 0\n\tif pcell.exterior then\n\t\tregion = pcell.exterior.region\n\t\tweather = weathertable[region]\n\t\tif not weather and region then weathertable[region] = 0 end\n\tend\n\tif not weather then weather = 0 end\n\tlocal data = { player=playerobj, isInterior=isInterior, weather=weather, region=region }\n\tMWglobal.omwCellChanged = 0\n\tplayerobj:sendEvent(\"onCellChangeOlh\", data)\n\tcore.sendGlobalEvent(\"onCellChangeOlh\", data)\nend\n\nlocal function onFrame(dt)\n\tif not openDialog then return end\n\tif MWglobal.diagInfoID1 == 0 then return end\n\tlocal infoId = tostring(MWglobal.diagInfoID1..MWglobal.diagInfoID2..MWglobal.diagInfoID3)\n\tif MWglobal.diagInfoID4 ~= 1234 then infoId = infoId..tostring(MWglobal.diagInfoID4) end\n\tcore.sendGlobalEvent(\"tes3InfoGetText\", {info={id=infoId, type=\"dialogue\"}})\n\tplayerobj:sendEvent(\"tes3InfoGetText\", {info={id=infoId, type=\"dialogue\"}})\n\tMWglobal.diagInfoID1, MWglobal.diagInfoID4 = 0, 1234\nend\n\n\nreturn {\n\tengineHandlers = {\n\t\tonUpdate = onUpdate,\n\t\tonPlayerAdded = function(data)\n\t\t\tplayerobj = data\n\t\t\tprint(\"Creating CellChange event\")\n\t\t\tMWglobal = world.mwscript.getGlobalVariables(playerobj)\n\t\t\tMWglobal.omwCellChanged = 1\n\t\tend\n\t},\n\teventHandlers = {\n\t\tonFrameOlh = onFrame,\n\t\tonDialogOpened = function() openDialog = true end,\n\t\tonDialogClosed = function() openDialog = false end,\n\t\tolhObjEnabled = olhObjEnabled,\n\t\tsetEnabled = setEnabled,\n\t\tremoveScriptOlh = function(data)\n\tprint(data.object, \"removing\", data.script)\n\tdata.object:removeScript(data.script)\n\tend,\n\t\tobjTurn = objTurn,\n\t\tobjMove = objMove\n\t},\n\tinterfaceName = \"LuaHelper\",\n\tinterface = {\n\t\tversion = 1,\n\t\tobjMove = objMove,\n\t\tobjTurn = objTurn\n\t}\n\n}\n",
    "OpenMW Lua helper utility v0.51-54629-0-51-1715633803\\scripts\\OpenMW_luahelper\\player.lua": "local core = require(\"openmw.core\")\nlocal self = require(\"openmw.self\")\n\nlocal dialogModes = {\n\tBarter = true,\n\tCompanion = true,\n\tDialogue = true,\n\tEnchanting = true,\n\tMerchantRepair = true,\n\tTravel = true,\n\tTraining = true,\n\tSpellBuying = true,\n\tSpellCreation = true,\n\tPersuasion = true,\n\t\t}\n\nlocal dialogTarget = nil\nlocal dialogNearby = false\n\nlocal function objectsNearby(k, v)\n\tlocal valid = false\n\tif k.cell.isExterior then valid = (k.position - v.position):length() < 7000\n\telse valid = k.cell == v.cell end\n\treturn valid\nend\n\nlocal function UiModeChanged(data)\n\tif dialogModes[data.newMode] and not dialogModes[data.oldMode] and data.arg and dialogTarget ~= data.arg then\n\t\tif data.arg ~= nil then\n\t\t\tif objectsNearby(self, data.arg) then dialogNearby = true else dialogNearby = false end\n\t\t\tdata[\"near\"], data[\"player\"] = dialogNearby, self\n\t\t\tcore.sendGlobalEvent(\"onDialogOpened\", data)\n\t\t\tself:sendEvent(\"onDialogOpened\", data)\n\t\t\tdialogTarget = data.arg\n\t\tend\n--\telseif dialogModes[data.oldMode] and not dialogModes[data.newMode] and dialogTarget ~= data.arg then\n\telseif data.newMode == nil and dialogTarget then\n\t\tdata[\"near\"] = dialogNearby\n\t\tcore.sendGlobalEvent(\"onDialogClosed\", data)\n\t\tself:sendEvent(\"onDialogClosed\", data)\n\t\tdialogTarget = nil\n\t\tdialogNearby = false\n\tend\nend\n\nreturn {\n\tengineHandlers = { onFrame = function(data)\n\t\tif dialogTarget then core.sendGlobalEvent(\"onFrameOlh\", data) end\n\t\tend,\n--\t\tonTeleported = function() print(\"player onTeleported triggered\") end\n\t},\n\teventHandlers = { UiModeChanged = UiModeChanged },\n}\n"
  }
}