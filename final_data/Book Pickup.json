{
  "folder_name": "Book Pickup",
  "lua_files": {
    "Book Pickup OpenMW v1.2.1b-46625-v1-2-1b-1708048264\\scripts\\bookpickup\\bp_global.lua": "local types = require(\"openmw.types\")\nlocal acti = require(\"openmw.interfaces\").Activation\nlocal core = require(\"openmw.core\")\nlocal storage = require(\"openmw.storage\")\nlocal I = require(\"openmw.interfaces\")\nlocal shiftPressed = false\nif (core.API_REVISION < 54) then\n    error(\"Newer version of OpenMW is required\")\nend\nI.Settings.registerGroup {\n    key = \"SettingsBookPickup\",\n    page = \"BookPickup\",\n    l10n = \"BookPickup\",\n    name = 'core.modName',\n    description = 'mcm.credits',\n    permanentStorage = true,\n    settings = {\n        {\n            key = \"PickupByDefault\",\n            renderer = \"checkbox\",\n            name = \"mcm.pickupByDefault.label\",\n            description =\n            \"mcm.pickupByDefault.description\",\n            default = \"true\"\n        }, --This is the only possible setting at the moment, we can't allow stealing an item since moving it via lua would make it free.\n    }\n}\n\nlocal function activateBook(object, actor)\n    local defaultSetting = storage.globalSection(\"SettingsBookPickup\"):get(\"PickupByDefault\")\n    if (object.owner.recordId ~= nil or object.owner.factionId ~= nil or object.cell == nil) then\n        return --We should not automatically pick up owned books\n    end\n    if (shiftPressed and defaultSetting or shiftPressed == false and defaultSetting == false) then\n        return --Will prevent if shift is pressed, or inverse if that setting is changed.\n    end\n    actor:sendEvent(\"playAmbientNoise\", \"book open\")\n    object:moveInto(actor)\n    --Moves the book item into the player's inventory.\n    return false\nend\nacti.addHandlerForType(types.Book, activateBook)\n--Will trigger the above function whenever books are activated. Note that this will not work on books with scripts.\nlocal function BookPickupShiftUpdate(val) shiftPressed = val end\n--local function BookPickupUpdateSetting(bool) storage.globalSection(\"BookPickup\"):set(\"pickupByDefault\", bool) end\nreturn {\n    eventHandlers = {\n        BookPickupShiftUpdate = BookPickupShiftUpdate,\n  --      BookPickupUpdateSetting = BookPickupUpdateSetting,\n    }\n}\n",
    "Book Pickup OpenMW v1.2.1b-46625-v1-2-1b-1708048264\\scripts\\bookpickup\\bp_player.lua": "local core = require(\"openmw.core\")\nlocal input = require(\"openmw.input\")\n\nlocal SettingsBookPickup = require(\"scripts.bookpickup.bp_settings\")\n\nlocal ambient = require('openmw.ambient')\nlocal function onKeyPress(key)\n    if (key.code == input.KEY.LeftShift or key.code == input.KEY.RightShift) then\n        core.sendGlobalEvent(\"BookPickupShiftUpdate\", true)\n    end\nend\nlocal function onKeyRelease(key)\n    if (key.code == input.KEY.LeftShift or key.code == input.KEY.RightShift) then\n        local keyPressed = not SettingsBookPickup:get(\"PickupByDefault\")\n\n        core.sendGlobalEvent(\"BookPickupShiftUpdate\", false)\n    end\nend\nlocal function playAmbientNoise(name)\n    ambient.playSound(name)\nend\nreturn {\n    engineHandlers = { onKeyPress = onKeyPress, onKeyRelease = onKeyRelease },\n    eventHandlers = { playAmbientNoise = playAmbientNoise }\n}\n",
    "Book Pickup OpenMW v1.2.1b-46625-v1-2-1b-1708048264\\scripts\\bookpickup\\bp_settings.lua": "local core = require(\"openmw.core\")\nlocal I = require(\"openmw.interfaces\")\nlocal async = require(\"openmw.async\")\nlocal storage = require(\"openmw.storage\")\nif (core.API_REVISION < 54) then\n    I.Settings.registerPage {\n        key = \"BookPickup\",\n        l10n = \"BookPickup\",\n        name = \"core.modName\",\n        description = \"Book pickup is enabled, but your engine version is too old. Please download a new version of OpenMW Develpment or 0.49+.(Newer than Feb 15, 2024)\"\n    }\n    error(\"Newer version of OpenMW is required\")\nend\nI.Settings.registerPage {\n    key = \"BookPickup\",\n    l10n = \"BookPickup\",\n    name = \"core.modName\",\n    description = \"core.versionString\"\n}\nlocal SettingsBookPickup = storage.playerSection(\"SettingsBookPickup\")\n\n\nreturn SettingsBookPickup"
  }
}