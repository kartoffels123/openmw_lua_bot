{
  "folder_name": "Hevyl's Simple Leveling",
  "lua_files": {
    "Hevyls Simple Leveling-52151-1-01-1673312686\\Hevyls Simple Leveling\\scripts\\HSL.lua": "local ui = require('openmw.ui')\nlocal self = require('openmw.self')\nlocal util = require('openmw.util')\nlocal types = require('openmw.types')\nlocal storage = require('openmw.storage')\n\nlocal exp = 0\n\nlocal creation_complete = false\n\nlocal pt = {\n    ['mysticism'] = 0,\n    ['destruction'] = 0,\n    ['lightarmor'] = 0,\n    ['restoration'] = 0,\n    ['alteration'] = 0,\n    ['longblade'] = 0,\n    ['conjuration'] = 0,\n    ['illusion'] = 0,\n    ['mercantile'] = 0,\n    ['enchant'] = 0,\n    ['block'] = 0,\n    ['armorer'] = 0,\n    ['mediumarmor'] = 0,\n    ['heavyarmor'] = 0,\n    ['unarmored'] = 0,\n    ['bluntweapon'] = 0,\n    ['axe'] = 0,\n    ['spear'] = 0,\n    ['athletics'] = 0,\n    ['alchemy'] = 0,\n    ['security'] = 0,\n    ['sneak'] = 0,\n    ['acrobatics'] = 0,\n    ['shortblade'] = 0,\n    ['marksman'] = 0,\n    ['speechcraft'] = 0,\n    ['handtohand'] = 0\n}\n\nlocal function getCurrentLevel()\n    return types.Player.stats.level(self).current\nend\n\nlocal function setLevel(amt)\n    types.Player.stats.level(self).current = types.Player.stats.level(self).current + amt\nend\n\nlocal function setHealth(amt)\n    types.Player.stats.dynamic.health(self).base = types.Player.stats.dynamic.health(self).base + amt\nend\n\nlocal function setMagicka(amt)\n    types.Player.stats.dynamic.magicka(self).base = types.Player.stats.dynamic.magicka(self).base + amt\nend\n\nlocal function getSkillLevel(skill)\n    return types.Player.stats.skills[skill](self).base\nend\n\n\nlocal function modAttribute(attr, amnt)\n    types.Player.stats.attributes[attr](self).base = types.Player.stats.attributes[attr](self).base + amnt\nend\n\nlocal function getAttribute(attr)\n    return types.Player.stats.attributes[attr](self).base\nend\n\nlocal skillPrev =  {\n    ['mysticism'] = getSkillLevel('mysticism'),\n    ['destruction'] = getSkillLevel('destruction'),\n    ['lightarmor'] = getSkillLevel('lightarmor'),\n    ['restoration'] = getSkillLevel('alteration'),\n    ['alteration'] = getSkillLevel('alteration'),\n    ['longblade'] = getSkillLevel('longblade'),\n    ['conjuration'] = getSkillLevel('conjuration'),\n    ['illusion'] = getSkillLevel('illusion'),\n    ['mercantile'] = getSkillLevel('mercantile'),\n    ['enchant'] = getSkillLevel('enchant'),\n    ['block'] = getSkillLevel('block'),\n    ['armorer'] = getSkillLevel('armorer'),\n    ['mediumarmor'] = getSkillLevel('mediumarmor'),\n    ['heavyarmor'] = getSkillLevel('heavyarmor'),\n    ['unarmored'] = getSkillLevel('unarmored'),\n    ['bluntweapon'] = getSkillLevel('bluntweapon'),\n    ['axe'] = getSkillLevel('axe'),\n    ['spear'] = getSkillLevel('spear'),\n    ['athletics'] = getSkillLevel('athletics'),\n    ['alchemy'] = getSkillLevel('alchemy'),\n    ['security'] = getSkillLevel('security'),\n    ['sneak'] = getSkillLevel('sneak'),\n    ['acrobatics'] = getSkillLevel('acrobatics'),\n    ['shortblade'] = getSkillLevel('shortblade'),\n    ['marksman'] = getSkillLevel('marksman'),\n    ['speechcraft'] = getSkillLevel('speechcraft'),\n    ['handtohand'] = getSkillLevel('handtohand')\n}\n\nlocal attrPrev = {\n    ['strength'] = getAttribute('strength'),\n    ['intelligence'] = getAttribute('intelligence'),\n    ['willpower'] = getAttribute('willpower'),\n    ['agility'] = getAttribute('agility'),\n    ['speed'] = getAttribute('speed'),\n    ['endurance'] = getAttribute('endurance'),\n    ['personality'] = getAttribute('personality'),\n    ['luck'] = getAttribute('luck')\n}\n\n--local function skillPrev(skill)\n    --if skill == 'mysticism' then\n        --return getSkillLevel('mysticism')\n    --end\n--end\n\nlocal function expHandle()\n    --Handles the exp and main level of the player. As well as adding health and Magicka per level.\n\n    --Add health using morrowinds original way by dividing the endurance by 10 and rounded down..\n    local tempH = math.floor(getAttribute('endurance') / 10)\n    --Add Magicka by taking intelligence and adding it to willpower that has been devided by 2 then the sum of those is devided by 15 and rounded down\n    local tempM = math.floor((getAttribute('intelligence') + (getAttribute('willpower')/2)) / 15)\n\n    --checks to see if exp is greater or equal to 10 and if so sets the level by 1 and adds the tempH and tempM to health and magicka respectively. Also adds 1 luck and shows a message to the player.\n    if exp >= 10 then\n        setLevel(1)\n        setHealth(tempH)\n        setMagicka(tempM)\n        modAttribute('luck', 1)\n        ui.showMessage('You are now level ' .. getCurrentLevel() ..\"!\")\n        exp = 0\n    end\nend\n\nlocal function skillHandle(skill, attr)\n    local skillCur = getSkillLevel(skill)\n    local attrCur = getAttribute(attr)\n\n    if types.Actor.inventory(self):countOf(\"chargen statssheet\") > 0 and creation_complete == true then\n        skillPrev[skill] = skillCur\n        attrPrev[attr] = attrCur\n        exp = 0\n        types.Player.stats.level(self).current = 1\n        pt[skill] = 0\n    else\n        if skillCur > skillPrev[skill] then\n            pt[skill] = pt[skill] + 1\n            exp = exp + 1\n        end\n\n        if getAttribute(attr) >= 100 then\n            if pt[skill] >= 4 then\n                modAttribute(attr, 1)\n                ui.showMessage('Your ' .. attr .. ' has increased to ' ..  getAttribute(attr) .. \"!\")\n                pt[skill] = 0\n            end\n        else\n            if pt[skill] >= 2 then\n                modAttribute(attr, 1)\n                ui.showMessage('Your ' .. attr .. ' has increased to ' ..  getAttribute(attr) .. \"!\")\n                pt[skill] = 0\n            end\n        end\n    end\n    attrPrev[attr] = attrCur\n    skillPrev[skill] = skillCur\n\nend\n\nlocal function onSave()\n    return{\n        exp = exp,\n        pt = pt,\n        creation_complete = creation_complete\n    }\nend\n\nlocal function onLoad(data)\n    exp = data.exp\n    pt = data.pt\n    creation_complete = data.creation_complete\nend\n\nreturn {\n    engineHandlers = {\n        onSave = onSave,\n        onLoad = onLoad,\n        onKeyPress = function(key)\n            if key.symbol == 'x' then\n                ui.showMessage('Progress to next level is ' .. exp .. '/10')\n            end\n        end,\n        onUpdate = function()\n            if types.Actor.inventory(self):countOf(\"chargen statssheet\") > 0 and creation_complete == false then\n                creation_complete = true\n            end\n            if creation_complete == true then\n                expHandle()\n                skillHandle('mysticism', 'willpower')\n                skillHandle('destruction', 'willpower')\n                skillHandle('alteration', 'willpower')\n                skillHandle('conjuration', 'intelligence')\n                skillHandle('illusion', 'personality')\n                skillHandle('restoration', 'willpower')\n                skillHandle('alchemy', 'intelligence')\n                skillHandle('enchant', 'intelligence')\n                skillHandle('security', 'intelligence')\n                skillHandle('sneak', 'agility')\n                skillHandle('heavyarmor', 'endurance')\n                skillHandle('mediumarmor', 'endurance')\n                skillHandle('spear', 'endurance')\n                skillHandle('acrobatics', 'strength')\n                skillHandle('armorer', 'strength')\n                skillHandle('axe', 'strength')\n                skillHandle('bluntweapon', 'strength')\n                skillHandle('longblade', 'strength')\n                skillHandle('block', 'agility')\n                skillHandle('lightarmor', 'agility')\n                skillHandle('marksman', 'agility')\n                skillHandle('athletics', 'speed')\n                skillHandle('shortblade', 'speed')\n                skillHandle('unarmored', 'speed')\n                skillHandle('handtohand', 'speed')\n                skillHandle('mercantile', 'personality')\n                skillHandle('speechcraft', 'personality')\n            end\n        end,\n    },\n}",
    "Hevyls Simple Leveling-52151-1-01-1673312686\\Hevyls Simple Leveling\\scripts\\player.lua": "local ui = require('openmw.ui')\nlocal self = require('openmw.self')\nlocal util = require('openmw.util')\nlocal types = require('openmw.types')\nlocal storage = require('openmw.storage')\n\nlocal exp = 0\n\nlocal creation_complete = false\n\nlocal pt = {\n    ['mysticism'] = 0,\n    ['destruction'] = 0,\n    ['lightarmor'] = 0,\n    ['restoration'] = 0,\n    ['alteration'] = 0,\n    ['longblade'] = 0,\n    ['conjuration'] = 0,\n    ['illusion'] = 0,\n    ['mercantile'] = 0,\n    ['enchant'] = 0,\n    ['block'] = 0,\n    ['armorer'] = 0,\n    ['mediumarmor'] = 0,\n    ['heavyarmor'] = 0,\n    ['unarmored'] = 0,\n    ['bluntweapon'] = 0,\n    ['axe'] = 0,\n    ['spear'] = 0,\n    ['athletics'] = 0,\n    ['alchemy'] = 0,\n    ['security'] = 0,\n    ['sneak'] = 0,\n    ['acrobatics'] = 0,\n    ['shortblade'] = 0,\n    ['marksman'] = 0,\n    ['speechcraft'] = 0,\n    ['handtohand'] = 0\n}\n\nlocal function getCurrentLevel()\n    return types.Player.stats.level(self).current\nend\n\nlocal function setLevel(amt)\n    types.Player.stats.level(self).current = types.Player.stats.level(self).current + amt\nend\n\nlocal function setHealth(amt)\n    types.Player.stats.dynamic.health(self).base = types.Player.stats.dynamic.health(self).base + amt\nend\n\nlocal function setMagicka(amt)\n    types.Player.stats.dynamic.magicka(self).base = types.Player.stats.dynamic.magicka(self).base + amt\nend\n\nlocal function getSkillLevel(skill)\n    return types.Player.stats.skills[skill](self).base\nend\n\n\nlocal function modAttribute(attr, amnt)\n    types.Player.stats.attributes[attr](self).base = types.Player.stats.attributes[attr](self).base + amnt\nend\n\nlocal function getAttribute(attr)\n    return types.Player.stats.attributes[attr](self).base\nend\n\nlocal skillPrev =  {\n    ['mysticism'] = getSkillLevel('mysticism'),\n    ['destruction'] = getSkillLevel('destruction'),\n    ['lightarmor'] = getSkillLevel('lightarmor'),\n    ['restoration'] = getSkillLevel('alteration'),\n    ['alteration'] = getSkillLevel('alteration'),\n    ['longblade'] = getSkillLevel('longblade'),\n    ['conjuration'] = getSkillLevel('conjuration'),\n    ['illusion'] = getSkillLevel('illusion'),\n    ['mercantile'] = getSkillLevel('mercantile'),\n    ['enchant'] = getSkillLevel('enchant'),\n    ['block'] = getSkillLevel('block'),\n    ['armorer'] = getSkillLevel('armorer'),\n    ['mediumarmor'] = getSkillLevel('mediumarmor'),\n    ['heavyarmor'] = getSkillLevel('heavyarmor'),\n    ['unarmored'] = getSkillLevel('unarmored'),\n    ['bluntweapon'] = getSkillLevel('bluntweapon'),\n    ['axe'] = getSkillLevel('axe'),\n    ['spear'] = getSkillLevel('spear'),\n    ['athletics'] = getSkillLevel('athletics'),\n    ['alchemy'] = getSkillLevel('alchemy'),\n    ['security'] = getSkillLevel('security'),\n    ['sneak'] = getSkillLevel('sneak'),\n    ['acrobatics'] = getSkillLevel('acrobatics'),\n    ['shortblade'] = getSkillLevel('shortblade'),\n    ['marksman'] = getSkillLevel('marksman'),\n    ['speechcraft'] = getSkillLevel('speechcraft'),\n    ['handtohand'] = getSkillLevel('handtohand')\n}\n\nlocal attrPrev = {\n    ['strength'] = getAttribute('strength'),\n    ['intelligence'] = getAttribute('intelligence'),\n    ['willpower'] = getAttribute('willpower'),\n    ['agility'] = getAttribute('agility'),\n    ['speed'] = getAttribute('speed'),\n    ['endurance'] = getAttribute('endurance'),\n    ['personality'] = getAttribute('personality'),\n    ['luck'] = getAttribute('luck')\n}\n\n--local function skillPrev(skill)\n    --if skill == 'mysticism' then\n        --return getSkillLevel('mysticism')\n    --end\n--end\n\nlocal function expHandle()\n    --Handles the exp and main level of the player. As well as adding health and Magicka per level.\n\n    --Add health using morrowinds original way by dividing the endurance by 10 and rounded down..\n    local tempH = math.floor(getAttribute('endurance') / 10)\n    --Add Magicka by taking intelligence and adding it to willpower that has been devided by 2 then the sum of those is devided by 15 and rounded down\n    local tempM = math.floor((getAttribute('intelligence') + (getAttribute('willpower')/2)) / 15)\n\n    --checks to see if exp is greater or equal to 10 and if so sets the level by 1 and adds the tempH and tempM to health and magicka respectively. Also adds 1 luck and shows a message to the player.\n    if exp >= 10 then\n        setLevel(1)\n        setHealth(tempH)\n        setMagicka(tempM)\n        modAttribute('luck', 1)\n        ui.showMessage('You are now level ' .. getCurrentLevel() ..\"!\")\n        exp = 0\n    end\nend\n\nlocal function skillHandle(skill, attr)\n    local skillCur = getSkillLevel(skill)\n    local attrCur = getAttribute(attr)\n\n    if types.Actor.inventory(self):countOf(\"chargen statssheet\") > 0 and creation_complete == true then\n        skillPrev[skill] = skillCur\n        attrPrev[attr] = attrCur\n        exp = 0\n        types.Player.stats.level(self).current = 1\n        pt[skill] = 0\n    else\n        if skillCur > skillPrev[skill] then\n            pt[skill] = pt[skill] + 1\n            exp = exp + 1\n        end\n\n        if getAttribute(attr) >= 100 then\n            if pt[skill] >= 4 then\n                modAttribute(attr, 1)\n                ui.showMessage('Your ' .. attr .. ' has increased to ' ..  getAttribute(attr) .. \"!\")\n                pt[skill] = 0\n            end\n        else\n            if pt[skill] >= 2 then\n                modAttribute(attr, 1)\n                ui.showMessage('Your ' .. attr .. ' has increased to ' ..  getAttribute(attr) .. \"!\")\n                pt[skill] = 0\n            end\n        end\n    end\n    attrPrev[attr] = attrCur\n    skillPrev[skill] = skillCur\n\nend\n\nlocal function onSave()\n    return{\n        exp = exp,\n        pt = pt,\n        creation_complete = creation_complete\n    }\nend\n\nlocal function onLoad(data)\n    exp = data.exp\n    pt = data.pt\n    creation_complete = data.creation_complete\nend\n\nreturn {\n    engineHandlers = {\n        onSave = onSave,\n        onLoad = onLoad,\n        onKeyPress = function(key)\n            if key.symbol == 'x' then\n                ui.showMessage('Progress to next level is ' .. exp .. '/10')\n            end\n        end,\n        onUpdate = function()\n            if types.Actor.inventory(self):countOf(\"chargen statssheet\") > 0 and creation_complete == false then\n                creation_complete = true\n            end\n            if creation_complete == true then\n                expHandle()\n                skillHandle('mysticism', 'willpower')\n                skillHandle('destruction', 'willpower')\n                skillHandle('alteration', 'willpower')\n                skillHandle('conjuration', 'intelligence')\n                skillHandle('illusion', 'personality')\n                skillHandle('restoration', 'willpower')\n                skillHandle('alchemy', 'intelligence')\n                skillHandle('enchant', 'intelligence')\n                skillHandle('security', 'intelligence')\n                skillHandle('sneak', 'agility')\n                skillHandle('heavyarmor', 'endurance')\n                skillHandle('mediumarmor', 'endurance')\n                skillHandle('spear', 'endurance')\n                skillHandle('acrobatics', 'strength')\n                skillHandle('armorer', 'strength')\n                skillHandle('axe', 'strength')\n                skillHandle('bluntweapon', 'strength')\n                skillHandle('longblade', 'strength')\n                skillHandle('block', 'agility')\n                skillHandle('lightarmor', 'agility')\n                skillHandle('marksman', 'agility')\n                skillHandle('athletics', 'speed')\n                skillHandle('shortblade', 'speed')\n                skillHandle('unarmored', 'speed')\n                skillHandle('handtohand', 'speed')\n                skillHandle('mercantile', 'personality')\n                skillHandle('speechcraft', 'personality')\n            end\n        end,\n    },\n}",
    "HSL Update 2-52151-1-2-1715575812\\Hevyls Simple Leveling\\scripts\\HSL.lua": "\nlocal exp = 0\n\nlocal creation_complete = false\nlocal enable_magicka_gain = false\nlocal level_cap_unlocked = false\nlocal attribute_cap_unocked = false\n\n--Luck per level\nlocal luck_pts = 1\n--Attribute gain\nlocal attr_pts = 1\n--How many skills gains for an Attribute increase\nlocal pts2lvl = 2\n--How many skill gains for an Attribute increase after lvl 100\nlocal pts2lvl100 = 4\n--exp required to level\nlocal exp2lvl = 10\n\n\nlocal pt = {\n    ['mysticism'] = 0,\n    ['destruction'] = 0,\n    ['lightarmor'] = 0,\n    ['restoration'] = 0,\n    ['alteration'] = 0,\n    ['longblade'] = 0,\n    ['conjuration'] = 0,\n    ['illusion'] = 0,\n    ['mercantile'] = 0,\n    ['enchant'] = 0,\n    ['block'] = 0,\n    ['armorer'] = 0,\n    ['mediumarmor'] = 0,\n    ['heavyarmor'] = 0,\n    ['unarmored'] = 0,\n    ['bluntweapon'] = 0,\n    ['axe'] = 0,\n    ['spear'] = 0,\n    ['athletics'] = 0,\n    ['alchemy'] = 0,\n    ['security'] = 0,\n    ['sneak'] = 0,\n    ['acrobatics'] = 0,\n    ['shortblade'] = 0,\n    ['marksman'] = 0,\n    ['speechcraft'] = 0,\n    ['handtohand'] = 0\n}\n\nlocal function getCurrentLevel()\n    return types.Player.stats.level(self).current\nend\n\nlocal function setLevel(amt)\n    types.Player.stats.level(self).current = types.Player.stats.level(self).current + amt\nend\n\nlocal function setHealth(amt)\n    types.Player.stats.dynamic.health(self).base = types.Player.stats.dynamic.health(self).base + amt\nend\n\nlocal function setMagicka(amt)\n    types.Player.stats.dynamic.magicka(self).base = types.Player.stats.dynamic.magicka(self).base + amt\nend\n\nlocal function getSkillLevel(skill)\n    return types.Player.stats.skills[skill](self).base\nend\n\n\nlocal function modAttribute(attr, amnt)\n    types.Player.stats.attributes[attr](self).base = types.Player.stats.attributes[attr](self).base + amnt\nend\n\nlocal function getAttribute(attr)\n    return types.Player.stats.attributes[attr](self).base\nend\n\nlocal skillPrev =  {\n    ['mysticism'] = getSkillLevel('mysticism'),\n    ['destruction'] = getSkillLevel('destruction'),\n    ['lightarmor'] = getSkillLevel('lightarmor'),\n    ['restoration'] = getSkillLevel('restoration'),\n    ['alteration'] = getSkillLevel('alteration'),\n    ['longblade'] = getSkillLevel('longblade'),\n    ['conjuration'] = getSkillLevel('conjuration'),\n    ['illusion'] = getSkillLevel('illusion'),\n    ['mercantile'] = getSkillLevel('mercantile'),\n    ['enchant'] = getSkillLevel('enchant'),\n    ['block'] = getSkillLevel('block'),\n    ['armorer'] = getSkillLevel('armorer'),\n    ['mediumarmor'] = getSkillLevel('mediumarmor'),\n    ['heavyarmor'] = getSkillLevel('heavyarmor'),\n    ['unarmored'] = getSkillLevel('unarmored'),\n    ['bluntweapon'] = getSkillLevel('bluntweapon'),\n    ['axe'] = getSkillLevel('axe'),\n    ['spear'] = getSkillLevel('spear'),\n    ['athletics'] = getSkillLevel('athletics'),\n    ['alchemy'] = getSkillLevel('alchemy'),\n    ['security'] = getSkillLevel('security'),\n    ['sneak'] = getSkillLevel('sneak'),\n    ['acrobatics'] = getSkillLevel('acrobatics'),\n    ['shortblade'] = getSkillLevel('shortblade'),\n    ['marksman'] = getSkillLevel('marksman'),\n    ['speechcraft'] = getSkillLevel('speechcraft'),\n    ['handtohand'] = getSkillLevel('handtohand')\n}\n\nlocal attrPrev = {\n    ['strength'] = getAttribute('strength'),\n    ['intelligence'] = getAttribute('intelligence'),\n    ['willpower'] = getAttribute('willpower'),\n    ['agility'] = getAttribute('agility'),\n    ['speed'] = getAttribute('speed'),\n    ['endurance'] = getAttribute('endurance'),\n    ['personality'] = getAttribute('personality'),\n    ['luck'] = getAttribute('luck')\n}\n\n--local function skillPrev(skill)\n    --if skill == 'mysticism' then\n        --return getSkillLevel('mysticism')\n    --end\n--end\n\nlocal function expHandle()\n    --Handles the exp and main level of the player. As well as adding health and Magicka per level.\n\n    --Add health using morrowinds original way by dividing the endurance by 10 and rounded down..\n    local tempH = math.floor(getAttribute('endurance') / 10)\n    --Add Magicka by taking intelligence and adding it to willpower that has been devided by 2 then the sum of those is devided by 15 and rounded down\n    local tempM = math.floor((getAttribute('intelligence') + (getAttribute('willpower')/2)) / 15)\n\n    --checks to see if exp is greater or equal to 10 and if so sets the level by 1 and adds the tempH and tempM to health and magicka respectively. Also adds 1 luck and shows a message to the player.\n    if exp >= exp2lvl then\n\t\tif level_cap_unlocked = true then\n\t\t\tsetLevel(1)\n        setHealth(tempH)\n\t\tif enable_magicka_gain = true\n\t\t\tsetMagicka(tempM)\n        modAttribute('luck', luck_pts)\n        ui.showMessage('You are now level ' .. getCurrentLevel() ..\"!\")\n        exp = 0\n    end\nend\n\nlocal function skillHandle(skill, attr)\n    local skillCur = getSkillLevel(skill)\n    local attrCur = getAttribute(attr)\n\n    if types.Actor.inventory(self):countOf(\"chargen statssheet\") > 0 and creation_complete == true then\n        skillPrev[skill] = skillCur\n        attrPrev[attr] = attrCur\n        exp = 0\n        types.Player.stats.level(self).current = 1\n        pt[skill] = 0\n    else\n        if skillCur > skillPrev[skill] then\n            pt[skill] = pt[skill] + 1\n            exp = exp + 1\n        end\n\n        if getAttribute(attr) >= 100 && attribute_cap_unocked = true then\n            if pt[skill] >= pts2lvl100 then\n                modAttribute(attr, attr_pts)\n                ui.showMessage('Your ' .. attr .. ' has increased to ' ..  getAttribute(attr) .. \"!\")\n                pt[skill] = 0\n            end\n        else\n            if pt[skill] >= pts2lvl then\n                modAttribute(attr, attr_pts)\n                ui.showMessage('Your ' .. attr .. ' has increased to ' ..  getAttribute(attr) .. \"!\")\n                pt[skill] = 0\n            end\n        end\n    end\n    attrPrev[attr] = attrCur\n    skillPrev[skill] = skillCur\n\nend\n\nlocal function onSave()\n    return{\n        exp = exp,\n        pt = pt,\n        creation_complete = creation_complete\n    }\nend\n\nlocal function onLoad(data)\n    exp = data.exp\n    pt = data.pt\n    creation_complete = data.creation_complete\nend\n\nreturn {\n    engineHandlers = {\n        onSave = onSave,\n        onLoad = onLoad,\n        onKeyPress = function(key)\n            if key.symbol == 'x' then\n                ui.showMessage('Progress to next level is ' .. exp .. '/10')\n            end\n        end,\n        onUpdate = function()\n            if types.Actor.inventory(self):countOf(\"chargen statssheet\") > 0 and creation_complete == false then\n                creation_complete = true\n            end\n            if creation_complete == true then\n                expHandle()\n                skillHandle('mysticism', 'willpower')\n                skillHandle('destruction', 'willpower')\n                skillHandle('alteration', 'willpower')\n                skillHandle('conjuration', 'intelligence')\n                skillHandle('illusion', 'personality')\n                skillHandle('restoration', 'willpower')\n                skillHandle('alchemy', 'intelligence')\n                skillHandle('enchant', 'intelligence')\n                skillHandle('security', 'intelligence')\n                skillHandle('sneak', 'agility')\n                skillHandle('heavyarmor', 'endurance')\n                skillHandle('mediumarmor', 'endurance')\n                skillHandle('spear', 'endurance')\n                skillHandle('acrobatics', 'strength')\n                skillHandle('armorer', 'strength')\n                skillHandle('axe', 'strength')\n                skillHandle('bluntweapon', 'strength')\n                skillHandle('longblade', 'strength')\n                skillHandle('block', 'agility')\n                skillHandle('lightarmor', 'agility')\n                skillHandle('marksman', 'agility')\n                skillHandle('athletics', 'speed')\n                skillHandle('shortblade', 'speed')\n                skillHandle('unarmored', 'speed')\n                skillHandle('handtohand', 'speed')\n                skillHandle('mercantile', 'personality')\n                skillHandle('speechcraft', 'personality')\n            end\n        end,\n    },\n}"
  }
}